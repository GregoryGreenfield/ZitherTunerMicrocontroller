

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Apr 28 11:13:07 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30  0000                     
    31                           ; Version 1.41
    32                           ; Generated 25/01/2017 GMT
    33                           ; 
    34                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F46K40 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	idataCOMRAM
    67  000290                     __pidataCOMRAM:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _delay
    71  000290  0001               	dw	1
    72                           
    73                           ;initializer for _y
    74  000292  03E7               	dw	999
    75                           
    76                           	psect	nvCOMRAM
    77  00001D                     __pnvCOMRAM:
    78                           	opt stack 0
    79  00001D                     _timer1ReloadVal:
    80                           	opt stack 0
    81  00001D                     	ds	2
    82  0000                     _PIR4bits	set	3790
    83  0000                     _T4INPPSbits	set	3756
    84  0000                     _RC0PPS	set	3831
    85  0000                     _PPSLOCKbits	set	3744
    86  0000                     _PPSLOCK	set	3744
    87  0000                     _OSCTUNE	set	3805
    88  0000                     _OSCFRQ	set	3806
    89  0000                     _OSCEN	set	3804
    90  0000                     _OSCCON3	set	3802
    91  0000                     _OSCCON1	set	3800
    92  0000                     _PIE2bits	set	3780
    93  0000                     _PIR2bits	set	3788
    94  0000                     _ODCOND	set	3876
    95  0000                     _ODCONC	set	3871
    96  0000                     _ODCONB	set	3863
    97  0000                     _ODCONA	set	3855
    98  0000                     _ODCONE	set	3884
    99  0000                     _WPUC	set	3872
   100  0000                     _WPUA	set	3856
   101  0000                     _WPUB	set	3864
   102  0000                     _WPUE	set	3885
   103  0000                     _WPUD	set	3877
   104  0000                     _ANSELA	set	3857
   105  0000                     _ANSELE	set	3886
   106  0000                     _ANSELD	set	3878
   107  0000                     _ANSELB	set	3865
   108  0000                     _ANSELC	set	3873
   109  0000                     _ZCDCONbits	set	3890
   110  0000                     _ZCDCON	set	3890
   111  0000                     _INTCONbits	set	4082
   112  0000                     _PR4	set	4022
   113  0000                     _TMR4	set	4021
   114  0000                     _T4CONbits	set	4023
   115  0000                     _T4RSTbits	set	4026
   116  0000                     _T4HLTbits	set	4024
   117  0000                     _T4TMR	set	4021
   118  0000                     _T4PR	set	4022
   119  0000                     _T4RST	set	4026
   120  0000                     _T4HLT	set	4024
   121  0000                     _T4CLKCON	set	4025
   122  0000                     _T4CON	set	4023
   123  0000                     _CCP1CONbits	set	4012
   124  0000                     _CCPTMRSbits	set	4014
   125  0000                     _CCPR1L	set	4010
   126  0000                     _CCPR1H	set	4011
   127  0000                     _CCP1CON	set	4012
   128  0000                     _T1GCONbits	set	4048
   129  0000                     _T1CONbits	set	4047
   130  0000                     _TMR1L	set	4045
   131  0000                     _TMR1H	set	4046
   132  0000                     _T1CLK	set	4050
   133  0000                     _T1GATE	set	4049
   134  0000                     _T1GCON	set	4048
   135  0000                     _T1CON	set	4047
   136  0000                     _TRISD	set	3979
   137  0000                     _TRISC	set	3978
   138  0000                     _TRISB	set	3977
   139  0000                     _TRISA	set	3976
   140  0000                     _TRISE	set	3980
   141  0000                     _LATC	set	3973
   142  0000                     _LATB	set	3972
   143  0000                     _LATA	set	3971
   144  0000                     _LATD	set	3974
   145  0000                     _LATE	set	3975
   146  0000                     _INTCON	set	4082
   147  0000                     _GIE	set	32663
   148                           
   149                           ; #config settings
   150  0000                     
   151                           	psect	cinit
   152  00015A                     __pcinit:
   153                           	opt stack 0
   154  00015A                     start_initialization:
   155                           	opt stack 0
   156  00015A                     __initialization:
   157                           	opt stack 0
   158                           
   159                           ; Initialize objects allocated to COMRAM (4 bytes)
   160                           ; load TBLPTR registers with __pidataCOMRAM
   161  00015A  0E90               	movlw	low __pidataCOMRAM
   162  00015C  6EF6               	movwf	tblptrl,c
   163  00015E  0E02               	movlw	high __pidataCOMRAM
   164  000160  6EF7               	movwf	tblptrh,c
   165  000162  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   166  000164  6EF8               	movwf	tblptru,c
   167  000166  EE00  F019         	lfsr	0,__pdataCOMRAM
   168  00016A  EE10 F004          	lfsr	1,4
   169  00016E                     copy_data0:
   170  00016E  0009               	tblrd		*+
   171  000170  CFF5 FFEE          	movff	tablat,postinc0
   172  000174  50E5               	movf	postdec1,w,c
   173  000176  50E1               	movf	fsr1l,w,c
   174  000178  E1FA               	bnz	copy_data0
   175                           
   176                           ; Clear objects allocated to COMRAM (8 bytes)
   177  00017A  EE00  F011         	lfsr	0,__pbssCOMRAM
   178  00017E  0E08               	movlw	8
   179  000180                     clear_0:
   180  000180  6AEE               	clrf	postinc0,c
   181  000182  06E8               	decf	wreg,f,c
   182  000184  E1FD               	bnz	clear_0
   183  000186                     end_of_initialization:
   184                           	opt stack 0
   185  000186                     __end_of__initialization:
   186                           	opt stack 0
   187  000186  901F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   188  000188  921F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   189  00018A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   190  00018C  6EF8               	movwf	tblptru,c
   191  00018E  0100               	movlb	0
   192  000190  EF07  F001         	goto	_main	;jump to C main() function
   193                           tblptru	equ	0xFF8
   194                           tblptrh	equ	0xFF7
   195                           tblptrl	equ	0xFF6
   196                           tablat	equ	0xFF5
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           postdec1	equ	0xFE5
   200                           fsr1l	equ	0xFE1
   201                           
   202                           	psect	bssCOMRAM
   203  000011                     __pbssCOMRAM:
   204                           	opt stack 0
   205  000011                     _n:
   206                           	opt stack 0
   207  000011                     	ds	2
   208  000013                     _timer_value:
   209                           	opt stack 0
   210  000013                     	ds	2
   211  000015                     _TMR4_InterruptHandler:
   212                           	opt stack 0
   213  000015                     	ds	2
   214  000017                     _TMR1_InterruptHandler:
   215                           	opt stack 0
   216  000017                     	ds	2
   217                           tblptru	equ	0xFF8
   218                           tblptrh	equ	0xFF7
   219                           tblptrl	equ	0xFF6
   220                           tablat	equ	0xFF5
   221                           postinc0	equ	0xFEE
   222                           wreg	equ	0xFE8
   223                           postdec1	equ	0xFE5
   224                           fsr1l	equ	0xFE1
   225                           
   226                           	psect	dataCOMRAM
   227  000019                     __pdataCOMRAM:
   228                           	opt stack 0
   229  000019                     _delay:
   230                           	opt stack 0
   231  000019                     	ds	2
   232  00001B                     _y:
   233                           	opt stack 0
   234  00001B                     	ds	2
   235                           tblptru	equ	0xFF8
   236                           tblptrh	equ	0xFF7
   237                           tblptrl	equ	0xFF6
   238                           tablat	equ	0xFF5
   239                           postinc0	equ	0xFEE
   240                           wreg	equ	0xFE8
   241                           postdec1	equ	0xFE5
   242                           fsr1l	equ	0xFE1
   243                           
   244                           	psect	cstackCOMRAM
   245  000001                     __pcstackCOMRAM:
   246                           	opt stack 0
   247  000001                     ??_INTERRUPT_InterruptManager:
   248  000001                     
   249                           ; 2 bytes @ 0x0
   250  000001                     	ds	14
   251  00000F                     ??_TMR1_Initialize:
   252  00000F                     PIN_MANAGER_Initialize@state:
   253                           	opt stack 0
   254                           
   255                           ; 1 bytes @ 0xE
   256  00000F                     	ds	2
   257  000011                     tblptru	equ	0xFF8
   258                           tblptrh	equ	0xFF7
   259                           tblptrl	equ	0xFF6
   260                           tablat	equ	0xFF5
   261                           postinc0	equ	0xFEE
   262                           wreg	equ	0xFE8
   263                           postdec1	equ	0xFE5
   264                           fsr1l	equ	0xFE1
   265                           
   266                           ; 1 bytes @ 0x10
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 53 in file "main.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, status,2, status,0, cstack
   281 ;; Tracked objects:
   282 ;;		On entry : 0/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   290 ;;Total ram usage:        0 bytes
   291 ;; Hardware stack levels required when called:    6
   292 ;; This function calls:
   293 ;;		_PWM1_Initialize
   294 ;;		_SYSTEM_Initialize
   295 ;;		_ZCD_Initialize
   296 ;;		_phase_4
   297 ;; This function is called by:
   298 ;;		Startup code after reset
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302                           	psect	text0
   303  00020E                     __ptext0:
   304                           	opt stack 0
   305  00020E                     _main:
   306                           	opt stack 25
   307                           
   308                           ;main.c: 55: INTCON=0xE7;
   309                           
   310                           ;incstack = 0
   311  00020E  0EE7               	movlw	231
   312  000210  6EF2               	movwf	intcon,c	;volatile
   313                           
   314                           ;main.c: 56: SYSTEM_Initialize();
   315  000212  EC16  F001         	call	_SYSTEM_Initialize	;wreg free
   316                           
   317                           ;main.c: 57: PWM1_Initialize();
   318  000216  EC25  F001         	call	_PWM1_Initialize	;wreg free
   319                           
   320                           ;main.c: 58: ZCD_Initialize();
   321  00021A  EC30  F001         	call	_ZCD_Initialize	;wreg free
   322                           
   323                           ;main.c: 59: TRISA=0x00;
   324  00021E  0E00               	movlw	0
   325  000220  6E88               	movwf	3976,c	;volatile
   326                           
   327                           ;main.c: 61: phase_4();
   328  000222  EC3F  F001         	call	_phase_4	;wreg free
   329  000226                     l1189:
   330                           
   331                           ;main.c: 68: if (PIR2bits.ZCDIF=1){
   332  000226  010E               	movlb	14	; () banked
   333  000228  8DCC               	bsf	204,6,b	;volatile
   334                           
   335                           ; BSR set to: 14
   336                           
   337                           ; BSR set to: 14
   338  00022A  D7FD               	goto	l1189
   339  00022C                     __end_of_main:
   340                           	opt stack 0
   341                           tblptru	equ	0xFF8
   342                           tblptrh	equ	0xFF7
   343                           tblptrl	equ	0xFF6
   344                           tablat	equ	0xFF5
   345                           intcon	equ	0xFF2
   346                           postinc0	equ	0xFEE
   347                           wreg	equ	0xFE8
   348                           postdec1	equ	0xFE5
   349                           fsr1l	equ	0xFE1
   350                           
   351 ;; *************** function _phase_4 *****************
   352 ;; Defined at:
   353 ;;		line 28 in file "main.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;		None
   358 ;; Return value:  Size  Location     Type
   359 ;;                  2  272[None  ] int 
   360 ;; Registers used:
   361 ;;		wreg, status,2
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   371 ;;Total ram usage:        0 bytes
   372 ;; Hardware stack levels used:    1
   373 ;; Hardware stack levels required when called:    3
   374 ;; This function calls:
   375 ;;		Nothing
   376 ;; This function is called by:
   377 ;;		_main
   378 ;;		_S_4
   379 ;;		_T_4
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           	psect	text1
   384  00027E                     __ptext1:
   385                           	opt stack 0
   386  00027E                     _phase_4:
   387                           	opt stack 27
   388                           
   389                           ;main.c: 29: LATA=0x00;
   390                           
   391                           ; BSR set to: 14
   392                           ;incstack = 0
   393  00027E  0E00               	movlw	0
   394  000280  6E83               	movwf	3971,c	;volatile
   395  000282  0012               	return		;funcret
   396  000284                     __end_of_phase_4:
   397                           	opt stack 0
   398                           tblptru	equ	0xFF8
   399                           tblptrh	equ	0xFF7
   400                           tblptrl	equ	0xFF6
   401                           tablat	equ	0xFF5
   402                           intcon	equ	0xFF2
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           postdec1	equ	0xFE5
   406                           fsr1l	equ	0xFE1
   407                           
   408 ;; *************** function _SYSTEM_Initialize *****************
   409 ;; Defined at:
   410 ;;		line 107 in file "mcc_generated_files/mcc.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, status,2, status,0, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   428 ;;Total ram usage:        0 bytes
   429 ;; Hardware stack levels used:    1
   430 ;; Hardware stack levels required when called:    5
   431 ;; This function calls:
   432 ;;		_INTERRUPT_Initialize
   433 ;;		_OSCILLATOR_Initialize
   434 ;;		_PIN_MANAGER_Initialize
   435 ;;		_PWM1_Initialize
   436 ;;		_TMR1_Initialize
   437 ;;		_TMR4_Initialize
   438 ;;		_ZCD_Initialize
   439 ;; This function is called by:
   440 ;;		_main
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text2
   445  00022C                     __ptext2:
   446                           	opt stack 0
   447  00022C                     _SYSTEM_Initialize:
   448                           	opt stack 25
   449                           
   450                           ;mcc.c: 110: INTERRUPT_Initialize();
   451                           
   452                           ;incstack = 0
   453  00022C  EC4E  F001         	call	_INTERRUPT_Initialize	;wreg free
   454                           
   455                           ;mcc.c: 111: PIN_MANAGER_Initialize();
   456  000230  EC4E  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   457                           
   458                           ;mcc.c: 112: OSCILLATOR_Initialize();
   459  000234  ECF7  F000         	call	_OSCILLATOR_Initialize	;wreg free
   460                           
   461                           ;mcc.c: 113: PWM1_Initialize();
   462  000238  EC25  F001         	call	_PWM1_Initialize	;wreg free
   463                           
   464                           ;mcc.c: 114: TMR4_Initialize();
   465  00023C  ECE6  F000         	call	_TMR4_Initialize	;wreg free
   466                           
   467                           ;mcc.c: 115: TMR1_Initialize();
   468  000240  ECCA  F000         	call	_TMR1_Initialize	;wreg free
   469                           
   470                           ;mcc.c: 116: ZCD_Initialize();
   471  000244  EC30  F001         	call	_ZCD_Initialize	;wreg free
   472  000248  0012               	return		;funcret
   473  00024A                     __end_of_SYSTEM_Initialize:
   474                           	opt stack 0
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           tblptrl	equ	0xFF6
   478                           tablat	equ	0xFF5
   479                           intcon	equ	0xFF2
   480                           postinc0	equ	0xFEE
   481                           wreg	equ	0xFE8
   482                           postdec1	equ	0xFE5
   483                           fsr1l	equ	0xFE1
   484                           
   485 ;; *************** function _ZCD_Initialize *****************
   486 ;; Defined at:
   487 ;;		line 57 in file "mcc_generated_files/zcd.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;		None
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg, status,2
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   505 ;;Total ram usage:        0 bytes
   506 ;; Hardware stack levels used:    1
   507 ;; Hardware stack levels required when called:    3
   508 ;; This function calls:
   509 ;;		Nothing
   510 ;; This function is called by:
   511 ;;		_SYSTEM_Initialize
   512 ;;		_main
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text3
   517  000260                     __ptext3:
   518                           	opt stack 0
   519  000260                     _ZCD_Initialize:
   520                           	opt stack 27
   521                           
   522                           ;zcd.c: 62: ZCDCON = 0x82;
   523                           
   524                           ;incstack = 0
   525  000260  0E82               	movlw	130
   526  000262  010F               	movlb	15	; () banked
   527  000264  6F32               	movwf	50,b	;volatile
   528                           
   529                           ; BSR set to: 15
   530                           ;zcd.c: 65: PIR2bits.ZCDIF = 0;
   531  000266  010E               	movlb	14	; () banked
   532  000268  9DCC               	bcf	204,6,b	;volatile
   533                           
   534                           ; BSR set to: 14
   535                           ;zcd.c: 68: PIE2bits.ZCDIE = 1;
   536  00026A  010E               	movlb	14	; () banked
   537  00026C  8DC4               	bsf	196,6,b	;volatile
   538                           
   539                           ; BSR set to: 14
   540  00026E  0012               	return		;funcret
   541  000270                     __end_of_ZCD_Initialize:
   542                           	opt stack 0
   543                           tblptru	equ	0xFF8
   544                           tblptrh	equ	0xFF7
   545                           tblptrl	equ	0xFF6
   546                           tablat	equ	0xFF5
   547                           intcon	equ	0xFF2
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           postdec1	equ	0xFE5
   551                           fsr1l	equ	0xFE1
   552                           
   553 ;; *************** function _TMR4_Initialize *****************
   554 ;; Defined at:
   555 ;;		line 63 in file "mcc_generated_files/tmr4.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, status,2, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   573 ;;Total ram usage:        0 bytes
   574 ;; Hardware stack levels used:    1
   575 ;; Hardware stack levels required when called:    4
   576 ;; This function calls:
   577 ;;		_TMR4_Start
   578 ;; This function is called by:
   579 ;;		_SYSTEM_Initialize
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text4
   584  0001CC                     __ptext4:
   585                           	opt stack 0
   586  0001CC                     _TMR4_Initialize:
   587                           	opt stack 25
   588                           
   589                           ;tmr4.c: 68: T4CON = 0x70;
   590                           
   591                           ; BSR set to: 14
   592                           ;incstack = 0
   593  0001CC  0E70               	movlw	112
   594  0001CE  6EB7               	movwf	4023,c	;volatile
   595                           
   596                           ;tmr4.c: 71: T4CLKCON = 0x01;
   597  0001D0  0E01               	movlw	1
   598  0001D2  6EB9               	movwf	4025,c	;volatile
   599                           
   600                           ;tmr4.c: 74: T4HLT = 0x00;
   601  0001D4  0E00               	movlw	0
   602  0001D6  6EB8               	movwf	4024,c	;volatile
   603                           
   604                           ;tmr4.c: 77: T4RST = 0x00;
   605  0001D8  0E00               	movlw	0
   606  0001DA  6EBA               	movwf	4026,c	;volatile
   607                           
   608                           ;tmr4.c: 80: T4PR = 0x35;
   609  0001DC  0E35               	movlw	53
   610  0001DE  6EB6               	movwf	4022,c	;volatile
   611                           
   612                           ;tmr4.c: 83: T4TMR = 0x00;
   613  0001E0  0E00               	movlw	0
   614  0001E2  6EB5               	movwf	4021,c	;volatile
   615                           
   616                           ;tmr4.c: 86: PIR4bits.TMR4IF = 0;
   617  0001E4  010E               	movlb	14	; () banked
   618  0001E6  97CE               	bcf	206,3,b	;volatile
   619                           
   620                           ; BSR set to: 14
   621                           ;tmr4.c: 89: TMR4_Start();
   622  0001E8  EC4A  F001         	call	_TMR4_Start	;wreg free
   623  0001EC  0012               	return		;funcret
   624  0001EE                     __end_of_TMR4_Initialize:
   625                           	opt stack 0
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           intcon	equ	0xFF2
   631                           postinc0	equ	0xFEE
   632                           wreg	equ	0xFE8
   633                           postdec1	equ	0xFE5
   634                           fsr1l	equ	0xFE1
   635                           
   636 ;; *************** function _TMR4_Start *****************
   637 ;; Defined at:
   638 ;;		line 104 in file "mcc_generated_files/tmr4.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		None
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   656 ;;Total ram usage:        0 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; Hardware stack levels required when called:    3
   659 ;; This function calls:
   660 ;;		Nothing
   661 ;; This function is called by:
   662 ;;		_TMR4_Initialize
   663 ;;		_TMR4_StartTimer
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text5
   668  000294                     __ptext5:
   669                           	opt stack 0
   670  000294                     _TMR4_Start:
   671                           	opt stack 25
   672                           
   673                           ;tmr4.c: 107: T4CONbits.TMR4ON = 1;
   674                           
   675                           ;incstack = 0
   676  000294  8EB7               	bsf	4023,7,c	;volatile
   677  000296  0012               	return		;funcret
   678  000298                     __end_of_TMR4_Start:
   679                           	opt stack 0
   680                           tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           tblptrl	equ	0xFF6
   683                           tablat	equ	0xFF5
   684                           intcon	equ	0xFF2
   685                           postinc0	equ	0xFEE
   686                           wreg	equ	0xFE8
   687                           postdec1	equ	0xFE5
   688                           fsr1l	equ	0xFE1
   689                           
   690 ;; *************** function _TMR1_Initialize *****************
   691 ;; Defined at:
   692 ;;		line 63 in file "mcc_generated_files/tmr1.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;		None
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, status,2, status,0, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   708 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   709 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   710 ;;Total ram usage:        2 bytes
   711 ;; Hardware stack levels used:    1
   712 ;; Hardware stack levels required when called:    4
   713 ;; This function calls:
   714 ;;		_TMR1_StartTimer
   715 ;; This function is called by:
   716 ;;		_SYSTEM_Initialize
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text6
   721  000194                     __ptext6:
   722                           	opt stack 0
   723  000194                     _TMR1_Initialize:
   724                           	opt stack 25
   725                           
   726                           ;tmr1.c: 68: T1CON = 0x03;
   727                           
   728                           ;incstack = 0
   729  000194  0E03               	movlw	3
   730  000196  6ECF               	movwf	4047,c	;volatile
   731                           
   732                           ;tmr1.c: 71: T1GCON = 0x00;
   733  000198  0E00               	movlw	0
   734  00019A  6ED0               	movwf	4048,c	;volatile
   735                           
   736                           ;tmr1.c: 74: T1GATE = 0x00;
   737  00019C  0E00               	movlw	0
   738  00019E  6ED1               	movwf	4049,c	;volatile
   739                           
   740                           ;tmr1.c: 77: T1CLK = 0x01;
   741  0001A0  0E01               	movlw	1
   742  0001A2  6ED2               	movwf	4050,c	;volatile
   743                           
   744                           ;tmr1.c: 80: TMR1H = 0x06;
   745  0001A4  0E06               	movlw	6
   746  0001A6  6ECE               	movwf	4046,c	;volatile
   747                           
   748                           ;tmr1.c: 83: TMR1L = 0x00;
   749  0001A8  0E00               	movlw	0
   750  0001AA  6ECD               	movwf	4045,c	;volatile
   751                           
   752                           ;tmr1.c: 86: timer1ReloadVal=(TMR1H << 8) | TMR1L;
   753  0001AC  50CD               	movf	4045,w,c	;volatile
   754  0001AE  CFCE F00F          	movff	4046,??_TMR1_Initialize	;volatile
   755  0001B2  6A10               	clrf	(??_TMR1_Initialize+1)& (0+255),c
   756  0001B4  C00F  F010         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
   757  0001B8  6A0F               	clrf	??_TMR1_Initialize,c
   758  0001BA  100F               	iorwf	??_TMR1_Initialize,w,c
   759  0001BC  6E1D               	movwf	_timer1ReloadVal,c	;volatile
   760  0001BE  5010               	movf	??_TMR1_Initialize+1,w,c
   761  0001C0  6E1E               	movwf	_timer1ReloadVal+1,c	;volatile
   762                           
   763                           ;tmr1.c: 89: PIR4bits.TMR1IF = 0;
   764  0001C2  010E               	movlb	14	; () banked
   765  0001C4  91CE               	bcf	206,0,b	;volatile
   766                           
   767                           ; BSR set to: 14
   768                           ;tmr1.c: 92: TMR1_StartTimer();
   769  0001C6  EC4C  F001         	call	_TMR1_StartTimer	;wreg free
   770  0001CA  0012               	return		;funcret
   771  0001CC                     __end_of_TMR1_Initialize:
   772                           	opt stack 0
   773                           tblptru	equ	0xFF8
   774                           tblptrh	equ	0xFF7
   775                           tblptrl	equ	0xFF6
   776                           tablat	equ	0xFF5
   777                           intcon	equ	0xFF2
   778                           postinc0	equ	0xFEE
   779                           wreg	equ	0xFE8
   780                           postdec1	equ	0xFE5
   781                           fsr1l	equ	0xFE1
   782                           
   783 ;; *************** function _TMR1_StartTimer *****************
   784 ;; Defined at:
   785 ;;		line 95 in file "mcc_generated_files/tmr1.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		None
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   803 ;;Total ram usage:        0 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; Hardware stack levels required when called:    3
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_TMR1_Initialize
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text7
   814  000298                     __ptext7:
   815                           	opt stack 0
   816  000298                     _TMR1_StartTimer:
   817                           	opt stack 25
   818                           
   819                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
   820                           
   821                           ;incstack = 0
   822  000298  80CF               	bsf	4047,0,c	;volatile
   823  00029A  0012               	return		;funcret
   824  00029C                     __end_of_TMR1_StartTimer:
   825                           	opt stack 0
   826                           tblptru	equ	0xFF8
   827                           tblptrh	equ	0xFF7
   828                           tblptrl	equ	0xFF6
   829                           tablat	equ	0xFF5
   830                           intcon	equ	0xFF2
   831                           postinc0	equ	0xFEE
   832                           wreg	equ	0xFE8
   833                           postdec1	equ	0xFE5
   834                           fsr1l	equ	0xFE1
   835                           
   836 ;; *************** function _PWM1_Initialize *****************
   837 ;; Defined at:
   838 ;;		line 63 in file "mcc_generated_files/pwm1.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;		None
   841 ;; Auto vars:     Size  Location     Type
   842 ;;		None
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, status,2
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   856 ;;Total ram usage:        0 bytes
   857 ;; Hardware stack levels used:    1
   858 ;; Hardware stack levels required when called:    3
   859 ;; This function calls:
   860 ;;		Nothing
   861 ;; This function is called by:
   862 ;;		_SYSTEM_Initialize
   863 ;;		_main
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text8
   868  00024A                     __ptext8:
   869                           	opt stack 0
   870  00024A                     _PWM1_Initialize:
   871                           	opt stack 26
   872                           
   873                           ;pwm1.c: 68: CCP1CON = 0x8C;
   874                           
   875                           ;incstack = 0
   876  00024A  0E8C               	movlw	140
   877  00024C  6EAC               	movwf	4012,c	;volatile
   878                           
   879                           ;pwm1.c: 71: CCPR1H = 0x00;
   880  00024E  0E00               	movlw	0
   881  000250  6EAB               	movwf	4011,c	;volatile
   882                           
   883                           ;pwm1.c: 74: CCPR1L = 0x6B;
   884  000252  0E6B               	movlw	107
   885  000254  6EAA               	movwf	4010,c	;volatile
   886                           
   887                           ;pwm1.c: 77: CCPTMRSbits.C1TSEL = 0x2;
   888  000256  50AE               	movf	4014,w,c	;volatile
   889  000258  0BFC               	andlw	-4
   890  00025A  0902               	iorlw	2
   891  00025C  6EAE               	movwf	4014,c	;volatile
   892  00025E  0012               	return		;funcret
   893  000260                     __end_of_PWM1_Initialize:
   894                           	opt stack 0
   895                           tblptru	equ	0xFF8
   896                           tblptrh	equ	0xFF7
   897                           tblptrl	equ	0xFF6
   898                           tablat	equ	0xFF5
   899                           intcon	equ	0xFF2
   900                           postinc0	equ	0xFEE
   901                           wreg	equ	0xFE8
   902                           postdec1	equ	0xFE5
   903                           fsr1l	equ	0xFE1
   904                           
   905 ;; *************** function _PIN_MANAGER_Initialize *****************
   906 ;; Defined at:
   907 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  state           1   14[COMRAM] unsigned char 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg, status,2
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   925 ;;Total ram usage:        1 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; Hardware stack levels required when called:    3
   928 ;; This function calls:
   929 ;;		Nothing
   930 ;; This function is called by:
   931 ;;		_SYSTEM_Initialize
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text9
   936  00009C                     __ptext9:
   937                           	opt stack 0
   938  00009C                     _PIN_MANAGER_Initialize:
   939                           	opt stack 26
   940                           
   941                           ;pin_manager.c: 56: LATE = 0x00;
   942                           
   943                           ;incstack = 0
   944  00009C  0E00               	movlw	0
   945  00009E  6E87               	movwf	3975,c	;volatile
   946                           
   947                           ;pin_manager.c: 57: LATD = 0x00;
   948  0000A0  0E00               	movlw	0
   949  0000A2  6E86               	movwf	3974,c	;volatile
   950                           
   951                           ;pin_manager.c: 58: LATA = 0x00;
   952  0000A4  0E00               	movlw	0
   953  0000A6  6E83               	movwf	3971,c	;volatile
   954                           
   955                           ;pin_manager.c: 59: LATB = 0x00;
   956  0000A8  0E00               	movlw	0
   957  0000AA  6E84               	movwf	3972,c	;volatile
   958                           
   959                           ;pin_manager.c: 60: LATC = 0x00;
   960  0000AC  0E00               	movlw	0
   961  0000AE  6E85               	movwf	3973,c	;volatile
   962                           
   963                           ;pin_manager.c: 65: TRISE = 0x07;
   964  0000B0  0E07               	movlw	7
   965  0000B2  6E8C               	movwf	3980,c	;volatile
   966                           
   967                           ;pin_manager.c: 66: TRISA = 0xFF;
   968  0000B4  6888               	setf	3976,c	;volatile
   969                           
   970                           ;pin_manager.c: 67: TRISB = 0xFF;
   971  0000B6  6889               	setf	3977,c	;volatile
   972                           
   973                           ;pin_manager.c: 68: TRISC = 0xFE;
   974  0000B8  0EFE               	movlw	254
   975  0000BA  6E8A               	movwf	3978,c	;volatile
   976                           
   977                           ;pin_manager.c: 69: TRISD = 0xFF;
   978  0000BC  688B               	setf	3979,c	;volatile
   979                           
   980                           ;pin_manager.c: 74: ANSELC = 0xDF;
   981  0000BE  0EDF               	movlw	223
   982  0000C0  010F               	movlb	15	; () banked
   983  0000C2  6F21               	movwf	33,b	;volatile
   984                           
   985                           ; BSR set to: 15
   986                           ;pin_manager.c: 75: ANSELB = 0xFF;
   987  0000C4  010F               	movlb	15	; () banked
   988  0000C6  6919               	setf	25,b	;volatile
   989                           
   990                           ; BSR set to: 15
   991                           ;pin_manager.c: 76: ANSELD = 0xFF;
   992  0000C8  010F               	movlb	15	; () banked
   993  0000CA  6926               	setf	38,b	;volatile
   994                           
   995                           ;pin_manager.c: 77: ANSELE = 0x07;
   996  0000CC  0E07               	movlw	7
   997  0000CE  010F               	movlb	15	; () banked
   998  0000D0  6F2E               	movwf	46,b	;volatile
   999                           
  1000                           ; BSR set to: 15
  1001                           ;pin_manager.c: 78: ANSELA = 0xFF;
  1002  0000D2  010F               	movlb	15	; () banked
  1003  0000D4  6911               	setf	17,b	;volatile
  1004                           
  1005                           ;pin_manager.c: 83: WPUD = 0x00;
  1006  0000D6  0E00               	movlw	0
  1007  0000D8  010F               	movlb	15	; () banked
  1008  0000DA  6F25               	movwf	37,b	;volatile
  1009                           
  1010                           ;pin_manager.c: 84: WPUE = 0x00;
  1011  0000DC  0E00               	movlw	0
  1012  0000DE  010F               	movlb	15	; () banked
  1013  0000E0  6F2D               	movwf	45,b	;volatile
  1014                           
  1015                           ;pin_manager.c: 85: WPUB = 0x00;
  1016  0000E2  0E00               	movlw	0
  1017  0000E4  010F               	movlb	15	; () banked
  1018  0000E6  6F18               	movwf	24,b	;volatile
  1019                           
  1020                           ;pin_manager.c: 86: WPUA = 0x00;
  1021  0000E8  0E00               	movlw	0
  1022  0000EA  010F               	movlb	15	; () banked
  1023  0000EC  6F10               	movwf	16,b	;volatile
  1024                           
  1025                           ;pin_manager.c: 87: WPUC = 0x00;
  1026  0000EE  0E00               	movlw	0
  1027  0000F0  010F               	movlb	15	; () banked
  1028  0000F2  6F20               	movwf	32,b	;volatile
  1029                           
  1030                           ;pin_manager.c: 92: ODCONE = 0x00;
  1031  0000F4  0E00               	movlw	0
  1032  0000F6  010F               	movlb	15	; () banked
  1033  0000F8  6F2C               	movwf	44,b	;volatile
  1034                           
  1035                           ;pin_manager.c: 93: ODCONA = 0x00;
  1036  0000FA  0E00               	movlw	0
  1037  0000FC  010F               	movlb	15	; () banked
  1038  0000FE  6F0F               	movwf	15,b	;volatile
  1039                           
  1040                           ;pin_manager.c: 94: ODCONB = 0x00;
  1041  000100  0E00               	movlw	0
  1042  000102  010F               	movlb	15	; () banked
  1043  000104  6F17               	movwf	23,b	;volatile
  1044                           
  1045                           ;pin_manager.c: 95: ODCONC = 0x00;
  1046  000106  0E00               	movlw	0
  1047  000108  010F               	movlb	15	; () banked
  1048  00010A  6F1F               	movwf	31,b	;volatile
  1049                           
  1050                           ;pin_manager.c: 96: ODCOND = 0x00;
  1051  00010C  0E00               	movlw	0
  1052  00010E  010F               	movlb	15	; () banked
  1053  000110  6F24               	movwf	36,b	;volatile
  1054                           
  1055                           ;pin_manager.c: 103: bool state = GIE;
  1056  000112  0E00               	movlw	0
  1057  000114  BEF2               	btfsc	intcon,7,c	;volatile
  1058  000116  0E01               	movlw	1
  1059  000118  6E0F               	movwf	PIN_MANAGER_Initialize@state,c
  1060                           
  1061                           ; BSR set to: 15
  1062                           ;pin_manager.c: 104: GIE = 0;
  1063  00011A  9EF2               	bcf	intcon,7,c	;volatile
  1064                           
  1065                           ;pin_manager.c: 105: PPSLOCK = 0x55;
  1066  00011C  0E55               	movlw	85
  1067  00011E  010E               	movlb	14	; () banked
  1068  000120  6FA0               	movwf	160,b	;volatile
  1069                           
  1070                           ;pin_manager.c: 106: PPSLOCK = 0xAA;
  1071  000122  0EAA               	movlw	170
  1072  000124  010E               	movlb	14	; () banked
  1073  000126  6FA0               	movwf	160,b	;volatile
  1074                           
  1075                           ; BSR set to: 14
  1076                           ;pin_manager.c: 107: PPSLOCKbits.PPSLOCKED = 0x00;
  1077  000128  010E               	movlb	14	; () banked
  1078  00012A  91A0               	bcf	160,0,b	;volatile
  1079                           
  1080                           ;pin_manager.c: 109: RC0PPS = 0x05;
  1081  00012C  0E05               	movlw	5
  1082  00012E  010E               	movlb	14	; () banked
  1083  000130  6FF7               	movwf	247,b	;volatile
  1084                           
  1085                           ; BSR set to: 14
  1086                           ;pin_manager.c: 110: T4INPPSbits.T4INPPS = 0x15;
  1087  000132  010E               	movlb	14	; () banked
  1088  000134  81AC               	bsf	172,0,b	;volatile
  1089  000136  93AC               	bcf	172,1,b	;volatile
  1090  000138  85AC               	bsf	172,2,b	;volatile
  1091  00013A  97AC               	bcf	172,3,b	;volatile
  1092  00013C  89AC               	bsf	172,4,b	;volatile
  1093                           
  1094                           ;pin_manager.c: 112: PPSLOCK = 0x55;
  1095  00013E  0E55               	movlw	85
  1096  000140  010E               	movlb	14	; () banked
  1097  000142  6FA0               	movwf	160,b	;volatile
  1098                           
  1099                           ;pin_manager.c: 113: PPSLOCK = 0xAA;
  1100  000144  0EAA               	movlw	170
  1101  000146  010E               	movlb	14	; () banked
  1102  000148  6FA0               	movwf	160,b	;volatile
  1103                           
  1104                           ; BSR set to: 14
  1105                           ;pin_manager.c: 114: PPSLOCKbits.PPSLOCKED = 0x01;
  1106  00014A  010E               	movlb	14	; () banked
  1107  00014C  81A0               	bsf	160,0,b	;volatile
  1108                           
  1109                           ; BSR set to: 14
  1110                           ;pin_manager.c: 116: GIE = state;
  1111  00014E  A00F               	btfss	PIN_MANAGER_Initialize@state,0,c
  1112  000150  D002               	goto	u10
  1113  000152  8EF2               	bsf	intcon,7,c	;volatile
  1114  000154  0012               	return	
  1115  000156                     u10:
  1116  000156  9EF2               	bcf	intcon,7,c	;volatile
  1117  000158  0012               	return		;funcret
  1118  00015A                     __end_of_PIN_MANAGER_Initialize:
  1119                           	opt stack 0
  1120                           tblptru	equ	0xFF8
  1121                           tblptrh	equ	0xFF7
  1122                           tblptrl	equ	0xFF6
  1123                           tablat	equ	0xFF5
  1124                           intcon	equ	0xFF2
  1125                           postinc0	equ	0xFEE
  1126                           wreg	equ	0xFE8
  1127                           postdec1	equ	0xFE5
  1128                           fsr1l	equ	0xFE1
  1129                           
  1130 ;; *************** function _OSCILLATOR_Initialize *****************
  1131 ;; Defined at:
  1132 ;;		line 119 in file "mcc_generated_files/mcc.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1150 ;;Total ram usage:        0 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    3
  1153 ;; This function calls:
  1154 ;;		Nothing
  1155 ;; This function is called by:
  1156 ;;		_SYSTEM_Initialize
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text10
  1161  0001EE                     __ptext10:
  1162                           	opt stack 0
  1163  0001EE                     _OSCILLATOR_Initialize:
  1164                           	opt stack 26
  1165                           
  1166                           ;mcc.c: 122: OSCCON1 = 0x60;
  1167                           
  1168                           ;incstack = 0
  1169  0001EE  0E60               	movlw	96
  1170  0001F0  010E               	movlb	14	; () banked
  1171  0001F2  6FD8               	movwf	216,b	;volatile
  1172                           
  1173                           ;mcc.c: 124: OSCCON3 = 0x00;
  1174  0001F4  0E00               	movlw	0
  1175  0001F6  010E               	movlb	14	; () banked
  1176  0001F8  6FDA               	movwf	218,b	;volatile
  1177                           
  1178                           ;mcc.c: 126: OSCEN = 0x00;
  1179  0001FA  0E00               	movlw	0
  1180  0001FC  010E               	movlb	14	; () banked
  1181  0001FE  6FDC               	movwf	220,b	;volatile
  1182                           
  1183                           ;mcc.c: 128: OSCFRQ = 0x08;
  1184  000200  0E08               	movlw	8
  1185  000202  010E               	movlb	14	; () banked
  1186  000204  6FDE               	movwf	222,b	;volatile
  1187                           
  1188                           ;mcc.c: 130: OSCTUNE = 0x00;
  1189  000206  0E00               	movlw	0
  1190  000208  010E               	movlb	14	; () banked
  1191  00020A  6FDD               	movwf	221,b	;volatile
  1192                           
  1193                           ; BSR set to: 14
  1194  00020C  0012               	return		;funcret
  1195  00020E                     __end_of_OSCILLATOR_Initialize:
  1196                           	opt stack 0
  1197                           tblptru	equ	0xFF8
  1198                           tblptrh	equ	0xFF7
  1199                           tblptrl	equ	0xFF6
  1200                           tablat	equ	0xFF5
  1201                           intcon	equ	0xFF2
  1202                           postinc0	equ	0xFEE
  1203                           wreg	equ	0xFE8
  1204                           postdec1	equ	0xFE5
  1205                           fsr1l	equ	0xFE1
  1206                           
  1207 ;; *************** function _INTERRUPT_Initialize *****************
  1208 ;; Defined at:
  1209 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		None
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    3
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_SYSTEM_Initialize
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text11
  1238  00029C                     __ptext11:
  1239                           	opt stack 0
  1240  00029C                     _INTERRUPT_Initialize:
  1241                           	opt stack 26
  1242                           
  1243                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 0;
  1244                           
  1245                           ; BSR set to: 14
  1246                           ;incstack = 0
  1247  00029C  9AF2               	bcf	intcon,5,c	;volatile
  1248  00029E  0012               	return		;funcret
  1249  0002A0                     __end_of_INTERRUPT_Initialize:
  1250                           	opt stack 0
  1251                           tblptru	equ	0xFF8
  1252                           tblptrh	equ	0xFF7
  1253                           tblptrl	equ	0xFF6
  1254                           tablat	equ	0xFF5
  1255                           intcon	equ	0xFF2
  1256                           postinc0	equ	0xFEE
  1257                           wreg	equ	0xFE8
  1258                           postdec1	equ	0xFE5
  1259                           fsr1l	equ	0xFE1
  1260                           
  1261 ;; *************** function _INTERRUPT_InterruptManager *****************
  1262 ;; Defined at:
  1263 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;		None
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;		None
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1279 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1280 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1281 ;;Total ram usage:       14 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    2
  1284 ;; This function calls:
  1285 ;;		_ZCD_ISR
  1286 ;;		i2_phase_4
  1287 ;; This function is called by:
  1288 ;;		Interrupt level 2
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	intcode
  1293  000008                     __pintcode:
  1294                           	opt stack 0
  1295  000008                     _INTERRUPT_InterruptManager:
  1296                           	opt stack 25
  1297                           
  1298                           ;incstack = 0
  1299  000008  821F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1300  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  1301  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1302  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1303  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1304  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1305  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1306  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1307  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1308  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1309  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1310  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1311  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1312  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1313  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1314                           
  1315                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE2bits.ZCDIE == 1 && PIR2bits.ZCD
      +                          IF == 1)
  1316  000042  ACF2               	btfss	intcon,6,c	;volatile
  1317  000044  D009               	goto	i2l1151
  1318  000046  010E               	movlb	14	; () banked
  1319  000048  ADC4               	btfss	196,6,b	;volatile
  1320  00004A  D006               	goto	i2l1151
  1321                           
  1322                           ; BSR set to: 14
  1323  00004C  010E               	movlb	14	; () banked
  1324  00004E  ADCC               	btfss	204,6,b	;volatile
  1325  000050  D003               	goto	i2l1151
  1326                           
  1327                           ; BSR set to: 14
  1328                           ;interrupt_manager.c: 61: {
  1329                           ;interrupt_manager.c: 62: ZCD_ISR();
  1330  000052  EC38  F001         	call	_ZCD_ISR	;wreg free
  1331                           
  1332                           ;interrupt_manager.c: 63: }
  1333  000056  D002               	goto	i2l280
  1334  000058                     i2l1151:
  1335                           
  1336                           ;interrupt_manager.c: 64: else
  1337                           ;interrupt_manager.c: 65: {
  1338                           ;interrupt_manager.c: 66: phase_4();
  1339  000058  EC42  F001         	call	i2_phase_4	;wreg free
  1340  00005C                     i2l280:
  1341  00005C  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1342  000060  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1343  000064  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1344  000068  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1345  00006C  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1346  000070  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1347  000074  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1348  000078  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1349  00007C  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1350  000080  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1351  000084  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1352  000088  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1353  00008C  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1354  000090  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1355  000094  921F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1356  000096  0011               	retfie		f
  1357  000098                     __end_of_INTERRUPT_InterruptManager:
  1358                           	opt stack 0
  1359                           pclatu	equ	0xFFB
  1360                           pclath	equ	0xFFA
  1361                           tblptru	equ	0xFF8
  1362                           tblptrh	equ	0xFF7
  1363                           tblptrl	equ	0xFF6
  1364                           tablat	equ	0xFF5
  1365                           prodh	equ	0xFF4
  1366                           prodl	equ	0xFF3
  1367                           intcon	equ	0xFF2
  1368                           postinc0	equ	0xFEE
  1369                           fsr0h	equ	0xFEA
  1370                           fsr0l	equ	0xFE9
  1371                           wreg	equ	0xFE8
  1372                           postdec1	equ	0xFE5
  1373                           fsr1h	equ	0xFE2
  1374                           fsr1l	equ	0xFE1
  1375                           fsr2h	equ	0xFDA
  1376                           fsr2l	equ	0xFD9
  1377                           
  1378 ;; *************** function i2_phase_4 *****************
  1379 ;; Defined at:
  1380 ;;		line 28 in file "main.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  2    0[None  ] int 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1398 ;;Total ram usage:        0 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_INTERRUPT_InterruptManager
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text13
  1408  000284                     __ptext13:
  1409                           	opt stack 0
  1410  000284                     i2_phase_4:
  1411                           	opt stack 26
  1412                           
  1413                           ;main.c: 29: LATA=0x00;
  1414                           
  1415                           ;incstack = 0
  1416  000284  0E00               	movlw	0
  1417  000286  6E83               	movwf	3971,c	;volatile
  1418  000288  0012               	return		;funcret
  1419  00028A                     __end_ofi2_phase_4:
  1420                           	opt stack 0
  1421                           pclatu	equ	0xFFB
  1422                           pclath	equ	0xFFA
  1423                           tblptru	equ	0xFF8
  1424                           tblptrh	equ	0xFF7
  1425                           tblptrl	equ	0xFF6
  1426                           tablat	equ	0xFF5
  1427                           prodh	equ	0xFF4
  1428                           prodl	equ	0xFF3
  1429                           intcon	equ	0xFF2
  1430                           postinc0	equ	0xFEE
  1431                           fsr0h	equ	0xFEA
  1432                           fsr0l	equ	0xFE9
  1433                           wreg	equ	0xFE8
  1434                           postdec1	equ	0xFE5
  1435                           fsr1h	equ	0xFE2
  1436                           fsr1l	equ	0xFE1
  1437                           fsr2h	equ	0xFDA
  1438                           fsr2l	equ	0xFD9
  1439                           
  1440 ;; *************** function _ZCD_ISR *****************
  1441 ;; Defined at:
  1442 ;;		line 77 in file "mcc_generated_files/zcd.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1460 ;;Total ram usage:        0 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    1
  1463 ;; This function calls:
  1464 ;;		_phase_2
  1465 ;; This function is called by:
  1466 ;;		_INTERRUPT_InterruptManager
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text14
  1471  000270                     __ptext14:
  1472                           	opt stack 0
  1473  000270                     _ZCD_ISR:
  1474                           	opt stack 25
  1475                           
  1476                           ;zcd.c: 80: PIR2bits.ZCDIF=0;
  1477                           
  1478                           ;incstack = 0
  1479  000270  010E               	movlb	14	; () banked
  1480  000272  9DCC               	bcf	204,6,b	;volatile
  1481                           
  1482                           ; BSR set to: 14
  1483                           ;zcd.c: 81: INTCON=0xE7;
  1484  000274  0EE7               	movlw	231
  1485  000276  6EF2               	movwf	intcon,c	;volatile
  1486                           
  1487                           ; BSR set to: 14
  1488                           ;zcd.c: 82: phase_2();
  1489  000278  EC45  F001         	call	_phase_2	;wreg free
  1490  00027C  0012               	return		;funcret
  1491  00027E                     __end_of_ZCD_ISR:
  1492                           	opt stack 0
  1493                           pclatu	equ	0xFFB
  1494                           pclath	equ	0xFFA
  1495                           tblptru	equ	0xFF8
  1496                           tblptrh	equ	0xFF7
  1497                           tblptrl	equ	0xFF6
  1498                           tablat	equ	0xFF5
  1499                           prodh	equ	0xFF4
  1500                           prodl	equ	0xFF3
  1501                           intcon	equ	0xFF2
  1502                           postinc0	equ	0xFEE
  1503                           fsr0h	equ	0xFEA
  1504                           fsr0l	equ	0xFE9
  1505                           wreg	equ	0xFE8
  1506                           postdec1	equ	0xFE5
  1507                           fsr1h	equ	0xFE2
  1508                           fsr1l	equ	0xFE1
  1509                           fsr2h	equ	0xFDA
  1510                           fsr2l	equ	0xFD9
  1511                           
  1512 ;; *************** function _phase_2 *****************
  1513 ;; Defined at:
  1514 ;;		line 22 in file "main.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  2   12[None  ] int 
  1521 ;; Registers used:
  1522 ;;		wreg, status,2
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1532 ;;Total ram usage:        0 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; This function calls:
  1535 ;;		Nothing
  1536 ;; This function is called by:
  1537 ;;		_ZCD_ISR
  1538 ;;		_S_4
  1539 ;;		_T_4
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text15
  1544  00028A                     __ptext15:
  1545                           	opt stack 0
  1546  00028A                     _phase_2:
  1547                           	opt stack 25
  1548                           
  1549                           ;main.c: 23: LATA=0x06;
  1550                           
  1551                           ;incstack = 0
  1552  00028A  0E06               	movlw	6
  1553  00028C  6E83               	movwf	3971,c	;volatile
  1554  00028E  0012               	return		;funcret
  1555  000290                     __end_of_phase_2:
  1556                           	opt stack 0
  1557  0000                     pclatu	equ	0xFFB
  1558                           pclath	equ	0xFFA
  1559                           tblptru	equ	0xFF8
  1560                           tblptrh	equ	0xFF7
  1561                           tblptrl	equ	0xFF6
  1562                           tablat	equ	0xFF5
  1563                           prodh	equ	0xFF4
  1564                           prodl	equ	0xFF3
  1565                           intcon	equ	0xFF2
  1566                           postinc0	equ	0xFEE
  1567                           fsr0h	equ	0xFEA
  1568                           fsr0l	equ	0xFE9
  1569                           wreg	equ	0xFE8
  1570                           postdec1	equ	0xFE5
  1571                           fsr1h	equ	0xFE2
  1572                           fsr1l	equ	0xFE1
  1573                           fsr2h	equ	0xFDA
  1574                           fsr2l	equ	0xFD9
  1575                           pclatu	equ	0xFFB
  1576                           pclath	equ	0xFFA
  1577                           tblptru	equ	0xFF8
  1578                           tblptrh	equ	0xFF7
  1579                           tblptrl	equ	0xFF6
  1580                           tablat	equ	0xFF5
  1581                           prodh	equ	0xFF4
  1582                           prodl	equ	0xFF3
  1583                           intcon	equ	0xFF2
  1584                           postinc0	equ	0xFEE
  1585                           fsr0h	equ	0xFEA
  1586                           fsr0l	equ	0xFE9
  1587                           wreg	equ	0xFE8
  1588                           postdec1	equ	0xFE5
  1589                           fsr1h	equ	0xFE2
  1590                           fsr1l	equ	0xFE1
  1591                           fsr2h	equ	0xFDA
  1592                           fsr2l	equ	0xFD9
  1593                           
  1594                           	psect	rparam
  1595  0000                     pclatu	equ	0xFFB
  1596                           pclath	equ	0xFFA
  1597                           tblptru	equ	0xFF8
  1598                           tblptrh	equ	0xFF7
  1599                           tblptrl	equ	0xFF6
  1600                           tablat	equ	0xFF5
  1601                           prodh	equ	0xFF4
  1602                           prodl	equ	0xFF3
  1603                           intcon	equ	0xFF2
  1604                           postinc0	equ	0xFEE
  1605                           fsr0h	equ	0xFEA
  1606                           fsr0l	equ	0xFE9
  1607                           wreg	equ	0xFE8
  1608                           postdec1	equ	0xFE5
  1609                           fsr1h	equ	0xFE2
  1610                           fsr1l	equ	0xFE1
  1611                           fsr2h	equ	0xFDA
  1612                           fsr2l	equ	0xFD9
  1613                           
  1614                           	psect	temp
  1615  00001F                     btemp:
  1616                           	opt stack 0
  1617  00001F                     	ds	1
  1618  0000                     int$flags	set	btemp
  1619                           pclatu	equ	0xFFB
  1620                           pclath	equ	0xFFA
  1621                           tblptru	equ	0xFF8
  1622                           tblptrh	equ	0xFF7
  1623                           tblptrl	equ	0xFF6
  1624                           tablat	equ	0xFF5
  1625                           prodh	equ	0xFF4
  1626                           prodl	equ	0xFF3
  1627                           intcon	equ	0xFF2
  1628                           postinc0	equ	0xFEE
  1629                           fsr0h	equ	0xFEA
  1630                           fsr0l	equ	0xFE9
  1631                           wreg	equ	0xFE8
  1632                           postdec1	equ	0xFE5
  1633                           fsr1h	equ	0xFE2
  1634                           fsr1l	equ	0xFE1
  1635                           fsr2h	equ	0xFDA
  1636                           fsr2l	equ	0xFD9


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         8
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     16      30
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0

Pointer List with Targets:

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                    _PWM1_Initialize
                  _SYSTEM_Initialize
                     _ZCD_Initialize
                            _phase_4
 ---------------------------------------------------------------------------------
 (1) _phase_4                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _TMR1_Initialize
                    _TMR4_Initialize
                     _ZCD_Initialize
 ---------------------------------------------------------------------------------
 (1) _ZCD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (3) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             14 COMRAM     2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ZCD_ISR
                          i2_phase_4
 ---------------------------------------------------------------------------------
 (5) i2_phase_4                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ZCD_ISR                                              0     0      0       0
                            _phase_2
 ---------------------------------------------------------------------------------
 (6) _phase_2                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Initialize
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR4_Initialize
       _TMR4_Start
     _ZCD_Initialize
   _ZCD_Initialize
   _phase_4

 _INTERRUPT_InterruptManager (ROOT)
   _ZCD_ISR
     _phase_2
   i2_phase_4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     10      1E       1       31.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E       6        0.0%
DATA                 0      0      1E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Apr 28 11:13:07 2017

                                  _n 0011                                    _y 001B  
                        __CFG_CP$OFF 000000                                   u10 0156  
                        __CFG_LVP$ON 000000                                  _GIE 007F97  
                                _PR4 000FB6                         __CFG_CPD$OFF 000000  
                    _timer1ReloadVal 001D                      ?_ZCD_Initialize 0001  
                                wreg 000FE8                         __CFG_ZCD$OFF 000000  
                               l1189 0226              __end_of_PWM1_Initialize 0260  
                               _LATA 000F83                                 _LATB 000F84  
                               _LATC 000F85                                 _LATD 000F86  
                               _LATE 000F87                                 _T4PR 000FB6  
                               _TMR4 000FB5                                 _WPUA 000F10  
                               _WPUB 000F18                                 _WPUC 000F20  
                               _WPUD 000F25                                 _WPUE 000F2D  
                      __CFG_FCMEN$ON 000000                                 _main 020E  
                    __end_of_ZCD_ISR 027E                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr2h 000FDA  
                               fsr0l 000FE9                                 fsr1l 000FE1  
                               fsr2l 000FD9                                 btemp 001F  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0098                        __CFG_CSWEN$ON 000000  
                       ___param_bank 000000                        __CFG_SCANE$ON 000000  
     __size_of_OSCILLATOR_Initialize 0020        __end_of_OSCILLATOR_Initialize 020E  
                              ?_main 0001                        __CFG_WDTE$OFF 000000  
                    _TMR1_StartTimer 0298                                _T1CLK 000FD2  
                              _T1CON 000FCF                                _T4CON 000FB7  
                              _T4HLT 000FB8                       __CFG_DEBUG$OFF 000000  
                              _T4TMR 000FB5                                _T4RST 000FBA  
                              i2l280 005C                                _OSCEN 000EDC  
                              _TMR1H 000FCE                                _TMR1L 000FCD  
                              _TRISA 000F88                                _TRISB 000F89  
                              _TRISC 000F8A                                _TRISD 000F8B  
                              _TRISE 000F8C                        __CFG_WRT0$OFF 000000  
                    _TMR4_Initialize 01CC                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
                     __CFG_EBTR0$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                              _delay 0019                          ?_TMR4_Start 0001  
                    __end_of_phase_2 0290                      __end_of_phase_4 0284  
                 __CFG_MCLRE$EXTMCLR 000000              __end_of_TMR1_Initialize 01CC  
                              pclath 000FFA                                tablat 000FF5  
                    __initialization 015A                         __end_of_main 022C  
                 __size_ofi2_phase_4 0006          ?_INTERRUPT_InterruptManager 0001  
                             ??_main 0011                        __activetblptr 000002  
                          ??_ZCD_ISR 0001                               _CCPR1H 000FAB  
                             _CCPR1L 000FAA                               _ANSELA 000F11  
                             _ANSELB 000F19                               _ANSELC 000F21  
                             _ANSELD 000F26                               _ANSELE 000F2E  
                             _T1GATE 000FD1                               _T1GCON 000FD0  
                             _RC0PPS 000EF7                     ?_PWM1_Initialize 0001  
                             _ODCONA 000F0F                               _ODCONB 000F17  
                             _ODCONC 000F1F                               _ODCOND 000F24  
                             _ODCONE 000F2C                               i2l1151 0058  
                     __CFG_WDTCCS$SC 000000                               _INTCON 000FF2  
                             _OSCFRQ 000EDE                               _ZCDCON 000F32  
                     __CFG_PWRTE$OFF 000000                       __CFG_XINST$OFF 000000  
            __end_of_TMR1_StartTimer 029C                       __CFG_STVREN$ON 000000  
                __size_of_TMR4_Start 0004              __end_of_TMR4_Initialize 01EE  
                             clear_0 0180                         __pdataCOMRAM 0019  
                          ??_phase_2 0001                            ??_phase_4 000F  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8        __size_of_INTERRUPT_Initialize 0004  
                   ?_TMR1_Initialize 0001                    _SYSTEM_Initialize 022C  
                  __end_ofi2_phase_4 028A                           __accesstop 0060  
            __end_of__initialization 0186                   ?_SYSTEM_Initialize 0001  
                      ___rparam_used 000001                       __pcstackCOMRAM 0001  
                ??_SYSTEM_Initialize 0011                     ??_ZCD_Initialize 000F  
          __end_of_SYSTEM_Initialize 024A                           __pnvCOMRAM 001D  
              _TMR4_InterruptHandler 0015                     ?_TMR1_StartTimer 0001  
                    __CFG_PPS1WAY$ON 000000                              _CCP1CON 000FAC  
                   ?_TMR4_Initialize 0001                              _OSCCON1 000ED8  
                            _OSCCON3 000EDA                              _OSCTUNE 000EDD  
                            _PPSLOCK 000EA0                              _ZCD_ISR 0270  
                       ??_TMR4_Start 000F                              __Hparam 0000  
                            __Lparam 0000           __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                            __pcinit 015A                   __end_of_TMR4_Start 0298  
                            __ramtop 0F00                              __ptext0 020E  
                            __ptext1 027E                              __ptext2 022C  
                            __ptext3 0260                              __ptext4 01CC  
                            __ptext5 0294                              __ptext6 0194  
                            __ptext7 0298                              __ptext8 024A  
                            __ptext9 009C                            _T1CONbits 000FCF  
              _OSCILLATOR_Initialize 01EE                              _phase_2 028A  
                            _phase_4 027E                            _T4CONbits 000FB7  
           ??_PIN_MANAGER_Initialize 000F                            _T4HLTbits 000FB8  
         __size_of_SYSTEM_Initialize 001E                 end_of_initialization 0186  
                          _T4RSTbits 000FBA                        __Lmediumconst 0000  
                            postdec1 000FE5                              postinc0 000FEE  
              __CFG_WDTCPS$WDTCPS_31 000000                     __CFG_FEXTOSC$OFF 000000  
                        _CCP1CONbits 000FAC                            i2_phase_4 0284  
           __size_of_PWM1_Initialize 0016         __end_of_INTERRUPT_Initialize 02A0  
                      __pidataCOMRAM 0290               ?_OSCILLATOR_Initialize 0001  
                start_initialization 015A      __size_of_PIN_MANAGER_Initialize 00BE  
                         ?i2_phase_4 0001                     __CFG_LPBOREN$OFF 000000  
           __size_of_TMR1_Initialize 0038                          _CCPTMRSbits 000FAE  
                        __pbssCOMRAM 0011                             ?_ZCD_ISR 0001  
             _PIN_MANAGER_Initialize 009C                            __pintcode 0008  
                  ??_PWM1_Initialize 000F         ??_INTERRUPT_InterruptManager 0001  
           __size_of_TMR1_StartTimer 0004                             ?_phase_2 0001  
                           ?_phase_4 0001             __size_of_TMR4_Initialize 0022  
            __size_of_ZCD_Initialize 0010                             _T4CLKCON 000FB9  
               _INTERRUPT_Initialize 029C                             _PIE2bits 000EC4  
                __CFG_BORV$VBOR_2P45 000000                          ??i2_phase_4 0001  
                        _T4INPPSbits 000EAC  __size_of_INTERRUPT_InterruptManager 0090  
                           _PIR2bits 000ECC                             _PIR4bits 000ECE  
                  ??_TMR1_Initialize 000F                            copy_data0 016E  
              ?_INTERRUPT_Initialize 0001                     __size_of_ZCD_ISR 000E  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000              ??_OSCILLATOR_Initialize 000F  
              _TMR1_InterruptHandler 0017                     __size_of_phase_2 0006  
                   __size_of_phase_4 0006                             __ptext10 01EE  
                           __ptext11 029C                             __ptext13 0284  
                         _T1GCONbits 000FD0                             __ptext14 0270  
                           __ptext15 028A                    ??_TMR1_StartTimer 000F  
                  ??_TMR4_Initialize 000F                        __size_of_main 001E  
               __CFG_WDTCWS$WDTCWS_7 000000                             int$flags 001F  
 __end_of_INTERRUPT_InterruptManager 0098           _INTERRUPT_InterruptManager 0008  
        PIN_MANAGER_Initialize@state 000F                           _INTCONbits 000FF2  
                     _ZCD_Initialize 0260               ??_INTERRUPT_Initialize 000F  
                           intlevel2 0000              ?_PIN_MANAGER_Initialize 0001  
                  __CFG_CLKOUTEN$OFF 000000                          _PPSLOCKbits 000EA0  
                    _PWM1_Initialize 024A                           _ZCDCONbits 000F32  
             __end_of_ZCD_Initialize 0270                          _timer_value 0013  
                         _TMR4_Start 0294       __end_of_PIN_MANAGER_Initialize 015A  
                    _TMR1_Initialize 0194  
