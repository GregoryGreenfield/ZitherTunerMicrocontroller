

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue May  2 03:37:38 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           ; Version 1.41
    43                           ; Generated 25/01/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F46K40 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataCOMRAM
    78  000A3A                     __pidataCOMRAM:
    79                           	opt stack 0
    80                           
    81                           ;initializer for _delay
    82  000A3A  0014               	dw	20
    83                           
    84                           ;initializer for _y
    85  000A3C  03E7               	dw	999
    86                           
    87                           	psect	nvCOMRAM
    88  000034                     __pnvCOMRAM:
    89                           	opt stack 0
    90  000034                     _timer1ReloadVal:
    91                           	opt stack 0
    92  000034                     	ds	2
    93  0000                     _PIE2bits	set	3780
    94  0000                     _PIR2bits	set	3788
    95  0000                     _PIR4bits	set	3790
    96  0000                     _T4INPPSbits	set	3756
    97  0000                     _RC0PPS	set	3831
    98  0000                     _PPSLOCKbits	set	3744
    99  0000                     _PPSLOCK	set	3744
   100  0000                     _OSCTUNE	set	3805
   101  0000                     _OSCFRQ	set	3806
   102  0000                     _OSCEN	set	3804
   103  0000                     _OSCCON3	set	3802
   104  0000                     _OSCCON1	set	3800
   105  0000                     _ZCDCONbits	set	3890
   106  0000                     _ZCDCON	set	3890
   107  0000                     _ODCOND	set	3876
   108  0000                     _ODCONC	set	3871
   109  0000                     _ODCONB	set	3863
   110  0000                     _ODCONA	set	3855
   111  0000                     _ODCONE	set	3884
   112  0000                     _WPUC	set	3872
   113  0000                     _WPUA	set	3856
   114  0000                     _WPUB	set	3864
   115  0000                     _WPUE	set	3885
   116  0000                     _WPUD	set	3877
   117  0000                     _ANSELA	set	3857
   118  0000                     _ANSELE	set	3886
   119  0000                     _ANSELD	set	3878
   120  0000                     _ANSELB	set	3865
   121  0000                     _ANSELC	set	3873
   122  0000                     _TMR1	set	4045
   123  0000                     _INTCON	set	4082
   124  0000                     _INTCONbits	set	4082
   125  0000                     _PR4	set	4022
   126  0000                     _TMR4	set	4021
   127  0000                     _T4CONbits	set	4023
   128  0000                     _T4RSTbits	set	4026
   129  0000                     _T4HLTbits	set	4024
   130  0000                     _T4TMR	set	4021
   131  0000                     _T4PR	set	4022
   132  0000                     _T4RST	set	4026
   133  0000                     _T4HLT	set	4024
   134  0000                     _T4CLKCON	set	4025
   135  0000                     _T4CON	set	4023
   136  0000                     _T1GCONbits	set	4048
   137  0000                     _T1CONbits	set	4047
   138  0000                     _TMR1L	set	4045
   139  0000                     _TMR1H	set	4046
   140  0000                     _T1CLK	set	4050
   141  0000                     _T1GATE	set	4049
   142  0000                     _T1GCON	set	4048
   143  0000                     _T1CON	set	4047
   144  0000                     _CCP1CONbits	set	4012
   145  0000                     _CCPTMRSbits	set	4014
   146  0000                     _CCPR1L	set	4010
   147  0000                     _CCPR1H	set	4011
   148  0000                     _CCP1CON	set	4012
   149  0000                     _TRISD	set	3979
   150  0000                     _TRISC	set	3978
   151  0000                     _TRISB	set	3977
   152  0000                     _TRISA	set	3976
   153  0000                     _TRISE	set	3980
   154  0000                     _LATC	set	3973
   155  0000                     _LATB	set	3972
   156  0000                     _LATA	set	3971
   157  0000                     _LATD	set	3974
   158  0000                     _LATE	set	3975
   159  0000                     _GIE	set	32663
   160                           
   161                           ; #config settings
   162  0000                     
   163                           	psect	cinit
   164  000846                     __pcinit:
   165                           	opt stack 0
   166  000846                     start_initialization:
   167                           	opt stack 0
   168  000846                     __initialization:
   169                           	opt stack 0
   170                           
   171                           ; Initialize objects allocated to COMRAM (4 bytes)
   172                           ; load TBLPTR registers with __pidataCOMRAM
   173  000846  0E3A               	movlw	low __pidataCOMRAM
   174  000848  6EF6               	movwf	tblptrl,c
   175  00084A  0E0A               	movlw	high __pidataCOMRAM
   176  00084C  6EF7               	movwf	tblptrh,c
   177  00084E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   178  000850  6EF8               	movwf	tblptru,c
   179  000852  EE00  F030         	lfsr	0,__pdataCOMRAM
   180  000856  EE10 F004          	lfsr	1,4
   181  00085A                     copy_data0:
   182  00085A  0009               	tblrd		*+
   183  00085C  CFF5 FFEE          	movff	tablat,postinc0
   184  000860  50E5               	movf	postdec1,w,c
   185  000862  50E1               	movf	fsr1l,w,c
   186  000864  E1FA               	bnz	copy_data0
   187                           
   188                           ; Clear objects allocated to COMRAM (8 bytes)
   189  000866  EE00  F028         	lfsr	0,__pbssCOMRAM
   190  00086A  0E08               	movlw	8
   191  00086C                     clear_0:
   192  00086C  6AEE               	clrf	postinc0,c
   193  00086E  06E8               	decf	wreg,f,c
   194  000870  E1FD               	bnz	clear_0
   195  000872                     end_of_initialization:
   196                           	opt stack 0
   197  000872                     __end_of__initialization:
   198                           	opt stack 0
   199  000872  9036               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   200  000874  9236               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   201  000876  0E00               	movlw	low (__Lmediumconst shr (0+16))
   202  000878  6EF8               	movwf	tblptru,c
   203  00087A  0100               	movlb	0
   204  00087C  EF58  F000         	goto	_main	;jump to C main() function
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           postdec1	equ	0xFE5
   212                           fsr1l	equ	0xFE1
   213                           
   214                           	psect	bssCOMRAM
   215  000028                     __pbssCOMRAM:
   216                           	opt stack 0
   217  000028                     _n:
   218                           	opt stack 0
   219  000028                     	ds	2
   220  00002A                     _timer_value:
   221                           	opt stack 0
   222  00002A                     	ds	2
   223  00002C                     _TMR4_InterruptHandler:
   224                           	opt stack 0
   225  00002C                     	ds	2
   226  00002E                     _TMR1_InterruptHandler:
   227                           	opt stack 0
   228  00002E                     	ds	2
   229                           tblptru	equ	0xFF8
   230                           tblptrh	equ	0xFF7
   231                           tblptrl	equ	0xFF6
   232                           tablat	equ	0xFF5
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           postdec1	equ	0xFE5
   236                           fsr1l	equ	0xFE1
   237                           
   238                           	psect	dataCOMRAM
   239  000030                     __pdataCOMRAM:
   240                           	opt stack 0
   241  000030                     _delay:
   242                           	opt stack 0
   243  000030                     	ds	2
   244  000032                     _y:
   245                           	opt stack 0
   246  000032                     	ds	2
   247                           tblptru	equ	0xFF8
   248                           tblptrh	equ	0xFF7
   249                           tblptrl	equ	0xFF6
   250                           tablat	equ	0xFF5
   251                           postinc0	equ	0xFEE
   252                           wreg	equ	0xFE8
   253                           postdec1	equ	0xFE5
   254                           fsr1l	equ	0xFE1
   255                           
   256                           	psect	cstackBANK0
   257  000060                     __pcstackBANK0:
   258                           	opt stack 0
   259  000060                     main@greater:
   260                           	opt stack 0
   261                           
   262                           ; 3 bytes @ 0x0
   263  000060                     	ds	3
   264  000063                     main@g_boundary:
   265                           	opt stack 0
   266                           
   267                           ; 3 bytes @ 0x3
   268  000063                     	ds	3
   269  000066                     main@fewer:
   270                           	opt stack 0
   271                           
   272                           ; 3 bytes @ 0x6
   273  000066                     	ds	3
   274  000069                     main@f_boundary:
   275                           	opt stack 0
   276                           
   277                           ; 3 bytes @ 0x9
   278  000069                     	ds	3
   279  00006C                     main@over_greater:
   280                           	opt stack 0
   281                           
   282                           ; 3 bytes @ 0xC
   283  00006C                     	ds	3
   284  00006F                     main@over_g_boundary:
   285                           	opt stack 0
   286                           
   287                           ; 3 bytes @ 0xF
   288  00006F                     	ds	3
   289  000072                     main@over_fewer:
   290                           	opt stack 0
   291                           
   292                           ; 3 bytes @ 0x12
   293  000072                     	ds	3
   294  000075                     main@over_f_boundary:
   295                           	opt stack 0
   296                           
   297                           ; 3 bytes @ 0x15
   298  000075                     	ds	3
   299  000078                     main@over_need_cnts:
   300                           	opt stack 0
   301                           
   302                           ; 3 bytes @ 0x18
   303  000078                     	ds	3
   304  00007B                     main@need_cnts:
   305                           	opt stack 0
   306                           
   307                           ; 3 bytes @ 0x1B
   308  00007B                     	ds	3
   309                           tblptru	equ	0xFF8
   310                           tblptrh	equ	0xFF7
   311                           tblptrl	equ	0xFF6
   312                           tablat	equ	0xFF5
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           postdec1	equ	0xFE5
   316                           fsr1l	equ	0xFE1
   317                           
   318                           	psect	cstackCOMRAM
   319  000001                     __pcstackCOMRAM:
   320                           	opt stack 0
   321  000001                     TMR1_WriteTimer@timerVal:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x0
   325  000001                     	ds	2
   326  000003                     ??_INTERRUPT_InterruptManager:
   327                           
   328                           ; 1 bytes @ 0x2
   329  000003                     	ds	14
   330  000011                     ??_TMR1_Initialize:
   331  000011                     ??_Delay_tenthSec:
   332  000011                     ?___ftpack:
   333                           	opt stack 0
   334  000011                     PIN_MANAGER_Initialize@state:
   335                           	opt stack 0
   336  000011                     PWM1_LoadDutyValue@dutyValue:
   337                           	opt stack 0
   338  000011                     ___ftpack@arg:
   339                           	opt stack 0
   340                           
   341                           ; 3 bytes @ 0x10
   342  000011                     	ds	1
   343  000012                     Delay_tenthSec@ds:
   344                           	opt stack 0
   345                           
   346                           ; 1 bytes @ 0x11
   347  000012                     	ds	1
   348  000013                     Delay_tenthSec@i:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x12
   352  000013                     	ds	1
   353  000014                     ___ftpack@exp:
   354                           	opt stack 0
   355                           
   356                           ; 1 bytes @ 0x13
   357  000014                     	ds	1
   358  000015                     ___ftpack@sign:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x14
   362  000015                     	ds	1
   363  000016                     ??___ftpack:
   364                           
   365                           ; 1 bytes @ 0x15
   366  000016                     	ds	3
   367  000019                     ?___ftmul:
   368                           	opt stack 0
   369  000019                     ?___lwtoft:
   370                           	opt stack 0
   371  000019                     ___lwtoft@c:
   372                           	opt stack 0
   373  000019                     ___ftmul@f1:
   374                           	opt stack 0
   375                           
   376                           ; 3 bytes @ 0x18
   377  000019                     	ds	3
   378  00001C                     ___ftge@ff1:
   379                           	opt stack 0
   380  00001C                     ___ftmul@f2:
   381                           	opt stack 0
   382                           
   383                           ; 3 bytes @ 0x1B
   384  00001C                     	ds	3
   385  00001F                     ??___ftmul:
   386  00001F                     ___ftge@ff2:
   387                           	opt stack 0
   388                           
   389                           ; 3 bytes @ 0x1E
   390  00001F                     	ds	3
   391  000022                     ??___ftge:
   392  000022                     ___ftmul@exp:
   393                           	opt stack 0
   394                           
   395                           ; 1 bytes @ 0x21
   396  000022                     	ds	1
   397  000023                     ___ftmul@f3_as_product:
   398                           	opt stack 0
   399                           
   400                           ; 3 bytes @ 0x22
   401  000023                     	ds	3
   402  000026                     ___ftmul@cntr:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0x25
   406  000026                     	ds	1
   407  000027                     ___ftmul@sign:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x26
   411  000027                     	ds	1
   412  000028                     tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           postinc0	equ	0xFEE
   417                           wreg	equ	0xFE8
   418                           postdec1	equ	0xFE5
   419                           fsr1l	equ	0xFE1
   420                           
   421                           ; 1 bytes @ 0x27
   422 ;;
   423 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   424 ;;
   425 ;; *************** function _main *****************
   426 ;; Defined at:
   427 ;;		line 75 in file "main.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;  need_cnts       3   27[BANK0 ] PTR FTN()void 
   432 ;;  over_need_cn    3   24[BANK0 ] PTR FTN()void 
   433 ;;  over_f_bound    3   21[BANK0 ] PTR FTN()void 
   434 ;;  over_fewer      3   18[BANK0 ] PTR FTN()void 
   435 ;;  over_g_bound    3   15[BANK0 ] PTR FTN()void 
   436 ;;  over_greater    3   12[BANK0 ] PTR FTN()void 
   437 ;;  f_boundary      3    9[BANK0 ] PTR FTN()void 
   438 ;;  fewer           3    6[BANK0 ] PTR FTN()void 
   439 ;;  g_boundary      3    3[BANK0 ] PTR FTN()void 
   440 ;;  greater         3    0[BANK0 ] PTR FTN()void 
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, status,2, status,0, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   451 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   453 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   454 ;;Total ram usage:       30 bytes
   455 ;; Hardware stack levels required when called:    5
   456 ;; This function calls:
   457 ;;		_Delay_tenthSec
   458 ;;		_PWM1_Initialize
   459 ;;		_PWM1_LoadDutyValue
   460 ;;		_SYSTEM_Initialize
   461 ;;		_S_4
   462 ;;		_T_4
   463 ;;		_ZCD_Initialize
   464 ;;		___ftge
   465 ;;		___ftmul
   466 ;;		___lwtoft
   467 ;; This function is called by:
   468 ;;		Startup code after reset
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           	psect	text0
   473  0000B0                     __ptext0:
   474                           	opt stack 0
   475  0000B0                     _main:
   476                           	opt stack 26
   477                           
   478                           ;main.c: 76: INTCON=0xE7;
   479                           
   480                           ;incstack = 0
   481  0000B0  0EE7               	movlw	231
   482  0000B2  6EF2               	movwf	intcon,c	;volatile
   483                           
   484                           ;main.c: 77: SYSTEM_Initialize();
   485  0000B4  ECE1  F004         	call	_SYSTEM_Initialize	;wreg free
   486                           
   487                           ;main.c: 78: PWM1_Initialize();
   488  0000B8  ECFE  F004         	call	_PWM1_Initialize	;wreg free
   489                           
   490                           ;main.c: 79: ZCD_Initialize();
   491  0000BC  EC09  F005         	call	_ZCD_Initialize	;wreg free
   492                           
   493                           ;main.c: 80: TRISA=0x00;
   494  0000C0  0E00               	movlw	0
   495  0000C2  6E88               	movwf	3976,c	;volatile
   496                           
   497                           ;main.c: 81: PWM1_LoadDutyValue(107);
   498  0000C4  0E00               	movlw	0
   499  0000C6  6E12               	movwf	PWM1_LoadDutyValue@dutyValue+1,c
   500  0000C8  0E6B               	movlw	107
   501  0000CA  6E11               	movwf	PWM1_LoadDutyValue@dutyValue,c
   502  0000CC  EC5C  F004         	call	_PWM1_LoadDutyValue	;wreg free
   503                           
   504                           ;main.c: 82: double need_cnts = 43245;
   505  0000D0  0EED               	movlw	237
   506  0000D2  0100               	movlb	0	; () banked
   507  0000D4  6F7B               	movwf	main@need_cnts& (0+255),b
   508  0000D6  0E28               	movlw	40
   509  0000D8  0100               	movlb	0	; () banked
   510  0000DA  6F7C               	movwf	(main@need_cnts+1)& (0+255),b
   511  0000DC  0E47               	movlw	71
   512  0000DE  0100               	movlb	0	; () banked
   513  0000E0  6F7D               	movwf	(main@need_cnts+2)& (0+255),b
   514                           
   515                           ; BSR set to: 0
   516                           ;main.c: 83: double greater = need_cnts*1.015;
   517  0000E2  C07B  F019         	movff	main@need_cnts,___ftmul@f1
   518  0000E6  C07C  F01A         	movff	main@need_cnts+1,___ftmul@f1+1
   519  0000EA  C07D  F01B         	movff	main@need_cnts+2,___ftmul@f1+2
   520  0000EE  0EEC               	movlw	236
   521  0000F0  6E1C               	movwf	___ftmul@f2,c
   522  0000F2  0E81               	movlw	129
   523  0000F4  6E1D               	movwf	___ftmul@f2+1,c
   524  0000F6  0E3F               	movlw	63
   525  0000F8  6E1E               	movwf	___ftmul@f2+2,c
   526  0000FA  ECAB  F002         	call	___ftmul	;wreg free
   527  0000FE  C019  F060         	movff	?___ftmul,main@greater
   528  000102  C01A  F061         	movff	?___ftmul+1,main@greater+1
   529  000106  C01B  F062         	movff	?___ftmul+2,main@greater+2
   530                           
   531                           ;main.c: 84: double g_boundary = need_cnts*1.985;
   532  00010A  C07B  F019         	movff	main@need_cnts,___ftmul@f1
   533  00010E  C07C  F01A         	movff	main@need_cnts+1,___ftmul@f1+1
   534  000112  C07D  F01B         	movff	main@need_cnts+2,___ftmul@f1+2
   535  000116  0E14               	movlw	20
   536  000118  6E1C               	movwf	___ftmul@f2,c
   537  00011A  0EFE               	movlw	254
   538  00011C  6E1D               	movwf	___ftmul@f2+1,c
   539  00011E  0E3F               	movlw	63
   540  000120  6E1E               	movwf	___ftmul@f2+2,c
   541  000122  ECAB  F002         	call	___ftmul	;wreg free
   542  000126  C019  F063         	movff	?___ftmul,main@g_boundary
   543  00012A  C01A  F064         	movff	?___ftmul+1,main@g_boundary+1
   544  00012E  C01B  F065         	movff	?___ftmul+2,main@g_boundary+2
   545                           
   546                           ;main.c: 85: double fewer = need_cnts*0.9955;
   547  000132  C07B  F019         	movff	main@need_cnts,___ftmul@f1
   548  000136  C07C  F01A         	movff	main@need_cnts+1,___ftmul@f1+1
   549  00013A  C07D  F01B         	movff	main@need_cnts+2,___ftmul@f1+2
   550  00013E  0ED9               	movlw	217
   551  000140  6E1C               	movwf	___ftmul@f2,c
   552  000142  0E7E               	movlw	126
   553  000144  6E1D               	movwf	___ftmul@f2+1,c
   554  000146  0E3F               	movlw	63
   555  000148  6E1E               	movwf	___ftmul@f2+2,c
   556  00014A  ECAB  F002         	call	___ftmul	;wreg free
   557  00014E  C019  F066         	movff	?___ftmul,main@fewer
   558  000152  C01A  F067         	movff	?___ftmul+1,main@fewer+1
   559  000156  C01B  F068         	movff	?___ftmul+2,main@fewer+2
   560                           
   561                           ;main.c: 86: double f_boundary = need_cnts*0.6;
   562  00015A  C07B  F019         	movff	main@need_cnts,___ftmul@f1
   563  00015E  C07C  F01A         	movff	main@need_cnts+1,___ftmul@f1+1
   564  000162  C07D  F01B         	movff	main@need_cnts+2,___ftmul@f1+2
   565  000166  0E9A               	movlw	154
   566  000168  6E1C               	movwf	___ftmul@f2,c
   567  00016A  0E19               	movlw	25
   568  00016C  6E1D               	movwf	___ftmul@f2+1,c
   569  00016E  0E3F               	movlw	63
   570  000170  6E1E               	movwf	___ftmul@f2+2,c
   571  000172  ECAB  F002         	call	___ftmul	;wreg free
   572  000176  C019  F069         	movff	?___ftmul,main@f_boundary
   573  00017A  C01A  F06A         	movff	?___ftmul+1,main@f_boundary+1
   574  00017E  C01B  F06B         	movff	?___ftmul+2,main@f_boundary+2
   575                           
   576                           ;main.c: 88: double over_need_cnts = need_cnts*0.9;
   577  000182  C07B  F019         	movff	main@need_cnts,___ftmul@f1
   578  000186  C07C  F01A         	movff	main@need_cnts+1,___ftmul@f1+1
   579  00018A  C07D  F01B         	movff	main@need_cnts+2,___ftmul@f1+2
   580  00018E  0E66               	movlw	102
   581  000190  6E1C               	movwf	___ftmul@f2,c
   582  000192  0E66               	movlw	102
   583  000194  6E1D               	movwf	___ftmul@f2+1,c
   584  000196  0E3F               	movlw	63
   585  000198  6E1E               	movwf	___ftmul@f2+2,c
   586  00019A  ECAB  F002         	call	___ftmul	;wreg free
   587  00019E  C019  F078         	movff	?___ftmul,main@over_need_cnts
   588  0001A2  C01A  F079         	movff	?___ftmul+1,main@over_need_cnts+1
   589  0001A6  C01B  F07A         	movff	?___ftmul+2,main@over_need_cnts+2
   590                           
   591                           ;main.c: 89: double over_greater = over_need_cnts*1.015;
   592  0001AA  C078  F019         	movff	main@over_need_cnts,___ftmul@f1
   593  0001AE  C079  F01A         	movff	main@over_need_cnts+1,___ftmul@f1+1
   594  0001B2  C07A  F01B         	movff	main@over_need_cnts+2,___ftmul@f1+2
   595  0001B6  0EEC               	movlw	236
   596  0001B8  6E1C               	movwf	___ftmul@f2,c
   597  0001BA  0E81               	movlw	129
   598  0001BC  6E1D               	movwf	___ftmul@f2+1,c
   599  0001BE  0E3F               	movlw	63
   600  0001C0  6E1E               	movwf	___ftmul@f2+2,c
   601  0001C2  ECAB  F002         	call	___ftmul	;wreg free
   602  0001C6  C019  F06C         	movff	?___ftmul,main@over_greater
   603  0001CA  C01A  F06D         	movff	?___ftmul+1,main@over_greater+1
   604  0001CE  C01B  F06E         	movff	?___ftmul+2,main@over_greater+2
   605                           
   606                           ;main.c: 90: double over_g_boundary = over_need_cnts*1.985*1.2;
   607  0001D2  C078  F019         	movff	main@over_need_cnts,___ftmul@f1
   608  0001D6  C079  F01A         	movff	main@over_need_cnts+1,___ftmul@f1+1
   609  0001DA  C07A  F01B         	movff	main@over_need_cnts+2,___ftmul@f1+2
   610  0001DE  0E73               	movlw	115
   611  0001E0  6E1C               	movwf	___ftmul@f2,c
   612  0001E2  0E18               	movlw	24
   613  0001E4  6E1D               	movwf	___ftmul@f2+1,c
   614  0001E6  0E40               	movlw	64
   615  0001E8  6E1E               	movwf	___ftmul@f2+2,c
   616  0001EA  ECAB  F002         	call	___ftmul	;wreg free
   617  0001EE  C019  F06F         	movff	?___ftmul,main@over_g_boundary
   618  0001F2  C01A  F070         	movff	?___ftmul+1,main@over_g_boundary+1
   619  0001F6  C01B  F071         	movff	?___ftmul+2,main@over_g_boundary+2
   620                           
   621                           ;main.c: 91: double over_fewer = over_need_cnts*0.9955*0.08;
   622  0001FA  C078  F019         	movff	main@over_need_cnts,___ftmul@f1
   623  0001FE  C079  F01A         	movff	main@over_need_cnts+1,___ftmul@f1+1
   624  000202  C07A  F01B         	movff	main@over_need_cnts+2,___ftmul@f1+2
   625  000206  0E1A               	movlw	26
   626  000208  6E1C               	movwf	___ftmul@f2,c
   627  00020A  0EA3               	movlw	163
   628  00020C  6E1D               	movwf	___ftmul@f2+1,c
   629  00020E  0E3D               	movlw	61
   630  000210  6E1E               	movwf	___ftmul@f2+2,c
   631  000212  ECAB  F002         	call	___ftmul	;wreg free
   632  000216  C019  F072         	movff	?___ftmul,main@over_fewer
   633  00021A  C01A  F073         	movff	?___ftmul+1,main@over_fewer+1
   634  00021E  C01B  F074         	movff	?___ftmul+2,main@over_fewer+2
   635                           
   636                           ;main.c: 92: double over_f_boundary = over_need_cnts*0.6;
   637  000222  C078  F019         	movff	main@over_need_cnts,___ftmul@f1
   638  000226  C079  F01A         	movff	main@over_need_cnts+1,___ftmul@f1+1
   639  00022A  C07A  F01B         	movff	main@over_need_cnts+2,___ftmul@f1+2
   640  00022E  0E9A               	movlw	154
   641  000230  6E1C               	movwf	___ftmul@f2,c
   642  000232  0E19               	movlw	25
   643  000234  6E1D               	movwf	___ftmul@f2+1,c
   644  000236  0E3F               	movlw	63
   645  000238  6E1E               	movwf	___ftmul@f2+2,c
   646  00023A  ECAB  F002         	call	___ftmul	;wreg free
   647  00023E  C019  F075         	movff	?___ftmul,main@over_f_boundary
   648  000242  C01A  F076         	movff	?___ftmul+1,main@over_f_boundary+1
   649  000246  C01B  F077         	movff	?___ftmul+2,main@over_f_boundary+2
   650  00024A                     l1901:
   651                           
   652                           ;main.c: 104: if(timer_value>over_g_boundary){
   653  00024A  C06F  F01C         	movff	main@over_g_boundary,___ftge@ff1
   654  00024E  C070  F01D         	movff	main@over_g_boundary+1,___ftge@ff1+1
   655  000252  C071  F01E         	movff	main@over_g_boundary+2,___ftge@ff1+2
   656  000256  C02A  F019         	movff	_timer_value,___lwtoft@c
   657  00025A  C02B  F01A         	movff	_timer_value+1,___lwtoft@c+1
   658  00025E  EC9C  F004         	call	___lwtoft	;wreg free
   659  000262  C019  F01F         	movff	?___lwtoft,___ftge@ff2
   660  000266  C01A  F020         	movff	?___lwtoft+1,___ftge@ff2+1
   661  00026A  C01B  F021         	movff	?___lwtoft+2,___ftge@ff2+2
   662  00026E  ECDB  F003         	call	___ftge	;wreg free
   663  000272  B0D8               	btfsc	status,0,c
   664  000274  D004               	goto	l332
   665                           
   666                           ;main.c: 105: TRISA=0xFF;
   667  000276  6888               	setf	3976,c	;volatile
   668                           
   669                           ;main.c: 106: Delay_tenthSec(delay);
   670  000278  5030               	movf	_delay,w,c
   671  00027A  ECAE  F004         	call	_Delay_tenthSec
   672  00027E                     l332:
   673                           
   674                           ;main.c: 107: }
   675                           ;main.c: 108: if((timer_value<over_g_boundary) && (timer_value>over_greater)){
   676  00027E  C02A  F019         	movff	_timer_value,___lwtoft@c
   677  000282  C02B  F01A         	movff	_timer_value+1,___lwtoft@c+1
   678  000286  EC9C  F004         	call	___lwtoft	;wreg free
   679  00028A  C019  F01C         	movff	?___lwtoft,___ftge@ff1
   680  00028E  C01A  F01D         	movff	?___lwtoft+1,___ftge@ff1+1
   681  000292  C01B  F01E         	movff	?___lwtoft+2,___ftge@ff1+2
   682  000296  C06F  F01F         	movff	main@over_g_boundary,___ftge@ff2
   683  00029A  C070  F020         	movff	main@over_g_boundary+1,___ftge@ff2+1
   684  00029E  C071  F021         	movff	main@over_g_boundary+2,___ftge@ff2+2
   685  0002A2  ECDB  F003         	call	___ftge	;wreg free
   686  0002A6  B0D8               	btfsc	status,0,c
   687  0002A8  D01A               	goto	l1913
   688  0002AA  C06C  F01C         	movff	main@over_greater,___ftge@ff1
   689  0002AE  C06D  F01D         	movff	main@over_greater+1,___ftge@ff1+1
   690  0002B2  C06E  F01E         	movff	main@over_greater+2,___ftge@ff1+2
   691  0002B6  C02A  F019         	movff	_timer_value,___lwtoft@c
   692  0002BA  C02B  F01A         	movff	_timer_value+1,___lwtoft@c+1
   693  0002BE  EC9C  F004         	call	___lwtoft	;wreg free
   694  0002C2  C019  F01F         	movff	?___lwtoft,___ftge@ff2
   695  0002C6  C01A  F020         	movff	?___lwtoft+1,___ftge@ff2+1
   696  0002CA  C01B  F021         	movff	?___lwtoft+2,___ftge@ff2+2
   697  0002CE  ECDB  F003         	call	___ftge	;wreg free
   698  0002D2  B0D8               	btfsc	status,0,c
   699  0002D4  D004               	goto	l1913
   700                           
   701                           ;main.c: 109: TRISA=0x00;
   702  0002D6  0E00               	movlw	0
   703  0002D8  6E88               	movwf	3976,c	;volatile
   704                           
   705                           ;main.c: 110: T_4();
   706  0002DA  EC72  F004         	call	_T_4	;wreg free
   707  0002DE                     l1913:
   708                           
   709                           ;main.c: 111: }
   710                           ;main.c: 112: if((timer_value<over_greater) && (timer_value>over_fewer)){
   711  0002DE  C02A  F019         	movff	_timer_value,___lwtoft@c
   712  0002E2  C02B  F01A         	movff	_timer_value+1,___lwtoft@c+1
   713  0002E6  EC9C  F004         	call	___lwtoft	;wreg free
   714  0002EA  C019  F01C         	movff	?___lwtoft,___ftge@ff1
   715  0002EE  C01A  F01D         	movff	?___lwtoft+1,___ftge@ff1+1
   716  0002F2  C01B  F01E         	movff	?___lwtoft+2,___ftge@ff1+2
   717  0002F6  C06C  F01F         	movff	main@over_greater,___ftge@ff2
   718  0002FA  C06D  F020         	movff	main@over_greater+1,___ftge@ff2+1
   719  0002FE  C06E  F021         	movff	main@over_greater+2,___ftge@ff2+2
   720  000302  ECDB  F003         	call	___ftge	;wreg free
   721  000306  B0D8               	btfsc	status,0,c
   722  000308  D0DB               	goto	l1949
   723  00030A  C072  F01C         	movff	main@over_fewer,___ftge@ff1
   724  00030E  C073  F01D         	movff	main@over_fewer+1,___ftge@ff1+1
   725  000312  C074  F01E         	movff	main@over_fewer+2,___ftge@ff1+2
   726  000316  C02A  F019         	movff	_timer_value,___lwtoft@c
   727  00031A  C02B  F01A         	movff	_timer_value+1,___lwtoft@c+1
   728  00031E  EC9C  F004         	call	___lwtoft	;wreg free
   729  000322  C019  F01F         	movff	?___lwtoft,___ftge@ff2
   730  000326  C01A  F020         	movff	?___lwtoft+1,___ftge@ff2+1
   731  00032A  C01B  F021         	movff	?___lwtoft+2,___ftge@ff2+2
   732  00032E  ECDB  F003         	call	___ftge	;wreg free
   733  000332  B0D8               	btfsc	status,0,c
   734  000334  D0C5               	goto	l1949
   735  000336                     l1917:
   736                           
   737                           ;main.c: 114: if(timer_value>g_boundary){
   738  000336  C063  F01C         	movff	main@g_boundary,___ftge@ff1
   739  00033A  C064  F01D         	movff	main@g_boundary+1,___ftge@ff1+1
   740  00033E  C065  F01E         	movff	main@g_boundary+2,___ftge@ff1+2
   741  000342  C02A  F019         	movff	_timer_value,___lwtoft@c
   742  000346  C02B  F01A         	movff	_timer_value+1,___lwtoft@c+1
   743  00034A  EC9C  F004         	call	___lwtoft	;wreg free
   744  00034E  C019  F01F         	movff	?___lwtoft,___ftge@ff2
   745  000352  C01A  F020         	movff	?___lwtoft+1,___ftge@ff2+1
   746  000356  C01B  F021         	movff	?___lwtoft+2,___ftge@ff2+2
   747  00035A  ECDB  F003         	call	___ftge	;wreg free
   748  00035E  B0D8               	btfsc	status,0,c
   749  000360  D004               	goto	l336
   750                           
   751                           ;main.c: 115: TRISA=0xFF;
   752  000362  6888               	setf	3976,c	;volatile
   753                           
   754                           ;main.c: 116: Delay_tenthSec(delay);
   755  000364  5030               	movf	_delay,w,c
   756  000366  ECAE  F004         	call	_Delay_tenthSec
   757  00036A                     l336:
   758                           
   759                           ;main.c: 117: }
   760                           ;main.c: 118: if((timer_value<g_boundary) && (timer_value>greater)){
   761  00036A  C02A  F019         	movff	_timer_value,___lwtoft@c
   762  00036E  C02B  F01A         	movff	_timer_value+1,___lwtoft@c+1
   763  000372  EC9C  F004         	call	___lwtoft	;wreg free
   764  000376  C019  F01C         	movff	?___lwtoft,___ftge@ff1
   765  00037A  C01A  F01D         	movff	?___lwtoft+1,___ftge@ff1+1
   766  00037E  C01B  F01E         	movff	?___lwtoft+2,___ftge@ff1+2
   767  000382  C063  F01F         	movff	main@g_boundary,___ftge@ff2
   768  000386  C064  F020         	movff	main@g_boundary+1,___ftge@ff2+1
   769  00038A  C065  F021         	movff	main@g_boundary+2,___ftge@ff2+2
   770  00038E  ECDB  F003         	call	___ftge	;wreg free
   771  000392  B0D8               	btfsc	status,0,c
   772  000394  D01A               	goto	l1929
   773  000396  C060  F01C         	movff	main@greater,___ftge@ff1
   774  00039A  C061  F01D         	movff	main@greater+1,___ftge@ff1+1
   775  00039E  C062  F01E         	movff	main@greater+2,___ftge@ff1+2
   776  0003A2  C02A  F019         	movff	_timer_value,___lwtoft@c
   777  0003A6  C02B  F01A         	movff	_timer_value+1,___lwtoft@c+1
   778  0003AA  EC9C  F004         	call	___lwtoft	;wreg free
   779  0003AE  C019  F01F         	movff	?___lwtoft,___ftge@ff2
   780  0003B2  C01A  F020         	movff	?___lwtoft+1,___ftge@ff2+1
   781  0003B6  C01B  F021         	movff	?___lwtoft+2,___ftge@ff2+2
   782  0003BA  ECDB  F003         	call	___ftge	;wreg free
   783  0003BE  B0D8               	btfsc	status,0,c
   784  0003C0  D004               	goto	l1929
   785                           
   786                           ;main.c: 119: TRISA=0x00;
   787  0003C2  0E00               	movlw	0
   788  0003C4  6E88               	movwf	3976,c	;volatile
   789                           
   790                           ;main.c: 120: T_4();
   791  0003C6  EC72  F004         	call	_T_4	;wreg free
   792  0003CA                     l1929:
   793                           
   794                           ;main.c: 121: }
   795                           ;main.c: 122: if((timer_value<greater) && (timer_value>fewer)){
   796  0003CA  C02A  F019         	movff	_timer_value,___lwtoft@c
   797  0003CE  C02B  F01A         	movff	_timer_value+1,___lwtoft@c+1
   798  0003D2  EC9C  F004         	call	___lwtoft	;wreg free
   799  0003D6  C019  F01C         	movff	?___lwtoft,___ftge@ff1
   800  0003DA  C01A  F01D         	movff	?___lwtoft+1,___ftge@ff1+1
   801  0003DE  C01B  F01E         	movff	?___lwtoft+2,___ftge@ff1+2
   802  0003E2  C060  F01F         	movff	main@greater,___ftge@ff2
   803  0003E6  C061  F020         	movff	main@greater+1,___ftge@ff2+1
   804  0003EA  C062  F021         	movff	main@greater+2,___ftge@ff2+2
   805  0003EE  ECDB  F003         	call	___ftge	;wreg free
   806  0003F2  B0D8               	btfsc	status,0,c
   807  0003F4  D01A               	goto	l338
   808  0003F6  C066  F01C         	movff	main@fewer,___ftge@ff1
   809  0003FA  C067  F01D         	movff	main@fewer+1,___ftge@ff1+1
   810  0003FE  C068  F01E         	movff	main@fewer+2,___ftge@ff1+2
   811  000402  C02A  F019         	movff	_timer_value,___lwtoft@c
   812  000406  C02B  F01A         	movff	_timer_value+1,___lwtoft@c+1
   813  00040A  EC9C  F004         	call	___lwtoft	;wreg free
   814  00040E  C019  F01F         	movff	?___lwtoft,___ftge@ff2
   815  000412  C01A  F020         	movff	?___lwtoft+1,___ftge@ff2+1
   816  000416  C01B  F021         	movff	?___lwtoft+2,___ftge@ff2+2
   817  00041A  ECDB  F003         	call	___ftge	;wreg free
   818  00041E  B0D8               	btfsc	status,0,c
   819  000420  D004               	goto	l338
   820                           
   821                           ;main.c: 123: TRISA=0xFF;
   822  000422  6888               	setf	3976,c	;volatile
   823                           
   824                           ;main.c: 124: Delay_tenthSec(delay);
   825  000424  5030               	movf	_delay,w,c
   826  000426  ECAE  F004         	call	_Delay_tenthSec
   827  00042A                     l338:
   828                           
   829                           ;main.c: 125: }
   830                           ;main.c: 126: if((timer_value<fewer) && (timer_value>f_boundary)){
   831  00042A  C02A  F019         	movff	_timer_value,___lwtoft@c
   832  00042E  C02B  F01A         	movff	_timer_value+1,___lwtoft@c+1
   833  000432  EC9C  F004         	call	___lwtoft	;wreg free
   834  000436  C019  F01C         	movff	?___lwtoft,___ftge@ff1
   835  00043A  C01A  F01D         	movff	?___lwtoft+1,___ftge@ff1+1
   836  00043E  C01B  F01E         	movff	?___lwtoft+2,___ftge@ff1+2
   837  000442  C066  F01F         	movff	main@fewer,___ftge@ff2
   838  000446  C067  F020         	movff	main@fewer+1,___ftge@ff2+1
   839  00044A  C068  F021         	movff	main@fewer+2,___ftge@ff2+2
   840  00044E  ECDB  F003         	call	___ftge	;wreg free
   841  000452  B0D8               	btfsc	status,0,c
   842  000454  D01A               	goto	l1943
   843  000456  C069  F01C         	movff	main@f_boundary,___ftge@ff1
   844  00045A  C06A  F01D         	movff	main@f_boundary+1,___ftge@ff1+1
   845  00045E  C06B  F01E         	movff	main@f_boundary+2,___ftge@ff1+2
   846  000462  C02A  F019         	movff	_timer_value,___lwtoft@c
   847  000466  C02B  F01A         	movff	_timer_value+1,___lwtoft@c+1
   848  00046A  EC9C  F004         	call	___lwtoft	;wreg free
   849  00046E  C019  F01F         	movff	?___lwtoft,___ftge@ff2
   850  000472  C01A  F020         	movff	?___lwtoft+1,___ftge@ff2+1
   851  000476  C01B  F021         	movff	?___lwtoft+2,___ftge@ff2+2
   852  00047A  ECDB  F003         	call	___ftge	;wreg free
   853  00047E  B0D8               	btfsc	status,0,c
   854  000480  D004               	goto	l1943
   855                           
   856                           ;main.c: 127: TRISA=0x00;
   857  000482  0E00               	movlw	0
   858  000484  6E88               	movwf	3976,c	;volatile
   859                           
   860                           ;main.c: 128: S_4();
   861  000486  EC87  F004         	call	_S_4	;wreg free
   862  00048A                     l1943:
   863                           
   864                           ;main.c: 129: }
   865                           ;main.c: 130: if(timer_value<f_boundary){
   866  00048A  C02A  F019         	movff	_timer_value,___lwtoft@c
   867  00048E  C02B  F01A         	movff	_timer_value+1,___lwtoft@c+1
   868  000492  EC9C  F004         	call	___lwtoft	;wreg free
   869  000496  C019  F01C         	movff	?___lwtoft,___ftge@ff1
   870  00049A  C01A  F01D         	movff	?___lwtoft+1,___ftge@ff1+1
   871  00049E  C01B  F01E         	movff	?___lwtoft+2,___ftge@ff1+2
   872  0004A2  C069  F01F         	movff	main@f_boundary,___ftge@ff2
   873  0004A6  C06A  F020         	movff	main@f_boundary+1,___ftge@ff2+1
   874  0004AA  C06B  F021         	movff	main@f_boundary+2,___ftge@ff2+2
   875  0004AE  ECDB  F003         	call	___ftge	;wreg free
   876  0004B2  B0D8               	btfsc	status,0,c
   877  0004B4  D740               	goto	l1917
   878                           
   879                           ;main.c: 131: TRISA=0xFF;
   880  0004B6  6888               	setf	3976,c	;volatile
   881                           
   882                           ;main.c: 132: Delay_tenthSec(delay);
   883  0004B8  5030               	movf	_delay,w,c
   884  0004BA  ECAE  F004         	call	_Delay_tenthSec
   885  0004BE  D73B               	goto	l1917
   886  0004C0                     l1949:
   887                           
   888                           ;main.c: 133: }
   889                           ;main.c: 134: }
   890                           ;main.c: 135: }
   891                           ;main.c: 136: if((timer_value<over_fewer) && (timer_value>over_f_boundary)){
   892  0004C0  C02A  F019         	movff	_timer_value,___lwtoft@c
   893  0004C4  C02B  F01A         	movff	_timer_value+1,___lwtoft@c+1
   894  0004C8  EC9C  F004         	call	___lwtoft	;wreg free
   895  0004CC  C019  F01C         	movff	?___lwtoft,___ftge@ff1
   896  0004D0  C01A  F01D         	movff	?___lwtoft+1,___ftge@ff1+1
   897  0004D4  C01B  F01E         	movff	?___lwtoft+2,___ftge@ff1+2
   898  0004D8  C072  F01F         	movff	main@over_fewer,___ftge@ff2
   899  0004DC  C073  F020         	movff	main@over_fewer+1,___ftge@ff2+1
   900  0004E0  C074  F021         	movff	main@over_fewer+2,___ftge@ff2+2
   901  0004E4  ECDB  F003         	call	___ftge	;wreg free
   902  0004E8  B0D8               	btfsc	status,0,c
   903  0004EA  D01A               	goto	l1957
   904  0004EC  C075  F01C         	movff	main@over_f_boundary,___ftge@ff1
   905  0004F0  C076  F01D         	movff	main@over_f_boundary+1,___ftge@ff1+1
   906  0004F4  C077  F01E         	movff	main@over_f_boundary+2,___ftge@ff1+2
   907  0004F8  C02A  F019         	movff	_timer_value,___lwtoft@c
   908  0004FC  C02B  F01A         	movff	_timer_value+1,___lwtoft@c+1
   909  000500  EC9C  F004         	call	___lwtoft	;wreg free
   910  000504  C019  F01F         	movff	?___lwtoft,___ftge@ff2
   911  000508  C01A  F020         	movff	?___lwtoft+1,___ftge@ff2+1
   912  00050C  C01B  F021         	movff	?___lwtoft+2,___ftge@ff2+2
   913  000510  ECDB  F003         	call	___ftge	;wreg free
   914  000514  B0D8               	btfsc	status,0,c
   915  000516  D004               	goto	l1957
   916                           
   917                           ;main.c: 137: TRISA=0x00;
   918  000518  0E00               	movlw	0
   919  00051A  6E88               	movwf	3976,c	;volatile
   920                           
   921                           ;main.c: 138: S_4();
   922  00051C  EC87  F004         	call	_S_4	;wreg free
   923  000520                     l1957:
   924                           
   925                           ;main.c: 139: }
   926                           ;main.c: 140: if(timer_value<over_f_boundary){
   927  000520  C02A  F019         	movff	_timer_value,___lwtoft@c
   928  000524  C02B  F01A         	movff	_timer_value+1,___lwtoft@c+1
   929  000528  EC9C  F004         	call	___lwtoft	;wreg free
   930  00052C  C019  F01C         	movff	?___lwtoft,___ftge@ff1
   931  000530  C01A  F01D         	movff	?___lwtoft+1,___ftge@ff1+1
   932  000534  C01B  F01E         	movff	?___lwtoft+2,___ftge@ff1+2
   933  000538  C075  F01F         	movff	main@over_f_boundary,___ftge@ff2
   934  00053C  C076  F020         	movff	main@over_f_boundary+1,___ftge@ff2+1
   935  000540  C077  F021         	movff	main@over_f_boundary+2,___ftge@ff2+2
   936  000544  ECDB  F003         	call	___ftge	;wreg free
   937  000548  B0D8               	btfsc	status,0,c
   938  00054A  D67F               	goto	l1901
   939                           
   940                           ;main.c: 141: TRISA=0xFF;
   941  00054C  6888               	setf	3976,c	;volatile
   942                           
   943                           ;main.c: 142: Delay_tenthSec(delay);
   944  00054E  5030               	movf	_delay,w,c
   945  000550  ECAE  F004         	call	_Delay_tenthSec
   946  000554  D67A               	goto	l1901
   947  000556                     __end_of_main:
   948                           	opt stack 0
   949                           tblptru	equ	0xFF8
   950                           tblptrh	equ	0xFF7
   951                           tblptrl	equ	0xFF6
   952                           tablat	equ	0xFF5
   953                           intcon	equ	0xFF2
   954                           postinc0	equ	0xFEE
   955                           wreg	equ	0xFE8
   956                           postdec1	equ	0xFE5
   957                           fsr1l	equ	0xFE1
   958                           status	equ	0xFD8
   959                           
   960 ;; *************** function ___lwtoft *****************
   961 ;; Defined at:
   962 ;;		line 28 in file "/Applications/microchip/xc8/v1.41/sources/common/lwtoft.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  c               2   24[COMRAM] unsigned int 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;                  3   24[COMRAM] float 
   969 ;; Registers used:
   970 ;;		wreg, status,2, status,0, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   976 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   979 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   980 ;;Total ram usage:        3 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; Hardware stack levels required when called:    3
   983 ;; This function calls:
   984 ;;		___ftpack
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text1
   991  000938                     __ptext1:
   992                           	opt stack 0
   993  000938                     ___lwtoft:
   994                           	opt stack 27
   995                           
   996                           ;incstack = 0
   997  000938  C019  F011         	movff	___lwtoft@c,___ftpack@arg
   998  00093C  C01A  F012         	movff	___lwtoft@c+1,___ftpack@arg+1
   999  000940  6A13               	clrf	___ftpack@arg+2,c
  1000  000942  0E8E               	movlw	142
  1001  000944  6E14               	movwf	___ftpack@exp,c
  1002  000946  0E00               	movlw	0
  1003  000948  6E15               	movwf	___ftpack@sign,c
  1004  00094A  EC84  F003         	call	___ftpack	;wreg free
  1005  00094E  C011  F019         	movff	?___ftpack,?___lwtoft
  1006  000952  C012  F01A         	movff	?___ftpack+1,?___lwtoft+1
  1007  000956  C013  F01B         	movff	?___ftpack+2,?___lwtoft+2
  1008  00095A  0012               	return	
  1009  00095C                     __end_of___lwtoft:
  1010                           	opt stack 0
  1011                           tblptru	equ	0xFF8
  1012                           tblptrh	equ	0xFF7
  1013                           tblptrl	equ	0xFF6
  1014                           tablat	equ	0xFF5
  1015                           intcon	equ	0xFF2
  1016                           postinc0	equ	0xFEE
  1017                           wreg	equ	0xFE8
  1018                           postdec1	equ	0xFE5
  1019                           fsr1l	equ	0xFE1
  1020                           status	equ	0xFD8
  1021                           
  1022 ;; *************** function ___ftmul *****************
  1023 ;; Defined at:
  1024 ;;		line 62 in file "/Applications/microchip/xc8/v1.41/sources/common/ftmul.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  f1              3   24[COMRAM] float 
  1027 ;;  f2              3   27[COMRAM] float 
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  f3_as_produc    3   34[COMRAM] unsigned um
  1030 ;;  sign            1   38[COMRAM] unsigned char 
  1031 ;;  cntr            1   37[COMRAM] unsigned char 
  1032 ;;  exp             1   33[COMRAM] unsigned char 
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  3   24[COMRAM] float 
  1035 ;; Registers used:
  1036 ;;		wreg, status,2, status,0, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1042 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1043 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1044 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1045 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1046 ;;Total ram usage:       15 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    3
  1049 ;; This function calls:
  1050 ;;		___ftpack
  1051 ;; This function is called by:
  1052 ;;		_main
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text2
  1057  000556                     __ptext2:
  1058                           	opt stack 0
  1059  000556                     ___ftmul:
  1060                           	opt stack 27
  1061                           
  1062                           ;incstack = 0
  1063  000556  C01B  F01F         	movff	___ftmul@f1+2,??___ftmul
  1064  00055A  6A20               	clrf	(??___ftmul+1)& (0+255),c
  1065  00055C  6A21               	clrf	(??___ftmul+2)& (0+255),c
  1066  00055E  341A               	rlcf	___ftmul@f1+1,w,c
  1067  000560  361F               	rlcf	??___ftmul& (0+255),f,c
  1068  000562  E301               	bnc	u961
  1069  000564  8020               	bsf	(??___ftmul+1)& (0+255),0,c
  1070  000566                     u961:
  1071  000566  501F               	movf	??___ftmul,w,c
  1072  000568  6E22               	movwf	___ftmul@exp,c
  1073  00056A  5022               	movf	___ftmul@exp,w,c
  1074  00056C  A4D8               	btfss	status,2,c
  1075  00056E  D007               	goto	l1801
  1076  000570  0E00               	movlw	0
  1077  000572  6E19               	movwf	?___ftmul,c
  1078  000574  0E00               	movlw	0
  1079  000576  6E1A               	movwf	?___ftmul+1,c
  1080  000578  0E00               	movlw	0
  1081  00057A  6E1B               	movwf	?___ftmul+2,c
  1082  00057C  0012               	return	
  1083  00057E                     l1801:
  1084  00057E  C01E  F01F         	movff	___ftmul@f2+2,??___ftmul
  1085  000582  6A20               	clrf	(??___ftmul+1)& (0+255),c
  1086  000584  6A21               	clrf	(??___ftmul+2)& (0+255),c
  1087  000586  341D               	rlcf	___ftmul@f2+1,w,c
  1088  000588  361F               	rlcf	??___ftmul& (0+255),f,c
  1089  00058A  E301               	bnc	u981
  1090  00058C  8020               	bsf	(??___ftmul+1)& (0+255),0,c
  1091  00058E                     u981:
  1092  00058E  501F               	movf	??___ftmul,w,c
  1093  000590  6E27               	movwf	___ftmul@sign,c
  1094  000592  5027               	movf	___ftmul@sign,w,c
  1095  000594  A4D8               	btfss	status,2,c
  1096  000596  D007               	goto	l1807
  1097  000598  0E00               	movlw	0
  1098  00059A  6E19               	movwf	?___ftmul,c
  1099  00059C  0E00               	movlw	0
  1100  00059E  6E1A               	movwf	?___ftmul+1,c
  1101  0005A0  0E00               	movlw	0
  1102  0005A2  6E1B               	movwf	?___ftmul+2,c
  1103  0005A4  0012               	return	
  1104  0005A6                     l1807:
  1105  0005A6  5027               	movf	___ftmul@sign,w,c
  1106  0005A8  0F7B               	addlw	123
  1107  0005AA  2622               	addwf	___ftmul@exp,f,c
  1108  0005AC  C01B  F027         	movff	___ftmul@f1+2,___ftmul@sign
  1109  0005B0  501E               	movf	___ftmul@f2+2,w,c
  1110  0005B2  1A27               	xorwf	___ftmul@sign,f,c
  1111  0005B4  0E80               	movlw	128
  1112  0005B6  1627               	andwf	___ftmul@sign,f,c
  1113  0005B8  8E1A               	bsf	___ftmul@f1+1,7,c
  1114  0005BA  8E1D               	bsf	___ftmul@f2+1,7,c
  1115  0005BC  0EFF               	movlw	255
  1116  0005BE  161C               	andwf	___ftmul@f2,f,c
  1117  0005C0  0EFF               	movlw	255
  1118  0005C2  161D               	andwf	___ftmul@f2+1,f,c
  1119  0005C4  0E00               	movlw	0
  1120  0005C6  161E               	andwf	___ftmul@f2+2,f,c
  1121  0005C8  0E00               	movlw	0
  1122  0005CA  6E23               	movwf	___ftmul@f3_as_product,c
  1123  0005CC  0E00               	movlw	0
  1124  0005CE  6E24               	movwf	___ftmul@f3_as_product+1,c
  1125  0005D0  0E00               	movlw	0
  1126  0005D2  6E25               	movwf	___ftmul@f3_as_product+2,c
  1127  0005D4  0E07               	movlw	7
  1128  0005D6  6E26               	movwf	___ftmul@cntr,c
  1129  0005D8                     l1821:
  1130  0005D8  A019               	btfss	___ftmul@f1,0,c
  1131  0005DA  D006               	goto	l1825
  1132  0005DC  501C               	movf	___ftmul@f2,w,c
  1133  0005DE  2623               	addwf	___ftmul@f3_as_product,f,c
  1134  0005E0  501D               	movf	___ftmul@f2+1,w,c
  1135  0005E2  2224               	addwfc	___ftmul@f3_as_product+1,f,c
  1136  0005E4  501E               	movf	___ftmul@f2+2,w,c
  1137  0005E6  2225               	addwfc	___ftmul@f3_as_product+2,f,c
  1138  0005E8                     l1825:
  1139  0005E8  90D8               	bcf	status,0,c
  1140  0005EA  321B               	rrcf	___ftmul@f1+2,f,c
  1141  0005EC  321A               	rrcf	___ftmul@f1+1,f,c
  1142  0005EE  3219               	rrcf	___ftmul@f1,f,c
  1143  0005F0  90D8               	bcf	status,0,c
  1144  0005F2  361C               	rlcf	___ftmul@f2,f,c
  1145  0005F4  361D               	rlcf	___ftmul@f2+1,f,c
  1146  0005F6  361E               	rlcf	___ftmul@f2+2,f,c
  1147  0005F8  2E26               	decfsz	___ftmul@cntr,f,c
  1148  0005FA  D7EE               	goto	l1821
  1149  0005FC  0E09               	movlw	9
  1150  0005FE  6E26               	movwf	___ftmul@cntr,c
  1151  000600                     l1831:
  1152  000600  A019               	btfss	___ftmul@f1,0,c
  1153  000602  D006               	goto	l1835
  1154  000604  501C               	movf	___ftmul@f2,w,c
  1155  000606  2623               	addwf	___ftmul@f3_as_product,f,c
  1156  000608  501D               	movf	___ftmul@f2+1,w,c
  1157  00060A  2224               	addwfc	___ftmul@f3_as_product+1,f,c
  1158  00060C  501E               	movf	___ftmul@f2+2,w,c
  1159  00060E  2225               	addwfc	___ftmul@f3_as_product+2,f,c
  1160  000610                     l1835:
  1161  000610  90D8               	bcf	status,0,c
  1162  000612  321B               	rrcf	___ftmul@f1+2,f,c
  1163  000614  321A               	rrcf	___ftmul@f1+1,f,c
  1164  000616  3219               	rrcf	___ftmul@f1,f,c
  1165  000618  90D8               	bcf	status,0,c
  1166  00061A  3225               	rrcf	___ftmul@f3_as_product+2,f,c
  1167  00061C  3224               	rrcf	___ftmul@f3_as_product+1,f,c
  1168  00061E  3223               	rrcf	___ftmul@f3_as_product,f,c
  1169  000620  2E26               	decfsz	___ftmul@cntr,f,c
  1170  000622  D7EE               	goto	l1831
  1171  000624  C023  F011         	movff	___ftmul@f3_as_product,___ftpack@arg
  1172  000628  C024  F012         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1173  00062C  C025  F013         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1174  000630  C022  F014         	movff	___ftmul@exp,___ftpack@exp
  1175  000634  C027  F015         	movff	___ftmul@sign,___ftpack@sign
  1176  000638  EC84  F003         	call	___ftpack	;wreg free
  1177  00063C  C011  F019         	movff	?___ftpack,?___ftmul
  1178  000640  C012  F01A         	movff	?___ftpack+1,?___ftmul+1
  1179  000644  C013  F01B         	movff	?___ftpack+2,?___ftmul+2
  1180  000648  0012               	return	
  1181  00064A                     __end_of___ftmul:
  1182                           	opt stack 0
  1183                           tblptru	equ	0xFF8
  1184                           tblptrh	equ	0xFF7
  1185                           tblptrl	equ	0xFF6
  1186                           tablat	equ	0xFF5
  1187                           intcon	equ	0xFF2
  1188                           postinc0	equ	0xFEE
  1189                           wreg	equ	0xFE8
  1190                           postdec1	equ	0xFE5
  1191                           fsr1l	equ	0xFE1
  1192                           status	equ	0xFD8
  1193                           
  1194 ;; *************** function ___ftpack *****************
  1195 ;; Defined at:
  1196 ;;		line 62 in file "/Applications/microchip/xc8/v1.41/sources/common/float.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  arg             3   16[COMRAM] unsigned um
  1199 ;;  exp             1   19[COMRAM] unsigned char 
  1200 ;;  sign            1   20[COMRAM] unsigned char 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  3   16[COMRAM] float 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1212 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1214 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1215 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1216 ;;Total ram usage:        8 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    2
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		___ftmul
  1223 ;;		___lwtoft
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text3
  1228  000708                     __ptext3:
  1229                           	opt stack 0
  1230  000708                     ___ftpack:
  1231                           	opt stack 27
  1232                           
  1233                           ;incstack = 0
  1234  000708  5014               	movf	___ftpack@exp,w,c
  1235  00070A  B4D8               	btfsc	status,2,c
  1236  00070C  D005               	goto	l1711
  1237  00070E  5011               	movf	___ftpack@arg,w,c
  1238  000710  1012               	iorwf	___ftpack@arg+1,w,c
  1239  000712  1013               	iorwf	___ftpack@arg+2,w,c
  1240  000714  A4D8               	btfss	status,2,c
  1241  000716  D00C               	goto	l1717
  1242  000718                     l1711:
  1243  000718  0E00               	movlw	0
  1244  00071A  6E11               	movwf	?___ftpack,c
  1245  00071C  0E00               	movlw	0
  1246  00071E  6E12               	movwf	?___ftpack+1,c
  1247  000720  0E00               	movlw	0
  1248  000722  6E13               	movwf	?___ftpack+2,c
  1249  000724  0012               	return	
  1250  000726                     l1715:
  1251  000726  2A14               	incf	___ftpack@exp,f,c
  1252  000728  90D8               	bcf	status,0,c
  1253  00072A  3213               	rrcf	___ftpack@arg+2,f,c
  1254  00072C  3212               	rrcf	___ftpack@arg+1,f,c
  1255  00072E  3211               	rrcf	___ftpack@arg,f,c
  1256  000730                     l1717:
  1257  000730  0E00               	movlw	0
  1258  000732  1411               	andwf	___ftpack@arg,w,c
  1259  000734  6E16               	movwf	??___ftpack& (0+255),c
  1260  000736  0E00               	movlw	0
  1261  000738  1412               	andwf	___ftpack@arg+1,w,c
  1262  00073A  6E17               	movwf	(??___ftpack+1)& (0+255),c
  1263  00073C  0EFE               	movlw	254
  1264  00073E  1413               	andwf	___ftpack@arg+2,w,c
  1265  000740  6E18               	movwf	(??___ftpack+2)& (0+255),c
  1266  000742  5016               	movf	??___ftpack,w,c
  1267  000744  1017               	iorwf	??___ftpack+1,w,c
  1268  000746  1018               	iorwf	??___ftpack+2,w,c
  1269  000748  B4D8               	btfsc	status,2,c
  1270  00074A  D00C               	goto	l1723
  1271  00074C  D7EC               	goto	l1715
  1272  00074E                     l1719:
  1273  00074E  2A14               	incf	___ftpack@exp,f,c
  1274  000750  0E01               	movlw	1
  1275  000752  2611               	addwf	___ftpack@arg,f,c
  1276  000754  0E00               	movlw	0
  1277  000756  2212               	addwfc	___ftpack@arg+1,f,c
  1278  000758  0E00               	movlw	0
  1279  00075A  2213               	addwfc	___ftpack@arg+2,f,c
  1280  00075C  90D8               	bcf	status,0,c
  1281  00075E  3213               	rrcf	___ftpack@arg+2,f,c
  1282  000760  3212               	rrcf	___ftpack@arg+1,f,c
  1283  000762  3211               	rrcf	___ftpack@arg,f,c
  1284  000764                     l1723:
  1285  000764  0E00               	movlw	0
  1286  000766  1411               	andwf	___ftpack@arg,w,c
  1287  000768  6E16               	movwf	??___ftpack& (0+255),c
  1288  00076A  0E00               	movlw	0
  1289  00076C  1412               	andwf	___ftpack@arg+1,w,c
  1290  00076E  6E17               	movwf	(??___ftpack+1)& (0+255),c
  1291  000770  0EFF               	movlw	255
  1292  000772  1413               	andwf	___ftpack@arg+2,w,c
  1293  000774  6E18               	movwf	(??___ftpack+2)& (0+255),c
  1294  000776  5016               	movf	??___ftpack,w,c
  1295  000778  1017               	iorwf	??___ftpack+1,w,c
  1296  00077A  1018               	iorwf	??___ftpack+2,w,c
  1297  00077C  B4D8               	btfsc	status,2,c
  1298  00077E  D006               	goto	l1727
  1299  000780  D7E6               	goto	l1719
  1300  000782                     l1725:
  1301  000782  0614               	decf	___ftpack@exp,f,c
  1302  000784  90D8               	bcf	status,0,c
  1303  000786  3611               	rlcf	___ftpack@arg,f,c
  1304  000788  3612               	rlcf	___ftpack@arg+1,f,c
  1305  00078A  3613               	rlcf	___ftpack@arg+2,f,c
  1306  00078C                     l1727:
  1307  00078C  BE12               	btfsc	___ftpack@arg+1,7,c
  1308  00078E  D003               	goto	l572
  1309  000790  0E02               	movlw	2
  1310  000792  6014               	cpfslt	___ftpack@exp,c
  1311  000794  D7F6               	goto	l1725
  1312  000796                     l572:
  1313  000796  A014               	btfss	___ftpack@exp,0,c
  1314  000798  9E12               	bcf	___ftpack@arg+1,7,c
  1315  00079A  90D8               	bcf	status,0,c
  1316  00079C  3214               	rrcf	___ftpack@exp,f,c
  1317  00079E  5014               	movf	___ftpack@exp,w,c
  1318  0007A0  1213               	iorwf	___ftpack@arg+2,f,c
  1319  0007A2  5015               	movf	___ftpack@sign,w,c
  1320  0007A4  A4D8               	btfss	status,2,c
  1321  0007A6  8E13               	bsf	___ftpack@arg+2,7,c
  1322  0007A8  C011  F011         	movff	___ftpack@arg,?___ftpack
  1323  0007AC  C012  F012         	movff	___ftpack@arg+1,?___ftpack+1
  1324  0007B0  C013  F013         	movff	___ftpack@arg+2,?___ftpack+2
  1325  0007B4  0012               	return	
  1326  0007B6                     __end_of___ftpack:
  1327                           	opt stack 0
  1328                           tblptru	equ	0xFF8
  1329                           tblptrh	equ	0xFF7
  1330                           tblptrl	equ	0xFF6
  1331                           tablat	equ	0xFF5
  1332                           intcon	equ	0xFF2
  1333                           postinc0	equ	0xFEE
  1334                           wreg	equ	0xFE8
  1335                           postdec1	equ	0xFE5
  1336                           fsr1l	equ	0xFE1
  1337                           status	equ	0xFD8
  1338                           
  1339 ;; *************** function ___ftge *****************
  1340 ;; Defined at:
  1341 ;;		line 4 in file "/Applications/microchip/xc8/v1.41/sources/common/ftge.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  ff1             3   27[COMRAM] float 
  1344 ;;  ff2             3   30[COMRAM] float 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;		None               void
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1356 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1358 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1359 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1360 ;;Total ram usage:        9 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    2
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_main
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text4
  1371  0007B6                     __ptext4:
  1372                           	opt stack 0
  1373  0007B6                     ___ftge:
  1374                           	opt stack 28
  1375                           
  1376                           ;incstack = 0
  1377  0007B6  AE1E               	btfss	___ftge@ff1+2,7,c
  1378  0007B8  D016               	goto	l1847
  1379  0007BA  C01C  F022         	movff	___ftge@ff1,??___ftge
  1380  0007BE  C01D  F023         	movff	___ftge@ff1+1,??___ftge+1
  1381  0007C2  C01E  F024         	movff	___ftge@ff1+2,??___ftge+2
  1382  0007C6  1E22               	comf	??___ftge,f,c
  1383  0007C8  1E23               	comf	??___ftge+1,f,c
  1384  0007CA  1E24               	comf	??___ftge+2,f,c
  1385  0007CC  2A22               	incf	??___ftge,f,c
  1386  0007CE  0E00               	movlw	0
  1387  0007D0  2223               	addwfc	??___ftge+1,f,c
  1388  0007D2  2224               	addwfc	??___ftge+2,f,c
  1389  0007D4  0E00               	movlw	0
  1390  0007D6  2422               	addwf	??___ftge,w,c
  1391  0007D8  6E1C               	movwf	___ftge@ff1,c
  1392  0007DA  0E00               	movlw	0
  1393  0007DC  2023               	addwfc	??___ftge+1,w,c
  1394  0007DE  6E1D               	movwf	___ftge@ff1+1,c
  1395  0007E0  0E80               	movlw	128
  1396  0007E2  2024               	addwfc	??___ftge+2,w,c
  1397  0007E4  6E1E               	movwf	___ftge@ff1+2,c
  1398  0007E6                     l1847:
  1399  0007E6  AE21               	btfss	___ftge@ff2+2,7,c
  1400  0007E8  D016               	goto	l1851
  1401  0007EA  C01F  F022         	movff	___ftge@ff2,??___ftge
  1402  0007EE  C020  F023         	movff	___ftge@ff2+1,??___ftge+1
  1403  0007F2  C021  F024         	movff	___ftge@ff2+2,??___ftge+2
  1404  0007F6  1E22               	comf	??___ftge,f,c
  1405  0007F8  1E23               	comf	??___ftge+1,f,c
  1406  0007FA  1E24               	comf	??___ftge+2,f,c
  1407  0007FC  2A22               	incf	??___ftge,f,c
  1408  0007FE  0E00               	movlw	0
  1409  000800  2223               	addwfc	??___ftge+1,f,c
  1410  000802  2224               	addwfc	??___ftge+2,f,c
  1411  000804  0E00               	movlw	0
  1412  000806  2422               	addwf	??___ftge,w,c
  1413  000808  6E1F               	movwf	___ftge@ff2,c
  1414  00080A  0E00               	movlw	0
  1415  00080C  2023               	addwfc	??___ftge+1,w,c
  1416  00080E  6E20               	movwf	___ftge@ff2+1,c
  1417  000810  0E80               	movlw	128
  1418  000812  2024               	addwfc	??___ftge+2,w,c
  1419  000814  6E21               	movwf	___ftge@ff2+2,c
  1420  000816                     l1851:
  1421  000816  0E00               	movlw	0
  1422  000818  1A1C               	xorwf	___ftge@ff1,f,c
  1423  00081A  0E00               	movlw	0
  1424  00081C  1A1D               	xorwf	___ftge@ff1+1,f,c
  1425  00081E  0E80               	movlw	128
  1426  000820  1A1E               	xorwf	___ftge@ff1+2,f,c
  1427  000822  0E00               	movlw	0
  1428  000824  1A1F               	xorwf	___ftge@ff2,f,c
  1429  000826  0E00               	movlw	0
  1430  000828  1A20               	xorwf	___ftge@ff2+1,f,c
  1431  00082A  0E80               	movlw	128
  1432  00082C  1A21               	xorwf	___ftge@ff2+2,f,c
  1433  00082E  501F               	movf	___ftge@ff2,w,c
  1434  000830  5C1C               	subwf	___ftge@ff1,w,c
  1435  000832  5020               	movf	___ftge@ff2+1,w,c
  1436  000834  581D               	subwfb	___ftge@ff1+1,w,c
  1437  000836  5021               	movf	___ftge@ff2+2,w,c
  1438  000838  581E               	subwfb	___ftge@ff1+2,w,c
  1439  00083A  B0D8               	btfsc	status,0,c
  1440  00083C  D002               	goto	l1857
  1441  00083E  90D8               	bcf	status,0,c
  1442  000840  0012               	return	
  1443  000842                     l1857:
  1444  000842  80D8               	bsf	status,0,c
  1445  000844  0012               	return	
  1446  000846                     __end_of___ftge:
  1447                           	opt stack 0
  1448                           tblptru	equ	0xFF8
  1449                           tblptrh	equ	0xFF7
  1450                           tblptrl	equ	0xFF6
  1451                           tablat	equ	0xFF5
  1452                           intcon	equ	0xFF2
  1453                           postinc0	equ	0xFEE
  1454                           wreg	equ	0xFE8
  1455                           postdec1	equ	0xFE5
  1456                           fsr1l	equ	0xFE1
  1457                           status	equ	0xFD8
  1458                           
  1459 ;; *************** function _T_4 *****************
  1460 ;; Defined at:
  1461 ;;		line 31 in file "main.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg, status,2, status,0, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1479 ;;Total ram usage:        0 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    3
  1482 ;; This function calls:
  1483 ;;		_Delay_tenthSec
  1484 ;;		_phase_1
  1485 ;;		_phase_2
  1486 ;;		_phase_3
  1487 ;;		_phase_4
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text5
  1494  0008E4                     __ptext5:
  1495                           	opt stack 0
  1496  0008E4                     _T_4:
  1497                           	opt stack 27
  1498                           
  1499                           ;main.c: 32: Delay_tenthSec(delay);
  1500                           
  1501                           ;incstack = 0
  1502  0008E4  5030               	movf	_delay,w,c
  1503  0008E6  ECAE  F004         	call	_Delay_tenthSec
  1504                           
  1505                           ;main.c: 33: phase_1();
  1506  0008EA  EC1A  F005         	call	_phase_1	;wreg free
  1507                           
  1508                           ;main.c: 34: Delay_tenthSec(delay);
  1509  0008EE  5030               	movf	_delay,w,c
  1510  0008F0  ECAE  F004         	call	_Delay_tenthSec
  1511                           
  1512                           ;main.c: 35: phase_2();
  1513  0008F4  EC17  F005         	call	_phase_2	;wreg free
  1514                           
  1515                           ;main.c: 36: Delay_tenthSec(delay);
  1516  0008F8  5030               	movf	_delay,w,c
  1517  0008FA  ECAE  F004         	call	_Delay_tenthSec
  1518                           
  1519                           ;main.c: 37: phase_3();
  1520  0008FE  EC14  F005         	call	_phase_3	;wreg free
  1521                           
  1522                           ;main.c: 38: Delay_tenthSec(delay);
  1523  000902  5030               	movf	_delay,w,c
  1524  000904  ECAE  F004         	call	_Delay_tenthSec
  1525                           
  1526                           ;main.c: 39: phase_4();
  1527  000908  EC11  F005         	call	_phase_4	;wreg free
  1528  00090C  0012               	return		;funcret
  1529  00090E                     __end_of_T_4:
  1530                           	opt stack 0
  1531                           tblptru	equ	0xFF8
  1532                           tblptrh	equ	0xFF7
  1533                           tblptrl	equ	0xFF6
  1534                           tablat	equ	0xFF5
  1535                           intcon	equ	0xFF2
  1536                           postinc0	equ	0xFEE
  1537                           wreg	equ	0xFE8
  1538                           postdec1	equ	0xFE5
  1539                           fsr1l	equ	0xFE1
  1540                           status	equ	0xFD8
  1541                           
  1542 ;; *************** function _S_4 *****************
  1543 ;; Defined at:
  1544 ;;		line 41 in file "main.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2, status,0, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    3
  1565 ;; This function calls:
  1566 ;;		_Delay_tenthSec
  1567 ;;		_phase_1
  1568 ;;		_phase_2
  1569 ;;		_phase_3
  1570 ;;		_phase_4
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text6
  1577  00090E                     __ptext6:
  1578                           	opt stack 0
  1579  00090E                     _S_4:
  1580                           	opt stack 27
  1581                           
  1582                           ;main.c: 42: Delay_tenthSec(delay);
  1583                           
  1584                           ;incstack = 0
  1585  00090E  5030               	movf	_delay,w,c
  1586  000910  ECAE  F004         	call	_Delay_tenthSec
  1587                           
  1588                           ;main.c: 43: phase_4();
  1589  000914  EC11  F005         	call	_phase_4	;wreg free
  1590                           
  1591                           ;main.c: 44: Delay_tenthSec(delay);
  1592  000918  5030               	movf	_delay,w,c
  1593  00091A  ECAE  F004         	call	_Delay_tenthSec
  1594                           
  1595                           ;main.c: 45: phase_3();
  1596  00091E  EC14  F005         	call	_phase_3	;wreg free
  1597                           
  1598                           ;main.c: 46: Delay_tenthSec(delay);
  1599  000922  5030               	movf	_delay,w,c
  1600  000924  ECAE  F004         	call	_Delay_tenthSec
  1601                           
  1602                           ;main.c: 47: phase_2();
  1603  000928  EC17  F005         	call	_phase_2	;wreg free
  1604                           
  1605                           ;main.c: 48: Delay_tenthSec(delay);
  1606  00092C  5030               	movf	_delay,w,c
  1607  00092E  ECAE  F004         	call	_Delay_tenthSec
  1608                           
  1609                           ;main.c: 49: phase_1();
  1610  000932  EC1A  F005         	call	_phase_1	;wreg free
  1611  000936  0012               	return		;funcret
  1612  000938                     __end_of_S_4:
  1613                           	opt stack 0
  1614                           tblptru	equ	0xFF8
  1615                           tblptrh	equ	0xFF7
  1616                           tblptrl	equ	0xFF6
  1617                           tablat	equ	0xFF5
  1618                           intcon	equ	0xFF2
  1619                           postinc0	equ	0xFEE
  1620                           wreg	equ	0xFE8
  1621                           postdec1	equ	0xFE5
  1622                           fsr1l	equ	0xFE1
  1623                           status	equ	0xFD8
  1624                           
  1625 ;; *************** function _phase_4 *****************
  1626 ;; Defined at:
  1627 ;;		line 23 in file "main.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, status,2
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1645 ;;Total ram usage:        0 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:    2
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_T_4
  1652 ;;		_S_4
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text7
  1657  000A22                     __ptext7:
  1658                           	opt stack 0
  1659  000A22                     _phase_4:
  1660                           	opt stack 27
  1661                           
  1662                           ;main.c: 24: LATA=0x00;
  1663                           
  1664                           ;incstack = 0
  1665  000A22  0E00               	movlw	0
  1666  000A24  6E83               	movwf	3971,c	;volatile
  1667  000A26  0012               	return		;funcret
  1668  000A28                     __end_of_phase_4:
  1669                           	opt stack 0
  1670                           tblptru	equ	0xFF8
  1671                           tblptrh	equ	0xFF7
  1672                           tblptrl	equ	0xFF6
  1673                           tablat	equ	0xFF5
  1674                           intcon	equ	0xFF2
  1675                           postinc0	equ	0xFEE
  1676                           wreg	equ	0xFE8
  1677                           postdec1	equ	0xFE5
  1678                           fsr1l	equ	0xFE1
  1679                           status	equ	0xFD8
  1680                           
  1681 ;; *************** function _phase_3 *****************
  1682 ;; Defined at:
  1683 ;;		line 20 in file "main.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, status,2
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1701 ;;Total ram usage:        0 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; Hardware stack levels required when called:    2
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_T_4
  1708 ;;		_S_4
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           	psect	text8
  1713  000A28                     __ptext8:
  1714                           	opt stack 0
  1715  000A28                     _phase_3:
  1716                           	opt stack 27
  1717                           
  1718                           ;main.c: 21: LATA=0x02;
  1719                           
  1720                           ;incstack = 0
  1721  000A28  0E02               	movlw	2
  1722  000A2A  6E83               	movwf	3971,c	;volatile
  1723  000A2C  0012               	return		;funcret
  1724  000A2E                     __end_of_phase_3:
  1725                           	opt stack 0
  1726                           tblptru	equ	0xFF8
  1727                           tblptrh	equ	0xFF7
  1728                           tblptrl	equ	0xFF6
  1729                           tablat	equ	0xFF5
  1730                           intcon	equ	0xFF2
  1731                           postinc0	equ	0xFEE
  1732                           wreg	equ	0xFE8
  1733                           postdec1	equ	0xFE5
  1734                           fsr1l	equ	0xFE1
  1735                           status	equ	0xFD8
  1736                           
  1737 ;; *************** function _phase_2 *****************
  1738 ;; Defined at:
  1739 ;;		line 17 in file "main.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;		None
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, status,2
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1757 ;;Total ram usage:        0 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    2
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_T_4
  1764 ;;		_S_4
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text9
  1769  000A2E                     __ptext9:
  1770                           	opt stack 0
  1771  000A2E                     _phase_2:
  1772                           	opt stack 27
  1773                           
  1774                           ;main.c: 18: LATA=0x06;
  1775                           
  1776                           ;incstack = 0
  1777  000A2E  0E06               	movlw	6
  1778  000A30  6E83               	movwf	3971,c	;volatile
  1779  000A32  0012               	return		;funcret
  1780  000A34                     __end_of_phase_2:
  1781                           	opt stack 0
  1782                           tblptru	equ	0xFF8
  1783                           tblptrh	equ	0xFF7
  1784                           tblptrl	equ	0xFF6
  1785                           tablat	equ	0xFF5
  1786                           intcon	equ	0xFF2
  1787                           postinc0	equ	0xFEE
  1788                           wreg	equ	0xFE8
  1789                           postdec1	equ	0xFE5
  1790                           fsr1l	equ	0xFE1
  1791                           status	equ	0xFD8
  1792                           
  1793 ;; *************** function _phase_1 *****************
  1794 ;; Defined at:
  1795 ;;		line 14 in file "main.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg, status,2
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1813 ;;Total ram usage:        0 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    2
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_T_4
  1820 ;;		_S_4
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text10
  1825  000A34                     __ptext10:
  1826                           	opt stack 0
  1827  000A34                     _phase_1:
  1828                           	opt stack 27
  1829                           
  1830                           ;main.c: 15: LATA=0x04;
  1831                           
  1832                           ;incstack = 0
  1833  000A34  0E04               	movlw	4
  1834  000A36  6E83               	movwf	3971,c	;volatile
  1835  000A38  0012               	return		;funcret
  1836  000A3A                     __end_of_phase_1:
  1837                           	opt stack 0
  1838                           tblptru	equ	0xFF8
  1839                           tblptrh	equ	0xFF7
  1840                           tblptrl	equ	0xFF6
  1841                           tablat	equ	0xFF5
  1842                           intcon	equ	0xFF2
  1843                           postinc0	equ	0xFEE
  1844                           wreg	equ	0xFE8
  1845                           postdec1	equ	0xFE5
  1846                           fsr1l	equ	0xFE1
  1847                           status	equ	0xFD8
  1848                           
  1849 ;; *************** function _Delay_tenthSec *****************
  1850 ;; Defined at:
  1851 ;;		line 7 in file "main.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  ds              1    wreg     unsigned char 
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;  ds              1   17[COMRAM] unsigned char 
  1856 ;;  i               1   18[COMRAM] unsigned char 
  1857 ;;  x               1    0        unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2, status,0, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1870 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1871 ;;Total ram usage:        3 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    2
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_T_4
  1878 ;;		_S_4
  1879 ;;		_main
  1880 ;;		_do_nothing
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           	psect	text11
  1885  00095C                     __ptext11:
  1886                           	opt stack 0
  1887  00095C                     _Delay_tenthSec:
  1888                           	opt stack 27
  1889                           
  1890                           ;incstack = 0
  1891                           ;Delay_tenthSec@ds stored from wreg
  1892  00095C  6E12               	movwf	Delay_tenthSec@ds,c
  1893                           
  1894                           ;main.c: 8: unsigned char i, x;
  1895                           ;main.c: 9: for (i=0; i<ds; i++){
  1896  00095E  0E00               	movlw	0
  1897  000960  6E13               	movwf	Delay_tenthSec@i,c
  1898  000962  D009               	goto	l1697
  1899  000964                     l1693:
  1900                           
  1901                           ;main.c: 10: _delay((unsigned long)((3)*(64000000/4000.0)));
  1902  000964  0E3F               	movlw	63
  1903  000966  6E11               	movwf	??_Delay_tenthSec& (0+255),c
  1904  000968  0E55               	movlw	85
  1905  00096A                     u1217:
  1906  00096A  2EE8               	decfsz	wreg,f,c
  1907  00096C  D7FE               	bra	u1217
  1908  00096E  2E11               	decfsz	??_Delay_tenthSec& (0+255),f,c
  1909  000970  D7FC               	bra	u1217
  1910  000972  F000               	nop	
  1911  000974  2A13               	incf	Delay_tenthSec@i,f,c
  1912  000976                     l1697:
  1913  000976  5012               	movf	Delay_tenthSec@ds,w,c
  1914  000978  5C13               	subwf	Delay_tenthSec@i,w,c
  1915  00097A  B0D8               	btfsc	status,0,c
  1916  00097C  0012               	return	
  1917  00097E  D7F2               	goto	l1693
  1918  000980                     __end_of_Delay_tenthSec:
  1919                           	opt stack 0
  1920                           tblptru	equ	0xFF8
  1921                           tblptrh	equ	0xFF7
  1922                           tblptrl	equ	0xFF6
  1923                           tablat	equ	0xFF5
  1924                           intcon	equ	0xFF2
  1925                           postinc0	equ	0xFEE
  1926                           wreg	equ	0xFE8
  1927                           postdec1	equ	0xFE5
  1928                           fsr1l	equ	0xFE1
  1929                           status	equ	0xFD8
  1930                           
  1931 ;; *************** function _SYSTEM_Initialize *****************
  1932 ;; Defined at:
  1933 ;;		line 107 in file "mcc_generated_files/mcc.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;		None
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1951 ;;Total ram usage:        0 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    4
  1954 ;; This function calls:
  1955 ;;		_INTERRUPT_Initialize
  1956 ;;		_OSCILLATOR_Initialize
  1957 ;;		_PIN_MANAGER_Initialize
  1958 ;;		_PWM1_Initialize
  1959 ;;		_TMR1_Initialize
  1960 ;;		_TMR4_Initialize
  1961 ;;		_ZCD_Initialize
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text12
  1968  0009C2                     __ptext12:
  1969                           	opt stack 0
  1970  0009C2                     _SYSTEM_Initialize:
  1971                           	opt stack 26
  1972                           
  1973                           ;mcc.c: 110: INTERRUPT_Initialize();
  1974                           
  1975                           ;incstack = 0
  1976  0009C2  EC23  F005         	call	_INTERRUPT_Initialize	;wreg free
  1977                           
  1978                           ;mcc.c: 111: PIN_MANAGER_Initialize();
  1979  0009C6  EC25  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  1980                           
  1981                           ;mcc.c: 112: OSCILLATOR_Initialize();
  1982  0009CA  ECD1  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1983                           
  1984                           ;mcc.c: 113: PWM1_Initialize();
  1985  0009CE  ECFE  F004         	call	_PWM1_Initialize	;wreg free
  1986                           
  1987                           ;mcc.c: 114: TMR4_Initialize();
  1988  0009D2  ECC0  F004         	call	_TMR4_Initialize	;wreg free
  1989                           
  1990                           ;mcc.c: 115: TMR1_Initialize();
  1991  0009D6  EC40  F004         	call	_TMR1_Initialize	;wreg free
  1992                           
  1993                           ;mcc.c: 116: ZCD_Initialize();
  1994  0009DA  EC09  F005         	call	_ZCD_Initialize	;wreg free
  1995  0009DE  0012               	return		;funcret
  1996  0009E0                     __end_of_SYSTEM_Initialize:
  1997                           	opt stack 0
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           intcon	equ	0xFF2
  2003                           postinc0	equ	0xFEE
  2004                           wreg	equ	0xFE8
  2005                           postdec1	equ	0xFE5
  2006                           fsr1l	equ	0xFE1
  2007                           status	equ	0xFD8
  2008                           
  2009 ;; *************** function _ZCD_Initialize *****************
  2010 ;; Defined at:
  2011 ;;		line 4 in file "mcc_generated_files/zcd.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2029 ;;Total ram usage:        0 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    2
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_SYSTEM_Initialize
  2036 ;;		_main
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text13
  2041  000A12                     __ptext13:
  2042                           	opt stack 0
  2043  000A12                     _ZCD_Initialize:
  2044                           	opt stack 28
  2045                           
  2046                           ;zcd.c: 6: ZCDCON = 0x82;
  2047                           
  2048                           ;incstack = 0
  2049  000A12  0E82               	movlw	130
  2050  000A14  010F               	movlb	15	; () banked
  2051  000A16  6F32               	movwf	50,b	;volatile
  2052                           
  2053                           ; BSR set to: 15
  2054                           ;zcd.c: 7: PIR2bits.ZCDIF = 0;
  2055  000A18  010E               	movlb	14	; () banked
  2056  000A1A  9DCC               	bcf	204,6,b	;volatile
  2057                           
  2058                           ; BSR set to: 14
  2059                           ;zcd.c: 8: PIE2bits.ZCDIE = 1;
  2060  000A1C  010E               	movlb	14	; () banked
  2061  000A1E  8DC4               	bsf	196,6,b	;volatile
  2062                           
  2063                           ; BSR set to: 14
  2064  000A20  0012               	return		;funcret
  2065  000A22                     __end_of_ZCD_Initialize:
  2066                           	opt stack 0
  2067                           tblptru	equ	0xFF8
  2068                           tblptrh	equ	0xFF7
  2069                           tblptrl	equ	0xFF6
  2070                           tablat	equ	0xFF5
  2071                           intcon	equ	0xFF2
  2072                           postinc0	equ	0xFEE
  2073                           wreg	equ	0xFE8
  2074                           postdec1	equ	0xFE5
  2075                           fsr1l	equ	0xFE1
  2076                           status	equ	0xFD8
  2077                           
  2078 ;; *************** function _TMR4_Initialize *****************
  2079 ;; Defined at:
  2080 ;;		line 63 in file "mcc_generated_files/tmr4.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2098 ;;Total ram usage:        0 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    3
  2101 ;; This function calls:
  2102 ;;		_TMR4_Start
  2103 ;; This function is called by:
  2104 ;;		_SYSTEM_Initialize
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text14
  2109  000980                     __ptext14:
  2110                           	opt stack 0
  2111  000980                     _TMR4_Initialize:
  2112                           	opt stack 26
  2113                           
  2114                           ;tmr4.c: 68: T4CON = 0x70;
  2115                           
  2116                           ; BSR set to: 14
  2117                           ;incstack = 0
  2118  000980  0E70               	movlw	112
  2119  000982  6EB7               	movwf	4023,c	;volatile
  2120                           
  2121                           ;tmr4.c: 71: T4CLKCON = 0x01;
  2122  000984  0E01               	movlw	1
  2123  000986  6EB9               	movwf	4025,c	;volatile
  2124                           
  2125                           ;tmr4.c: 74: T4HLT = 0x00;
  2126  000988  0E00               	movlw	0
  2127  00098A  6EB8               	movwf	4024,c	;volatile
  2128                           
  2129                           ;tmr4.c: 77: T4RST = 0x00;
  2130  00098C  0E00               	movlw	0
  2131  00098E  6EBA               	movwf	4026,c	;volatile
  2132                           
  2133                           ;tmr4.c: 80: T4PR = 0x35;
  2134  000990  0E35               	movlw	53
  2135  000992  6EB6               	movwf	4022,c	;volatile
  2136                           
  2137                           ;tmr4.c: 83: T4TMR = 0x00;
  2138  000994  0E00               	movlw	0
  2139  000996  6EB5               	movwf	4021,c	;volatile
  2140                           
  2141                           ;tmr4.c: 86: PIR4bits.TMR4IF = 0;
  2142  000998  010E               	movlb	14	; () banked
  2143  00099A  97CE               	bcf	206,3,b	;volatile
  2144                           
  2145                           ; BSR set to: 14
  2146                           ;tmr4.c: 89: TMR4_Start();
  2147  00099C  EC1F  F005         	call	_TMR4_Start	;wreg free
  2148  0009A0  0012               	return		;funcret
  2149  0009A2                     __end_of_TMR4_Initialize:
  2150                           	opt stack 0
  2151                           tblptru	equ	0xFF8
  2152                           tblptrh	equ	0xFF7
  2153                           tblptrl	equ	0xFF6
  2154                           tablat	equ	0xFF5
  2155                           intcon	equ	0xFF2
  2156                           postinc0	equ	0xFEE
  2157                           wreg	equ	0xFE8
  2158                           postdec1	equ	0xFE5
  2159                           fsr1l	equ	0xFE1
  2160                           status	equ	0xFD8
  2161                           
  2162 ;; *************** function _TMR4_Start *****************
  2163 ;; Defined at:
  2164 ;;		line 104 in file "mcc_generated_files/tmr4.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;		None
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		None
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2182 ;;Total ram usage:        0 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:    2
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_TMR4_Initialize
  2189 ;;		_TMR4_StartTimer
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text15
  2194  000A3E                     __ptext15:
  2195                           	opt stack 0
  2196  000A3E                     _TMR4_Start:
  2197                           	opt stack 26
  2198                           
  2199                           ;tmr4.c: 107: T4CONbits.TMR4ON = 1;
  2200                           
  2201                           ;incstack = 0
  2202  000A3E  8EB7               	bsf	4023,7,c	;volatile
  2203  000A40  0012               	return		;funcret
  2204  000A42                     __end_of_TMR4_Start:
  2205                           	opt stack 0
  2206                           tblptru	equ	0xFF8
  2207                           tblptrh	equ	0xFF7
  2208                           tblptrl	equ	0xFF6
  2209                           tablat	equ	0xFF5
  2210                           intcon	equ	0xFF2
  2211                           postinc0	equ	0xFEE
  2212                           wreg	equ	0xFE8
  2213                           postdec1	equ	0xFE5
  2214                           fsr1l	equ	0xFE1
  2215                           status	equ	0xFD8
  2216                           
  2217 ;; *************** function _TMR1_Initialize *****************
  2218 ;; Defined at:
  2219 ;;		line 5 in file "mcc_generated_files/tmr1.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;		None
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2235 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2236 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2237 ;;Total ram usage:        2 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    3
  2240 ;; This function calls:
  2241 ;;		_TMR1_StartTimer
  2242 ;; This function is called by:
  2243 ;;		_SYSTEM_Initialize
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text16
  2248  000880                     __ptext16:
  2249                           	opt stack 0
  2250  000880                     _TMR1_Initialize:
  2251                           	opt stack 26
  2252                           
  2253                           ;tmr1.c: 7: T1CON = 0x32;
  2254                           
  2255                           ;incstack = 0
  2256  000880  0E32               	movlw	50
  2257  000882  6ECF               	movwf	4047,c	;volatile
  2258                           
  2259                           ;tmr1.c: 8: T1GCON = 0x00;
  2260  000884  0E00               	movlw	0
  2261  000886  6ED0               	movwf	4048,c	;volatile
  2262                           
  2263                           ;tmr1.c: 9: T1GATE = 0x00;
  2264  000888  0E00               	movlw	0
  2265  00088A  6ED1               	movwf	4049,c	;volatile
  2266                           
  2267                           ;tmr1.c: 10: T1CLK = 0x01;
  2268  00088C  0E01               	movlw	1
  2269  00088E  6ED2               	movwf	4050,c	;volatile
  2270                           
  2271                           ;tmr1.c: 11: TMR1H = 0x00;
  2272  000890  0E00               	movlw	0
  2273  000892  6ECE               	movwf	4046,c	;volatile
  2274                           
  2275                           ;tmr1.c: 12: TMR1L = 0x00;
  2276  000894  0E00               	movlw	0
  2277  000896  6ECD               	movwf	4045,c	;volatile
  2278                           
  2279                           ;tmr1.c: 13: timer1ReloadVal=(TMR1H << 8) | TMR1L;
  2280  000898  50CD               	movf	4045,w,c	;volatile
  2281  00089A  CFCE F011          	movff	4046,??_TMR1_Initialize	;volatile
  2282  00089E  6A12               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  2283  0008A0  C011  F012         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  2284  0008A4  6A11               	clrf	??_TMR1_Initialize,c
  2285  0008A6  1011               	iorwf	??_TMR1_Initialize,w,c
  2286  0008A8  6E34               	movwf	_timer1ReloadVal,c	;volatile
  2287  0008AA  5012               	movf	??_TMR1_Initialize+1,w,c
  2288  0008AC  6E35               	movwf	_timer1ReloadVal+1,c	;volatile
  2289                           
  2290                           ;tmr1.c: 14: PIR4bits.TMR1IF = 0;
  2291  0008AE  010E               	movlb	14	; () banked
  2292  0008B0  91CE               	bcf	206,0,b	;volatile
  2293                           
  2294                           ; BSR set to: 14
  2295                           ;tmr1.c: 15: TMR1_StartTimer();
  2296  0008B2  EC21  F005         	call	_TMR1_StartTimer	;wreg free
  2297  0008B6  0012               	return		;funcret
  2298  0008B8                     __end_of_TMR1_Initialize:
  2299                           	opt stack 0
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           intcon	equ	0xFF2
  2305                           postinc0	equ	0xFEE
  2306                           wreg	equ	0xFE8
  2307                           postdec1	equ	0xFE5
  2308                           fsr1l	equ	0xFE1
  2309                           status	equ	0xFD8
  2310                           
  2311 ;; *************** function _TMR1_StartTimer *****************
  2312 ;; Defined at:
  2313 ;;		line 18 in file "mcc_generated_files/tmr1.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		None
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2331 ;;Total ram usage:        0 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    2
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_TMR1_Initialize
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text17
  2342  000A42                     __ptext17:
  2343                           	opt stack 0
  2344  000A42                     _TMR1_StartTimer:
  2345                           	opt stack 26
  2346                           
  2347                           ;tmr1.c: 20: T1CONbits.TMR1ON = 1;
  2348                           
  2349                           ;incstack = 0
  2350  000A42  80CF               	bsf	4047,0,c	;volatile
  2351  000A44  0012               	return		;funcret
  2352  000A46                     __end_of_TMR1_StartTimer:
  2353                           	opt stack 0
  2354                           tblptru	equ	0xFF8
  2355                           tblptrh	equ	0xFF7
  2356                           tblptrl	equ	0xFF6
  2357                           tablat	equ	0xFF5
  2358                           intcon	equ	0xFF2
  2359                           postinc0	equ	0xFEE
  2360                           wreg	equ	0xFE8
  2361                           postdec1	equ	0xFE5
  2362                           fsr1l	equ	0xFE1
  2363                           status	equ	0xFD8
  2364                           
  2365 ;; *************** function _PWM1_Initialize *****************
  2366 ;; Defined at:
  2367 ;;		line 63 in file "mcc_generated_files/pwm1.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;		None
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2385 ;;Total ram usage:        0 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    2
  2388 ;; This function calls:
  2389 ;;		Nothing
  2390 ;; This function is called by:
  2391 ;;		_SYSTEM_Initialize
  2392 ;;		_main
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text18
  2397  0009FC                     __ptext18:
  2398                           	opt stack 0
  2399  0009FC                     _PWM1_Initialize:
  2400                           	opt stack 27
  2401                           
  2402                           ;pwm1.c: 68: CCP1CON = 0x8C;
  2403                           
  2404                           ;incstack = 0
  2405  0009FC  0E8C               	movlw	140
  2406  0009FE  6EAC               	movwf	4012,c	;volatile
  2407                           
  2408                           ;pwm1.c: 71: CCPR1H = 0x00;
  2409  000A00  0E00               	movlw	0
  2410  000A02  6EAB               	movwf	4011,c	;volatile
  2411                           
  2412                           ;pwm1.c: 74: CCPR1L = 0x6B;
  2413  000A04  0E6B               	movlw	107
  2414  000A06  6EAA               	movwf	4010,c	;volatile
  2415                           
  2416                           ;pwm1.c: 77: CCPTMRSbits.C1TSEL = 0x2;
  2417  000A08  50AE               	movf	4014,w,c	;volatile
  2418  000A0A  0BFC               	andlw	-4
  2419  000A0C  0902               	iorlw	2
  2420  000A0E  6EAE               	movwf	4014,c	;volatile
  2421  000A10  0012               	return		;funcret
  2422  000A12                     __end_of_PWM1_Initialize:
  2423                           	opt stack 0
  2424                           tblptru	equ	0xFF8
  2425                           tblptrh	equ	0xFF7
  2426                           tblptrl	equ	0xFF6
  2427                           tablat	equ	0xFF5
  2428                           intcon	equ	0xFF2
  2429                           postinc0	equ	0xFEE
  2430                           wreg	equ	0xFE8
  2431                           postdec1	equ	0xFE5
  2432                           fsr1l	equ	0xFE1
  2433                           status	equ	0xFD8
  2434                           
  2435 ;; *************** function _PIN_MANAGER_Initialize *****************
  2436 ;; Defined at:
  2437 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;  state           1   16[COMRAM] unsigned char 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2455 ;;Total ram usage:        1 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    2
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_SYSTEM_Initialize
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text19
  2466  00064A                     __ptext19:
  2467                           	opt stack 0
  2468  00064A                     _PIN_MANAGER_Initialize:
  2469                           	opt stack 27
  2470                           
  2471                           ;pin_manager.c: 56: LATE = 0x00;
  2472                           
  2473                           ;incstack = 0
  2474  00064A  0E00               	movlw	0
  2475  00064C  6E87               	movwf	3975,c	;volatile
  2476                           
  2477                           ;pin_manager.c: 57: LATD = 0x00;
  2478  00064E  0E00               	movlw	0
  2479  000650  6E86               	movwf	3974,c	;volatile
  2480                           
  2481                           ;pin_manager.c: 58: LATA = 0x00;
  2482  000652  0E00               	movlw	0
  2483  000654  6E83               	movwf	3971,c	;volatile
  2484                           
  2485                           ;pin_manager.c: 59: LATB = 0x00;
  2486  000656  0E00               	movlw	0
  2487  000658  6E84               	movwf	3972,c	;volatile
  2488                           
  2489                           ;pin_manager.c: 60: LATC = 0x00;
  2490  00065A  0E00               	movlw	0
  2491  00065C  6E85               	movwf	3973,c	;volatile
  2492                           
  2493                           ;pin_manager.c: 65: TRISE = 0x07;
  2494  00065E  0E07               	movlw	7
  2495  000660  6E8C               	movwf	3980,c	;volatile
  2496                           
  2497                           ;pin_manager.c: 66: TRISA = 0xFF;
  2498  000662  6888               	setf	3976,c	;volatile
  2499                           
  2500                           ;pin_manager.c: 67: TRISB = 0xFF;
  2501  000664  6889               	setf	3977,c	;volatile
  2502                           
  2503                           ;pin_manager.c: 68: TRISC = 0xFE;
  2504  000666  0EFE               	movlw	254
  2505  000668  6E8A               	movwf	3978,c	;volatile
  2506                           
  2507                           ;pin_manager.c: 69: TRISD = 0xFF;
  2508  00066A  688B               	setf	3979,c	;volatile
  2509                           
  2510                           ;pin_manager.c: 74: ANSELC = 0xDF;
  2511  00066C  0EDF               	movlw	223
  2512  00066E  010F               	movlb	15	; () banked
  2513  000670  6F21               	movwf	33,b	;volatile
  2514                           
  2515                           ; BSR set to: 15
  2516                           ;pin_manager.c: 75: ANSELB = 0xFF;
  2517  000672  010F               	movlb	15	; () banked
  2518  000674  6919               	setf	25,b	;volatile
  2519                           
  2520                           ; BSR set to: 15
  2521                           ;pin_manager.c: 76: ANSELD = 0xFF;
  2522  000676  010F               	movlb	15	; () banked
  2523  000678  6926               	setf	38,b	;volatile
  2524                           
  2525                           ;pin_manager.c: 77: ANSELE = 0x07;
  2526  00067A  0E07               	movlw	7
  2527  00067C  010F               	movlb	15	; () banked
  2528  00067E  6F2E               	movwf	46,b	;volatile
  2529                           
  2530                           ; BSR set to: 15
  2531                           ;pin_manager.c: 78: ANSELA = 0xFF;
  2532  000680  010F               	movlb	15	; () banked
  2533  000682  6911               	setf	17,b	;volatile
  2534                           
  2535                           ;pin_manager.c: 83: WPUD = 0x00;
  2536  000684  0E00               	movlw	0
  2537  000686  010F               	movlb	15	; () banked
  2538  000688  6F25               	movwf	37,b	;volatile
  2539                           
  2540                           ;pin_manager.c: 84: WPUE = 0x00;
  2541  00068A  0E00               	movlw	0
  2542  00068C  010F               	movlb	15	; () banked
  2543  00068E  6F2D               	movwf	45,b	;volatile
  2544                           
  2545                           ;pin_manager.c: 85: WPUB = 0x00;
  2546  000690  0E00               	movlw	0
  2547  000692  010F               	movlb	15	; () banked
  2548  000694  6F18               	movwf	24,b	;volatile
  2549                           
  2550                           ;pin_manager.c: 86: WPUA = 0x00;
  2551  000696  0E00               	movlw	0
  2552  000698  010F               	movlb	15	; () banked
  2553  00069A  6F10               	movwf	16,b	;volatile
  2554                           
  2555                           ;pin_manager.c: 87: WPUC = 0x00;
  2556  00069C  0E00               	movlw	0
  2557  00069E  010F               	movlb	15	; () banked
  2558  0006A0  6F20               	movwf	32,b	;volatile
  2559                           
  2560                           ;pin_manager.c: 92: ODCONE = 0x00;
  2561  0006A2  0E00               	movlw	0
  2562  0006A4  010F               	movlb	15	; () banked
  2563  0006A6  6F2C               	movwf	44,b	;volatile
  2564                           
  2565                           ;pin_manager.c: 93: ODCONA = 0x00;
  2566  0006A8  0E00               	movlw	0
  2567  0006AA  010F               	movlb	15	; () banked
  2568  0006AC  6F0F               	movwf	15,b	;volatile
  2569                           
  2570                           ;pin_manager.c: 94: ODCONB = 0x00;
  2571  0006AE  0E00               	movlw	0
  2572  0006B0  010F               	movlb	15	; () banked
  2573  0006B2  6F17               	movwf	23,b	;volatile
  2574                           
  2575                           ;pin_manager.c: 95: ODCONC = 0x00;
  2576  0006B4  0E00               	movlw	0
  2577  0006B6  010F               	movlb	15	; () banked
  2578  0006B8  6F1F               	movwf	31,b	;volatile
  2579                           
  2580                           ;pin_manager.c: 96: ODCOND = 0x00;
  2581  0006BA  0E00               	movlw	0
  2582  0006BC  010F               	movlb	15	; () banked
  2583  0006BE  6F24               	movwf	36,b	;volatile
  2584                           
  2585                           ;pin_manager.c: 103: bool state = GIE;
  2586  0006C0  0E00               	movlw	0
  2587  0006C2  BEF2               	btfsc	intcon,7,c	;volatile
  2588  0006C4  0E01               	movlw	1
  2589  0006C6  6E11               	movwf	PIN_MANAGER_Initialize@state,c
  2590                           
  2591                           ; BSR set to: 15
  2592                           ;pin_manager.c: 104: GIE = 0;
  2593  0006C8  9EF2               	bcf	intcon,7,c	;volatile
  2594                           
  2595                           ;pin_manager.c: 105: PPSLOCK = 0x55;
  2596  0006CA  0E55               	movlw	85
  2597  0006CC  010E               	movlb	14	; () banked
  2598  0006CE  6FA0               	movwf	160,b	;volatile
  2599                           
  2600                           ;pin_manager.c: 106: PPSLOCK = 0xAA;
  2601  0006D0  0EAA               	movlw	170
  2602  0006D2  010E               	movlb	14	; () banked
  2603  0006D4  6FA0               	movwf	160,b	;volatile
  2604                           
  2605                           ; BSR set to: 14
  2606                           ;pin_manager.c: 107: PPSLOCKbits.PPSLOCKED = 0x00;
  2607  0006D6  010E               	movlb	14	; () banked
  2608  0006D8  91A0               	bcf	160,0,b	;volatile
  2609                           
  2610                           ;pin_manager.c: 109: RC0PPS = 0x05;
  2611  0006DA  0E05               	movlw	5
  2612  0006DC  010E               	movlb	14	; () banked
  2613  0006DE  6FF7               	movwf	247,b	;volatile
  2614                           
  2615                           ; BSR set to: 14
  2616                           ;pin_manager.c: 110: T4INPPSbits.T4INPPS = 0x15;
  2617  0006E0  010E               	movlb	14	; () banked
  2618  0006E2  81AC               	bsf	172,0,b	;volatile
  2619  0006E4  93AC               	bcf	172,1,b	;volatile
  2620  0006E6  85AC               	bsf	172,2,b	;volatile
  2621  0006E8  97AC               	bcf	172,3,b	;volatile
  2622  0006EA  89AC               	bsf	172,4,b	;volatile
  2623                           
  2624                           ;pin_manager.c: 112: PPSLOCK = 0x55;
  2625  0006EC  0E55               	movlw	85
  2626  0006EE  010E               	movlb	14	; () banked
  2627  0006F0  6FA0               	movwf	160,b	;volatile
  2628                           
  2629                           ;pin_manager.c: 113: PPSLOCK = 0xAA;
  2630  0006F2  0EAA               	movlw	170
  2631  0006F4  010E               	movlb	14	; () banked
  2632  0006F6  6FA0               	movwf	160,b	;volatile
  2633                           
  2634                           ; BSR set to: 14
  2635                           ;pin_manager.c: 114: PPSLOCKbits.PPSLOCKED = 0x01;
  2636  0006F8  010E               	movlb	14	; () banked
  2637  0006FA  81A0               	bsf	160,0,b	;volatile
  2638                           
  2639                           ; BSR set to: 14
  2640                           ;pin_manager.c: 116: GIE = state;
  2641  0006FC  A011               	btfss	PIN_MANAGER_Initialize@state,0,c
  2642  0006FE  D002               	goto	u830
  2643  000700  8EF2               	bsf	intcon,7,c	;volatile
  2644  000702  0012               	return	
  2645  000704                     u830:
  2646  000704  9EF2               	bcf	intcon,7,c	;volatile
  2647  000706  0012               	return		;funcret
  2648  000708                     __end_of_PIN_MANAGER_Initialize:
  2649                           	opt stack 0
  2650                           tblptru	equ	0xFF8
  2651                           tblptrh	equ	0xFF7
  2652                           tblptrl	equ	0xFF6
  2653                           tablat	equ	0xFF5
  2654                           intcon	equ	0xFF2
  2655                           postinc0	equ	0xFEE
  2656                           wreg	equ	0xFE8
  2657                           postdec1	equ	0xFE5
  2658                           fsr1l	equ	0xFE1
  2659                           status	equ	0xFD8
  2660                           
  2661 ;; *************** function _OSCILLATOR_Initialize *****************
  2662 ;; Defined at:
  2663 ;;		line 119 in file "mcc_generated_files/mcc.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;		None
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;		None
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      void 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2681 ;;Total ram usage:        0 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    2
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_SYSTEM_Initialize
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text20
  2692  0009A2                     __ptext20:
  2693                           	opt stack 0
  2694  0009A2                     _OSCILLATOR_Initialize:
  2695                           	opt stack 27
  2696                           
  2697                           ;mcc.c: 122: OSCCON1 = 0x60;
  2698                           
  2699                           ;incstack = 0
  2700  0009A2  0E60               	movlw	96
  2701  0009A4  010E               	movlb	14	; () banked
  2702  0009A6  6FD8               	movwf	216,b	;volatile
  2703                           
  2704                           ;mcc.c: 124: OSCCON3 = 0x00;
  2705  0009A8  0E00               	movlw	0
  2706  0009AA  010E               	movlb	14	; () banked
  2707  0009AC  6FDA               	movwf	218,b	;volatile
  2708                           
  2709                           ;mcc.c: 126: OSCEN = 0x00;
  2710  0009AE  0E00               	movlw	0
  2711  0009B0  010E               	movlb	14	; () banked
  2712  0009B2  6FDC               	movwf	220,b	;volatile
  2713                           
  2714                           ;mcc.c: 128: OSCFRQ = 0x08;
  2715  0009B4  0E08               	movlw	8
  2716  0009B6  010E               	movlb	14	; () banked
  2717  0009B8  6FDE               	movwf	222,b	;volatile
  2718                           
  2719                           ;mcc.c: 130: OSCTUNE = 0x00;
  2720  0009BA  0E00               	movlw	0
  2721  0009BC  010E               	movlb	14	; () banked
  2722  0009BE  6FDD               	movwf	221,b	;volatile
  2723                           
  2724                           ; BSR set to: 14
  2725  0009C0  0012               	return		;funcret
  2726  0009C2                     __end_of_OSCILLATOR_Initialize:
  2727                           	opt stack 0
  2728                           tblptru	equ	0xFF8
  2729                           tblptrh	equ	0xFF7
  2730                           tblptrl	equ	0xFF6
  2731                           tablat	equ	0xFF5
  2732                           intcon	equ	0xFF2
  2733                           postinc0	equ	0xFEE
  2734                           wreg	equ	0xFE8
  2735                           postdec1	equ	0xFE5
  2736                           fsr1l	equ	0xFE1
  2737                           status	equ	0xFD8
  2738                           
  2739 ;; *************** function _INTERRUPT_Initialize *****************
  2740 ;; Defined at:
  2741 ;;		line 69 in file "main.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		None
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    2
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_SYSTEM_Initialize
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text21
  2770  000A46                     __ptext21:
  2771                           	opt stack 0
  2772  000A46                     _INTERRUPT_Initialize:
  2773                           	opt stack 27
  2774                           
  2775                           ;main.c: 72: INTCONbits.IPEN = 0;
  2776                           
  2777                           ; BSR set to: 14
  2778                           ;incstack = 0
  2779  000A46  9AF2               	bcf	intcon,5,c	;volatile
  2780  000A48  0012               	return		;funcret
  2781  000A4A                     __end_of_INTERRUPT_Initialize:
  2782                           	opt stack 0
  2783                           tblptru	equ	0xFF8
  2784                           tblptrh	equ	0xFF7
  2785                           tblptrl	equ	0xFF6
  2786                           tablat	equ	0xFF5
  2787                           intcon	equ	0xFF2
  2788                           postinc0	equ	0xFEE
  2789                           wreg	equ	0xFE8
  2790                           postdec1	equ	0xFE5
  2791                           fsr1l	equ	0xFE1
  2792                           status	equ	0xFD8
  2793                           
  2794 ;; *************** function _PWM1_LoadDutyValue *****************
  2795 ;; Defined at:
  2796 ;;		line 80 in file "mcc_generated_files/pwm1.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  dutyValue       2   16[COMRAM] unsigned int 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2814 ;;Total ram usage:        2 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    2
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text22
  2825  0008B8                     __ptext22:
  2826                           	opt stack 0
  2827  0008B8                     _PWM1_LoadDutyValue:
  2828                           	opt stack 28
  2829                           
  2830                           ;pwm1.c: 82: dutyValue &= 0x03FF;
  2831                           
  2832                           ;incstack = 0
  2833  0008B8  0EFF               	movlw	255
  2834  0008BA  1611               	andwf	PWM1_LoadDutyValue@dutyValue,f,c
  2835  0008BC  0E03               	movlw	3
  2836  0008BE  1612               	andwf	PWM1_LoadDutyValue@dutyValue+1,f,c
  2837                           
  2838                           ;pwm1.c: 85: if(CCP1CONbits.FMT)
  2839  0008C0  A8AC               	btfss	4012,4,c	;volatile
  2840  0008C2  D00B               	goto	l1767
  2841                           
  2842                           ;pwm1.c: 86: {
  2843                           ;pwm1.c: 87: dutyValue <<= 6;
  2844  0008C4  0E06               	movlw	6
  2845  0008C6                     u955:
  2846  0008C6  90D8               	bcf	status,0,c
  2847  0008C8  3611               	rlcf	PWM1_LoadDutyValue@dutyValue,f,c
  2848  0008CA  3612               	rlcf	PWM1_LoadDutyValue@dutyValue+1,f,c
  2849  0008CC  2EE8               	decfsz	wreg,f,c
  2850  0008CE  D7FB               	goto	u955
  2851                           
  2852                           ;pwm1.c: 88: CCPR1H = dutyValue >> 8;
  2853  0008D0  5012               	movf	PWM1_LoadDutyValue@dutyValue+1,w,c
  2854  0008D2  6EAB               	movwf	4011,c	;volatile
  2855                           
  2856                           ;pwm1.c: 89: CCPR1L = dutyValue;
  2857  0008D4  C011  FFAA         	movff	PWM1_LoadDutyValue@dutyValue,4010	;volatile
  2858                           
  2859                           ;pwm1.c: 90: }
  2860  0008D8  0012               	return	
  2861  0008DA                     l1767:
  2862                           
  2863                           ;pwm1.c: 91: else
  2864                           ;pwm1.c: 92: {
  2865                           ;pwm1.c: 93: CCPR1H = dutyValue >> 8;
  2866  0008DA  5012               	movf	PWM1_LoadDutyValue@dutyValue+1,w,c
  2867  0008DC  6EAB               	movwf	4011,c	;volatile
  2868                           
  2869                           ;pwm1.c: 94: CCPR1L = dutyValue;
  2870  0008DE  C011  FFAA         	movff	PWM1_LoadDutyValue@dutyValue,4010	;volatile
  2871  0008E2  0012               	return	
  2872  0008E4                     __end_of_PWM1_LoadDutyValue:
  2873                           	opt stack 0
  2874                           tblptru	equ	0xFF8
  2875                           tblptrh	equ	0xFF7
  2876                           tblptrl	equ	0xFF6
  2877                           tablat	equ	0xFF5
  2878                           intcon	equ	0xFF2
  2879                           postinc0	equ	0xFEE
  2880                           wreg	equ	0xFE8
  2881                           postdec1	equ	0xFE5
  2882                           fsr1l	equ	0xFE1
  2883                           status	equ	0xFD8
  2884                           
  2885 ;; *************** function _INTERRUPT_InterruptManager *****************
  2886 ;; Defined at:
  2887 ;;		line 52 in file "main.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;		None
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;		None
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1    wreg      void 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2, cstack
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2903 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2904 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2905 ;;Total ram usage:       14 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; Hardware stack levels required when called:    1
  2908 ;; This function calls:
  2909 ;;		_TMR1_WriteTimer
  2910 ;;		i2_TMR1_StartTimer
  2911 ;; This function is called by:
  2912 ;;		Interrupt level 2
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	intcode
  2917  000008                     __pintcode:
  2918                           	opt stack 0
  2919  000008                     _INTERRUPT_InterruptManager:
  2920                           	opt stack 26
  2921                           
  2922                           ;incstack = 0
  2923  000008  8236               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2924  00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  2925  00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2926  000012  CFE9 F005          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2927  000016  CFEA F006          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2928  00001A  CFE1 F007          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2929  00001E  CFE2 F008          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2930  000022  CFD9 F009          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2931  000026  CFDA F00A          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2932  00002A  CFF3 F00B          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2933  00002E  CFF4 F00C          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2934  000032  CFF6 F00D          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2935  000036  CFF7 F00E          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2936  00003A  CFF8 F00F          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2937  00003E  CFF5 F010          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2938                           
  2939                           ;main.c: 55: if(INTCONbits.PEIE == 1 && PIE2bits.ZCDIE == 1 && PIR2bits.ZCDIF == 1)
  2940  000042  ACF2               	btfss	intcon,6,c	;volatile
  2941  000044  D015               	goto	i2l325
  2942  000046  010E               	movlb	14	; () banked
  2943  000048  ADC4               	btfss	196,6,b	;volatile
  2944  00004A  D012               	goto	i2l325
  2945                           
  2946                           ; BSR set to: 14
  2947  00004C  010E               	movlb	14	; () banked
  2948  00004E  ADCC               	btfss	204,6,b	;volatile
  2949  000050  D00F               	goto	i2l325
  2950                           
  2951                           ; BSR set to: 14
  2952                           ;main.c: 56: {
  2953                           ;main.c: 57: T1CONbits.TMR1ON = 0;
  2954  000052  90CF               	bcf	4047,0,c	;volatile
  2955                           
  2956                           ;main.c: 58: timer_value = TMR1;
  2957  000054  CFCD F02A          	movff	4045,_timer_value	;volatile
  2958  000058  CFCE F02B          	movff	4046,_timer_value+1	;volatile
  2959                           
  2960                           ; BSR set to: 14
  2961                           ;main.c: 59: TMR1_WriteTimer(0x0000);
  2962  00005C  0E00               	movlw	0
  2963  00005E  6E02               	movwf	TMR1_WriteTimer@timerVal+1,c
  2964  000060  0E00               	movlw	0
  2965  000062  6E01               	movwf	TMR1_WriteTimer@timerVal,c
  2966  000064  ECF0  F004         	call	_TMR1_WriteTimer	;wreg free
  2967                           
  2968                           ;main.c: 60: TMR1_StartTimer();
  2969  000068  EC25  F005         	call	i2_TMR1_StartTimer	;wreg free
  2970                           
  2971                           ;main.c: 61: PIR2bits.ZCDIF=0;
  2972  00006C  010E               	movlb	14	; () banked
  2973  00006E  9DCC               	bcf	204,6,b	;volatile
  2974  000070                     i2l325:
  2975  000070  C010  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2976  000074  C00F  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2977  000078  C00E  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2978  00007C  C00D  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2979  000080  C00C  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2980  000084  C00B  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2981  000088  C00A  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2982  00008C  C009  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2983  000090  C008  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2984  000094  C007  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2985  000098  C006  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2986  00009C  C005  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2987  0000A0  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2988  0000A4  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2989  0000A8  9236               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2990  0000AA  0011               	retfie		f
  2991  0000AC                     __end_of_INTERRUPT_InterruptManager:
  2992                           	opt stack 0
  2993                           pclatu	equ	0xFFB
  2994                           pclath	equ	0xFFA
  2995                           tblptru	equ	0xFF8
  2996                           tblptrh	equ	0xFF7
  2997                           tblptrl	equ	0xFF6
  2998                           tablat	equ	0xFF5
  2999                           prodh	equ	0xFF4
  3000                           prodl	equ	0xFF3
  3001                           intcon	equ	0xFF2
  3002                           postinc0	equ	0xFEE
  3003                           fsr0h	equ	0xFEA
  3004                           fsr0l	equ	0xFE9
  3005                           wreg	equ	0xFE8
  3006                           postdec1	equ	0xFE5
  3007                           fsr1h	equ	0xFE2
  3008                           fsr1l	equ	0xFE1
  3009                           fsr2h	equ	0xFDA
  3010                           fsr2l	equ	0xFD9
  3011                           status	equ	0xFD8
  3012                           
  3013 ;; *************** function i2_TMR1_StartTimer *****************
  3014 ;; Defined at:
  3015 ;;		line 18 in file "mcc_generated_files/tmr1.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;		None
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;		None
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      void 
  3022 ;; Registers used:
  3023 ;;		None
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3033 ;;Total ram usage:        0 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_INTERRUPT_InterruptManager
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text24
  3043  000A4A                     __ptext24:
  3044                           	opt stack 0
  3045  000A4A                     i2_TMR1_StartTimer:
  3046                           	opt stack 26
  3047                           
  3048                           ;tmr1.c: 20: T1CONbits.TMR1ON = 1;
  3049                           
  3050                           ;incstack = 0
  3051  000A4A  80CF               	bsf	4047,0,c	;volatile
  3052  000A4C  0012               	return		;funcret
  3053  000A4E                     __end_ofi2_TMR1_StartTimer:
  3054                           	opt stack 0
  3055                           pclatu	equ	0xFFB
  3056                           pclath	equ	0xFFA
  3057                           tblptru	equ	0xFF8
  3058                           tblptrh	equ	0xFF7
  3059                           tblptrl	equ	0xFF6
  3060                           tablat	equ	0xFF5
  3061                           prodh	equ	0xFF4
  3062                           prodl	equ	0xFF3
  3063                           intcon	equ	0xFF2
  3064                           postinc0	equ	0xFEE
  3065                           fsr0h	equ	0xFEA
  3066                           fsr0l	equ	0xFE9
  3067                           wreg	equ	0xFE8
  3068                           postdec1	equ	0xFE5
  3069                           fsr1h	equ	0xFE2
  3070                           fsr1l	equ	0xFE1
  3071                           fsr2h	equ	0xFDA
  3072                           fsr2l	equ	0xFD9
  3073                           status	equ	0xFD8
  3074                           
  3075 ;; *************** function _TMR1_WriteTimer *****************
  3076 ;; Defined at:
  3077 ;;		line 35 in file "mcc_generated_files/tmr1.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  timerVal        2    0[COMRAM] unsigned int 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3091 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3094 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3095 ;;Total ram usage:        2 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_INTERRUPT_InterruptManager
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text25
  3105  0009E0                     __ptext25:
  3106                           	opt stack 0
  3107  0009E0                     _TMR1_WriteTimer:
  3108                           	opt stack 26
  3109                           
  3110                           ;tmr1.c: 37: if (T1CONbits.nT1SYNC == 1)
  3111                           
  3112                           ;incstack = 0
  3113  0009E0  A4CF               	btfss	4047,2,c	;volatile
  3114  0009E2  D007               	goto	i2l1453
  3115                           
  3116                           ;tmr1.c: 38: {
  3117                           ;tmr1.c: 39: T1CONbits.TMR1ON = 0;
  3118  0009E4  90CF               	bcf	4047,0,c	;volatile
  3119                           
  3120                           ;tmr1.c: 40: TMR1H = (timerVal >> 8);
  3121  0009E6  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
  3122  0009E8  6ECE               	movwf	4046,c	;volatile
  3123                           
  3124                           ;tmr1.c: 41: TMR1L = timerVal;
  3125  0009EA  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
  3126                           
  3127                           ;tmr1.c: 42: T1CONbits.TMR1ON =1;
  3128  0009EE  80CF               	bsf	4047,0,c	;volatile
  3129                           
  3130                           ;tmr1.c: 43: }
  3131  0009F0  0012               	return	
  3132  0009F2                     i2l1453:
  3133                           
  3134                           ;tmr1.c: 44: else
  3135                           ;tmr1.c: 45: {
  3136                           ;tmr1.c: 46: TMR1H = (timerVal >> 8);
  3137  0009F2  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
  3138  0009F4  6ECE               	movwf	4046,c	;volatile
  3139                           
  3140                           ;tmr1.c: 47: TMR1L = timerVal;
  3141  0009F6  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
  3142  0009FA  0012               	return	
  3143  0009FC                     __end_of_TMR1_WriteTimer:
  3144                           	opt stack 0
  3145  0000                     pclatu	equ	0xFFB
  3146                           pclath	equ	0xFFA
  3147                           tblptru	equ	0xFF8
  3148                           tblptrh	equ	0xFF7
  3149                           tblptrl	equ	0xFF6
  3150                           tablat	equ	0xFF5
  3151                           prodh	equ	0xFF4
  3152                           prodl	equ	0xFF3
  3153                           intcon	equ	0xFF2
  3154                           postinc0	equ	0xFEE
  3155                           fsr0h	equ	0xFEA
  3156                           fsr0l	equ	0xFE9
  3157                           wreg	equ	0xFE8
  3158                           postdec1	equ	0xFE5
  3159                           fsr1h	equ	0xFE2
  3160                           fsr1l	equ	0xFE1
  3161                           fsr2h	equ	0xFDA
  3162                           fsr2l	equ	0xFD9
  3163                           status	equ	0xFD8
  3164                           pclatu	equ	0xFFB
  3165                           pclath	equ	0xFFA
  3166                           tblptru	equ	0xFF8
  3167                           tblptrh	equ	0xFF7
  3168                           tblptrl	equ	0xFF6
  3169                           tablat	equ	0xFF5
  3170                           prodh	equ	0xFF4
  3171                           prodl	equ	0xFF3
  3172                           intcon	equ	0xFF2
  3173                           postinc0	equ	0xFEE
  3174                           fsr0h	equ	0xFEA
  3175                           fsr0l	equ	0xFE9
  3176                           wreg	equ	0xFE8
  3177                           postdec1	equ	0xFE5
  3178                           fsr1h	equ	0xFE2
  3179                           fsr1l	equ	0xFE1
  3180                           fsr2h	equ	0xFDA
  3181                           fsr2l	equ	0xFD9
  3182                           status	equ	0xFD8
  3183                           
  3184                           	psect	rparam
  3185  0000                     pclatu	equ	0xFFB
  3186                           pclath	equ	0xFFA
  3187                           tblptru	equ	0xFF8
  3188                           tblptrh	equ	0xFF7
  3189                           tblptrl	equ	0xFF6
  3190                           tablat	equ	0xFF5
  3191                           prodh	equ	0xFF4
  3192                           prodl	equ	0xFF3
  3193                           intcon	equ	0xFF2
  3194                           postinc0	equ	0xFEE
  3195                           fsr0h	equ	0xFEA
  3196                           fsr0l	equ	0xFE9
  3197                           wreg	equ	0xFE8
  3198                           postdec1	equ	0xFE5
  3199                           fsr1h	equ	0xFE2
  3200                           fsr1l	equ	0xFE1
  3201                           fsr2h	equ	0xFDA
  3202                           fsr2l	equ	0xFD9
  3203                           status	equ	0xFD8
  3204                           
  3205                           	psect	temp
  3206  000036                     btemp:
  3207                           	opt stack 0
  3208  000036                     	ds	1
  3209  0000                     int$flags	set	btemp
  3210                           pclatu	equ	0xFFB
  3211                           pclath	equ	0xFFA
  3212                           tblptru	equ	0xFF8
  3213                           tblptrh	equ	0xFF7
  3214                           tblptrl	equ	0xFF6
  3215                           tablat	equ	0xFF5
  3216                           prodh	equ	0xFF4
  3217                           prodl	equ	0xFF3
  3218                           intcon	equ	0xFF2
  3219                           postinc0	equ	0xFEE
  3220                           fsr0h	equ	0xFEA
  3221                           fsr0l	equ	0xFE9
  3222                           wreg	equ	0xFE8
  3223                           postdec1	equ	0xFE5
  3224                           fsr1h	equ	0xFE2
  3225                           fsr1l	equ	0xFE1
  3226                           fsr2h	equ	0xFDA
  3227                           fsr2l	equ	0xFD9
  3228                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         8
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      53
    BANK0           160     30      30
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0

Pointer List with Targets:

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMRAM

    _main->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___ftpack
    ___ftge->___lwtoft
    _T_4->_Delay_tenthSec
    _S_4->_Delay_tenthSec
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   11774
                                              0 BANK0     30    30      0
                     _Delay_tenthSec
                    _PWM1_Initialize
                 _PWM1_LoadDutyValue
                  _SYSTEM_Initialize
                                _S_4
                                _T_4
                     _ZCD_Initialize
                             ___ftge
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    3607
                                             24 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    4332
                                             24 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2344
                                             16 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6    2662
                                             27 COMRAM     9     3      6
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _T_4                                                  0     0      0      46
                     _Delay_tenthSec
                            _phase_1
                            _phase_2
                            _phase_3
                            _phase_4
 ---------------------------------------------------------------------------------
 (1) _S_4                                                  0     0      0      46
                     _Delay_tenthSec
                            _phase_1
                            _phase_2
                            _phase_3
                            _phase_4
 ---------------------------------------------------------------------------------
 (2) _phase_4                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _phase_3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _phase_2                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _phase_1                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Delay_tenthSec                                       4     4      0      46
                                             16 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _TMR1_Initialize
                    _TMR4_Initialize
                     _ZCD_Initialize
 ---------------------------------------------------------------------------------
 (1) _ZCD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (3) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             16 COMRAM     2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   2     0      2     207
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0     152
                                              2 COMRAM    14    14      0
                    _TMR1_WriteTimer
                  i2_TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (5) i2_TMR1_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_WriteTimer                                      2     0      2     152
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_tenthSec
   _PWM1_Initialize
   _PWM1_LoadDutyValue
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR4_Initialize
       _TMR4_Start
     _ZCD_Initialize
   _S_4
     _Delay_tenthSec
     _phase_1
     _phase_2
     _phase_3
     _phase_4
   _T_4
     _Delay_tenthSec
     _phase_1
     _phase_2
     _phase_3
     _phase_4
   _ZCD_Initialize
   ___ftge
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
   ___lwtoft
     ___ftpack

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_WriteTimer
   i2_TMR1_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      1E       5       18.8%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      35       1       56.4%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      53       6        0.0%
DATA                 0      0      53       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue May  2 03:37:38 2017

                                  _n 0028                                    _y 0032  
                        __CFG_CP$OFF 000000                          __CFG_LVP$ON 000000  
                                l332 027E                                  l336 036A  
                                l338 042A                                  l572 0796  
                                _GIE 007F97                                  _PR4 000FB6  
                       __CFG_CPD$OFF 000000                                  u830 0704  
                                u961 0566                                  u955 08C6  
                                u981 058E                                  _S_4 090E  
                                _T_4 08E4                      _timer1ReloadVal 0034  
             __end_of_Delay_tenthSec 0980                      ?_ZCD_Initialize 0001  
                                wreg 000FE8                                 ?_S_4 0001  
                               ?_T_4 0001                         __CFG_ZCD$OFF 000000  
                               l1711 0718                                 l1801 057E  
                               l1723 0764                                 l1715 0726  
                               l1725 0782                                 l1717 0730  
                               l1821 05D8                                 l1901 024A  
                               l1727 078C                                 l1719 074E  
                               l1831 0600                                 l1807 05A6  
                               l1825 05E8                                 l1913 02DE  
                               l1851 0816                                 l1835 0610  
                               l1693 0964                                 l1917 0336  
                               l1767 08DA                                 l1847 07E6  
                               l1943 048A                                 l1697 0976  
                               l1857 0842                                 l1929 03CA  
                               l1957 0520                                 l1949 04C0  
            __end_of_PWM1_Initialize 0A12                                 u1217 096A  
                               _LATA 000F83                                 _LATB 000F84  
                               _LATC 000F85                                 _LATD 000F86  
                               _LATE 000F87                          main@greater 0060  
                               _T4PR 000FB6                                 _TMR1 000FCD  
                               _TMR4 000FB5                                 _WPUA 000F10  
                               _WPUB 000F18                                 _WPUC 000F20  
                               _WPUD 000F25                                 _WPUE 000F2D  
                      __CFG_FCMEN$ON 000000                                 _main 00B0  
                       ___ftpack@arg 0011                         ___ftpack@exp 0014  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 fsr0l 000FE9  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0036                                 prodh 000FF4  
                               prodl 000FF3                                 start 00AC  
                      __CFG_CSWEN$ON 000000                         ___ftmul@cntr 0026  
                       ___param_bank 000000                         ___ftmul@sign 0027  
                      __CFG_SCANE$ON 000000                                ??_S_4 0014  
                              ??_T_4 0014       __size_of_OSCILLATOR_Initialize 0020  
      __end_of_OSCILLATOR_Initialize 09C2                                ?_main 0001  
                      __CFG_WDTE$OFF 000000                      _TMR1_StartTimer 0A42  
                    __end_of___ftmul 064A                                _T1CLK 000FD2  
                              _T1CON 000FCF                                _T4CON 000FB7  
                              _T4HLT 000FB8                       __CFG_DEBUG$OFF 000000  
                              _T4TMR 000FB5                                _T4RST 000FBA  
                              i2l325 0070                                _OSCEN 000EDC  
                              _TMR1H 000FCE                                _TMR1L 000FCD  
                              _TRISA 000F88                                _TRISB 000F89  
                              _TRISC 000F8A                                _TRISD 000F8B  
                              _TRISE 000F8C                      ?_Delay_tenthSec 0001  
                      __CFG_WRT0$OFF 000000                      _TMR4_Initialize 0980  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                       __CFG_EBTR0$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                                _delay 0030  
                        ?_TMR4_Start 0001                      __end_of_phase_1 0A3A  
                    __end_of_phase_2 0A34                      __end_of_phase_3 0A2E  
                    __end_of_phase_4 0A28                   __CFG_MCLRE$EXTMCLR 000000  
                      ___ftpack@sign 0015              __end_of_TMR1_Initialize 08B8  
                              pclath 000FFA                                tablat 000FF5  
                              status 000FD8                      _TMR1_WriteTimer 09E0  
                    __initialization 0846                         __end_of_main 0556  
        ?_INTERRUPT_InterruptManager 0001                               ??_main 0028  
                      __activetblptr 000002                               _CCPR1H 000FAB  
                             _CCPR1L 000FAA                               _ANSELA 000F11  
                             _ANSELB 000F19                               _ANSELC 000F21  
                             _ANSELD 000F26                               _ANSELE 000F2E  
                   __end_of___ftpack 07B6                               _T1GATE 000FD1  
                             _T1GCON 000FD0                               _RC0PPS 000EF7  
                      main@need_cnts 007B              TMR1_WriteTimer@timerVal 0001  
                   ?_PWM1_Initialize 0001                               _ODCONA 000F0F  
                             _ODCONB 000F17                               _ODCONC 000F1F  
                             _ODCOND 000F24                               _ODCONE 000F2C  
                     __CFG_WDTCCS$SC 000000                               i2l1453 09F2  
                             _INTCON 000FF2                     __end_of___lwtoft 095C  
                             _OSCFRQ 000EDE                               _ZCDCON 000F32  
                     __CFG_PWRTE$OFF 000000                       __CFG_XINST$OFF 000000  
                             ___ftge 07B6              __end_of_TMR1_StartTimer 0A46  
                     __CFG_STVREN$ON 000000                            ??___ftmul 001F  
                __size_of_TMR4_Start 0004              __end_of_TMR4_Initialize 09A2  
                             clear_0 086C                ___ftmul@f3_as_product 0023  
                       __pdataCOMRAM 0030                            ??_phase_1 0011  
                          ??_phase_2 0011                            ??_phase_3 0011  
                          ??_phase_4 0011                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
            __end_of_TMR1_WriteTimer 09FC        __size_of_INTERRUPT_Initialize 0004  
                   ?_TMR1_Initialize 0001                    _SYSTEM_Initialize 09C2  
                         __accesstop 0060              __end_of__initialization 0872  
                         ___ftge@ff1 001C                           ___ftge@ff2 001F  
                 ?_SYSTEM_Initialize 0001                        ___rparam_used 000001  
                 main@over_need_cnts 0078          PWM1_LoadDutyValue@dutyValue 0011  
                         ___ftmul@f1 0019                           ___ftmul@f2 001C  
                     __pcstackCOMRAM 0001                  ??_SYSTEM_Initialize 0013  
                 _PWM1_LoadDutyValue 08B8                     ??_ZCD_Initialize 0011  
                     main@f_boundary 0069                           ___lwtoft@c 0019  
                     main@g_boundary 0063                  ?_PWM1_LoadDutyValue 0011  
          __end_of_SYSTEM_Initialize 09E0                           __pnvCOMRAM 0034  
              _TMR4_InterruptHandler 002C                 ??_PWM1_LoadDutyValue 0013  
                            ?___ftge 001C                     ?_TMR1_StartTimer 0001  
                    __CFG_PPS1WAY$ON 000000                              _CCP1CON 000FAC  
                   ??_Delay_tenthSec 0011                     ?_TMR4_Initialize 0001  
                          ?___ftpack 0011                            ?___lwtoft 0019  
                            _OSCCON1 000ED8                              _OSCCON3 000EDA  
                            _OSCTUNE 000EDD                              _PPSLOCK 000EA0  
                       ??_TMR4_Start 0011                     ?_TMR1_WriteTimer 0001  
                            __Hparam 0000                              __Lparam 0000  
         __CFG_RSTOSC$HFINTOSC_64MHZ 000000                      __size_of___ftge 0090  
                            ___ftmul 0556                              __pcinit 0846  
                         ??___ftpack 0016                   __end_of_TMR4_Start 0A42  
                            __ramtop 0F00                              __ptext0 00B0  
                            __ptext1 0938                              __ptext2 0556  
                            __ptext3 0708                              __ptext4 07B6  
                            __ptext5 08E4                              __ptext6 090E  
                            __ptext7 0A22                              __ptext8 0A28  
                            __ptext9 0A2E                           ??___lwtoft 001C  
                          _T1CONbits 000FCF                         __size_of_S_4 002A  
                       __size_of_T_4 002A                _OSCILLATOR_Initialize 09A2  
                            _phase_1 0A34                              _phase_2 0A2E  
                            _phase_3 0A28                              _phase_4 0A22  
                          _T4CONbits 000FB7             ??_PIN_MANAGER_Initialize 0011  
                          _T4HLTbits 000FB8           __size_of_SYSTEM_Initialize 001E  
                main@over_f_boundary 0075                 end_of_initialization 0872  
                          _T4RSTbits 000FBA                  main@over_g_boundary 006F  
                      __Lmediumconst 0000                       main@over_fewer 0072  
                            postdec1 000FE5                              postinc0 000FEE  
              __CFG_WDTCPS$WDTCPS_31 000000                     __CFG_FEXTOSC$OFF 000000  
                        _CCP1CONbits 000FAC             __size_of_PWM1_Initialize 0016  
                        ___ftmul@exp 0022         __end_of_INTERRUPT_Initialize 0A4A  
                     __end_of___ftge 0846                        __pidataCOMRAM 0A3A  
             ?_OSCILLATOR_Initialize 0001                  start_initialization 0846  
                        __end_of_S_4 0938                          __end_of_T_4 090E  
    __size_of_PIN_MANAGER_Initialize 00BE                     __CFG_LPBOREN$OFF 000000  
           __size_of_TMR1_Initialize 0038                             ??___ftge 0022  
                        _CCPTMRSbits 000FAE                    __size_of___ftpack 00AE  
                        __pbssCOMRAM 0028                    __size_of___lwtoft 0024  
                      __pcstackBANK0 0060          __size_of_PWM1_LoadDutyValue 002C  
             _PIN_MANAGER_Initialize 064A                            __pintcode 0008  
                           ?___ftmul 0019                    ??_PWM1_Initialize 0011  
       ??_INTERRUPT_InterruptManager 0003             __size_of_TMR1_StartTimer 0004  
                           ?_phase_1 0001                             ?_phase_2 0001  
                           ?_phase_3 0001                             ?_phase_4 0001  
           __size_of_TMR4_Initialize 0022              __size_of_ZCD_Initialize 0010  
                           _T4CLKCON 000FB9                 _INTERRUPT_Initialize 0A46  
                           _PIE2bits 000EC4                  __CFG_BORV$VBOR_2P45 000000  
                        _T4INPPSbits 000EAC             __size_of_TMR1_WriteTimer 001C  
__size_of_INTERRUPT_InterruptManager 00A4                             _PIR2bits 000ECC  
                           _PIR4bits 000ECE                    ??_TMR1_Initialize 0011  
                          main@fewer 0066                    i2_TMR1_StartTimer 0A4A  
                 ?i2_TMR1_StartTimer 0001              __size_of_Delay_tenthSec 0024  
                          copy_data0 085A                ?_INTERRUPT_Initialize 0001  
                ??i2_TMR1_StartTimer 0001                             __Hrparam 0000  
                           __Lrparam 0000                   __CFG_BOREN$SBORDIS 000000  
            ??_OSCILLATOR_Initialize 0011                     __size_of___ftmul 00F4  
                   main@over_greater 006C                             ___ftpack 0708  
          __end_ofi2_TMR1_StartTimer 0A4E                             ___lwtoft 0938  
              _TMR1_InterruptHandler 002E                     __size_of_phase_1 0006  
                   __size_of_phase_2 0006                     __size_of_phase_3 0006  
                   __size_of_phase_4 0006                             __ptext10 0A34  
                           __ptext11 095C                             __ptext20 09A2  
                           __ptext12 09C2                             __ptext21 0A46  
                           __ptext13 0A12                           _T1GCONbits 000FD0  
                           __ptext22 08B8                             __ptext14 0980  
                           __ptext15 0A3E                             __ptext24 0A4A  
                           __ptext16 0880                             __ptext25 09E0  
                           __ptext17 0A42                             __ptext18 09FC  
                           __ptext19 064A                    ??_TMR1_StartTimer 0011  
                  ??_TMR4_Initialize 0011                        __size_of_main 04A6  
               __CFG_WDTCWS$WDTCWS_7 000000                             int$flags 0036  
 __end_of_INTERRUPT_InterruptManager 00AC           _INTERRUPT_InterruptManager 0008  
                  ??_TMR1_WriteTimer 0003          PIN_MANAGER_Initialize@state 0011  
                         _INTCONbits 000FF2                       _ZCD_Initialize 0A12  
             ??_INTERRUPT_Initialize 0011                     Delay_tenthSec@ds 0012  
                           intlevel2 0000              ?_PIN_MANAGER_Initialize 0001  
                  __CFG_CLKOUTEN$OFF 000000                          _PPSLOCKbits 000EA0  
                    _PWM1_Initialize 09FC                      Delay_tenthSec@i 0013  
         __size_ofi2_TMR1_StartTimer 0004                           _ZCDCONbits 000F32  
             __end_of_ZCD_Initialize 0A22                       _Delay_tenthSec 095C  
                        _timer_value 002A                           _TMR4_Start 0A3E  
     __end_of_PIN_MANAGER_Initialize 0708           __end_of_PWM1_LoadDutyValue 08E4  
                    _TMR1_Initialize 0880  
